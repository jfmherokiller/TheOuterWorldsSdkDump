// TheOuterWorlds SDK

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

#include "Indi_Indiana_parameters.hpp"

namespace SDK
{
//---------------------------------------------------------------------------
//Functions
//---------------------------------------------------------------------------

// Function Indiana.IndianaUserWidget.StartMinimize
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaUserWidget::STATIC_StartMinimize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.StartMinimize");

	UIndianaUserWidget_StartMinimize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUserWidget.StartMaximize
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaUserWidget::STATIC_StartMaximize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.StartMaximize");

	UIndianaUserWidget_StartMaximize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUserWidget.StartIntro
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaUserWidget::STATIC_StartIntro()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.StartIntro");

	UIndianaUserWidget_StartIntro_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUserWidget.SetDefaultUserFocus
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaUserWidget::STATIC_SetDefaultUserFocus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.SetDefaultUserFocus");

	UIndianaUserWidget_SetDefaultUserFocus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUserWidget.RestoreOrSetDefaultUserFocus
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaUserWidget::STATIC_RestoreOrSetDefaultUserFocus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.RestoreOrSetDefaultUserFocus");

	UIndianaUserWidget_RestoreOrSetDefaultUserFocus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUserWidget.OnStartOutroCb
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaUserWidget::STATIC_OnStartOutroCb()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.OnStartOutroCb");

	UIndianaUserWidget_OnStartOutroCb_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUserWidget.OnStartMinimizeCb
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaUserWidget::STATIC_OnStartMinimizeCb()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.OnStartMinimizeCb");

	UIndianaUserWidget_OnStartMinimizeCb_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUserWidget.OnStartMaximizeCb
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaUserWidget::STATIC_OnStartMaximizeCb()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.OnStartMaximizeCb");

	UIndianaUserWidget_OnStartMaximizeCb_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUserWidget.OnStartIntroCb
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaUserWidget::STATIC_OnStartIntroCb()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.OnStartIntroCb");

	UIndianaUserWidget_OnStartIntroCb_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUserWidget.OnOutro
// ()
// Parameters:
// struct FScriptDelegate         AnimationCompleteCallback      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaUserWidget::OnOutro(const struct FScriptDelegate& AnimationCompleteCallback)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.OnOutro");

	UIndianaUserWidget_OnOutro_Params params;
	params.AnimationCompleteCallback = AnimationCompleteCallback;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaUserWidget.OnMinimize
// ()
// Parameters:
// struct FScriptDelegate         AnimationCompleteCallback      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaUserWidget::OnMinimize(const struct FScriptDelegate& AnimationCompleteCallback)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.OnMinimize");

	UIndianaUserWidget_OnMinimize_Params params;
	params.AnimationCompleteCallback = AnimationCompleteCallback;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaUserWidget.OnMaximize
// ()
// Parameters:
// struct FScriptDelegate         AnimationCompleteCallback      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaUserWidget::OnMaximize(const struct FScriptDelegate& AnimationCompleteCallback)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.OnMaximize");

	UIndianaUserWidget_OnMaximize_Params params;
	params.AnimationCompleteCallback = AnimationCompleteCallback;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaUserWidget.OnIntro
// ()
// Parameters:
// struct FScriptDelegate         AnimationCompleteCallback      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaUserWidget::OnIntro(const struct FScriptDelegate& AnimationCompleteCallback)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.OnIntro");

	UIndianaUserWidget_OnIntro_Params params;
	params.AnimationCompleteCallback = AnimationCompleteCallback;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaUserWidget.OnInputDeviceChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bUsingGamepad                  (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaUserWidget::STATIC_OnInputDeviceChanged(bool bUsingGamepad)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.OnInputDeviceChanged");

	UIndianaUserWidget_OnInputDeviceChanged_Params params;
	params.bUsingGamepad = bUsingGamepad;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUserWidget.OnFinalizeOutroCb
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaUserWidget::STATIC_OnFinalizeOutroCb()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.OnFinalizeOutroCb");

	UIndianaUserWidget_OnFinalizeOutroCb_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUserWidget.OnFinalizeMinimizeCb
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaUserWidget::STATIC_OnFinalizeMinimizeCb()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.OnFinalizeMinimizeCb");

	UIndianaUserWidget_OnFinalizeMinimizeCb_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUserWidget.OnFinalizeMinimize
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaUserWidget::STATIC_OnFinalizeMinimize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.OnFinalizeMinimize");

	UIndianaUserWidget_OnFinalizeMinimize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUserWidget.OnFinalizeMaximizeCb
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaUserWidget::STATIC_OnFinalizeMaximizeCb()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.OnFinalizeMaximizeCb");

	UIndianaUserWidget_OnFinalizeMaximizeCb_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUserWidget.OnFinalizeMaximize
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaUserWidget::STATIC_OnFinalizeMaximize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.OnFinalizeMaximize");

	UIndianaUserWidget_OnFinalizeMaximize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUserWidget.OnFinalizeIntroCb
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaUserWidget::STATIC_OnFinalizeIntroCb()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.OnFinalizeIntroCb");

	UIndianaUserWidget_OnFinalizeIntroCb_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUserWidget.OnCounterZero
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaUserWidget::STATIC_OnCounterZero()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.OnCounterZero");

	UIndianaUserWidget_OnCounterZero_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUserWidget.OnCounterNonZero
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaUserWidget::STATIC_OnCounterNonZero()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.OnCounterNonZero");

	UIndianaUserWidget_OnCounterNonZero_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUserWidget.OnCancelShutdown
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaUserWidget::STATIC_OnCancelShutdown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.OnCancelShutdown");

	UIndianaUserWidget_OnCancelShutdown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUserWidget.OnCancelMinimize
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaUserWidget::STATIC_OnCancelMinimize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.OnCancelMinimize");

	UIndianaUserWidget_OnCancelMinimize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUserWidget.ObjectRefHasReferencers
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaUserWidget::ObjectRefHasReferencers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.ObjectRefHasReferencers");

	UIndianaUserWidget_ObjectRefHasReferencers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaUserWidget.IsShuttingDown
// (Final)
// Parameters:
// bool                           bIncludeTransitioning          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaUserWidget::IsShuttingDown(bool bIncludeTransitioning)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.IsShuttingDown");

	UIndianaUserWidget_IsShuttingDown_Params params;
	params.bIncludeTransitioning = bIncludeTransitioning;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaUserWidget.IsMinimized
// (Final)
// Parameters:
// bool                           bIncludeTransitioning          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaUserWidget::IsMinimized(bool bIncludeTransitioning)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.IsMinimized");

	UIndianaUserWidget_IsMinimized_Params params;
	params.bIncludeTransitioning = bIncludeTransitioning;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaUserWidget.IsMaximized
// (Final)
// Parameters:
// bool                           bIncludeTransitioning          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaUserWidget::IsMaximized(bool bIncludeTransitioning)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.IsMaximized");

	UIndianaUserWidget_IsMaximized_Params params;
	params.bIncludeTransitioning = bIncludeTransitioning;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaUserWidget.GetOpenState
// ()
// Parameters:
// EWidgetOpenState               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EWidgetOpenState UIndianaUserWidget::GetOpenState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.GetOpenState");

	UIndianaUserWidget_GetOpenState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaUserWidget.GetIndianaUI
// ()
// Parameters:
// class AIndianaUI*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AIndianaUI* UIndianaUserWidget::GetIndianaUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUserWidget.GetIndianaUI");

	UIndianaUserWidget_GetIndianaUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.AbilityOverviewChildWidget.OnAbilityCooldownComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UAbilityOverviewChildWidget::STATIC_OnAbilityCooldownComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AbilityOverviewChildWidget.OnAbilityCooldownComplete");

	UAbilityOverviewChildWidget_OnAbilityCooldownComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AbilityOverviewChildWidget.ModifyPulseScale
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          PulseScale                     (Parm, ZeroConstructor, IsPlainOldData)

void UAbilityOverviewChildWidget::STATIC_ModifyPulseScale(float PulseScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AbilityOverviewChildWidget.ModifyPulseScale");

	UAbilityOverviewChildWidget_ModifyPulseScale_Params params;
	params.PulseScale = PulseScale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AbilityOverviewDetailWidget.OnAbilityUnlockChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EUnlockAbility                 Ability                        (Parm, ZeroConstructor, IsPlainOldData)

void UAbilityOverviewDetailWidget::STATIC_OnAbilityUnlockChange(EUnlockAbility Ability)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AbilityOverviewDetailWidget.OnAbilityUnlockChange");

	UAbilityOverviewDetailWidget_OnAbilityUnlockChange_Params params;
	params.Ability = Ability;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AbilityOverviewWidget.OnPlayerCombatStateChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           IsPlayerInCombat               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void UAbilityOverviewWidget::STATIC_OnPlayerCombatStateChange(bool IsPlayerInCombat, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AbilityOverviewWidget.OnPlayerCombatStateChange");

	UAbilityOverviewWidget_OnPlayerCombatStateChange_Params params;
	params.IsPlayerInCombat = IsPlayerInCombat;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AbilityOverviewWidget.OnHUDVisibilityChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void UAbilityOverviewWidget::STATIC_OnHUDVisibilityChanged(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AbilityOverviewWidget.OnHUDVisibilityChanged");

	UAbilityOverviewWidget_OnHUDVisibilityChanged_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AbilityOverviewWidget.OnHUDModeChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UAbilityOverviewWidget::STATIC_OnHUDModeChanged(int ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AbilityOverviewWidget.OnHUDModeChanged");

	UAbilityOverviewWidget_OnHUDModeChanged_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AbilityOverviewWidget.OnCompanionAbilityModeChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UAbilityOverviewWidget::STATIC_OnCompanionAbilityModeChanged(int ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AbilityOverviewWidget.OnCompanionAbilityModeChanged");

	UAbilityOverviewWidget_OnCompanionAbilityModeChanged_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AbilityOverviewWidget.OnCompanionAbilityBindingModeChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UAbilityOverviewWidget::STATIC_OnCompanionAbilityBindingModeChanged(int ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AbilityOverviewWidget.OnCompanionAbilityBindingModeChanged");

	UAbilityOverviewWidget_OnCompanionAbilityBindingModeChanged_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AbilityOverviewWidget.OnCommandButtonPressed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EAbilityPosition               AbillityPosition               (Parm, ZeroConstructor, IsPlainOldData)

void UAbilityOverviewWidget::STATIC_OnCommandButtonPressed(EAbilityPosition AbillityPosition)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AbilityOverviewWidget.OnCommandButtonPressed");

	UAbilityOverviewWidget_OnCommandButtonPressed_Params params;
	params.AbillityPosition = AbillityPosition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AbilityOverviewWidget.OnAbilityUsed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UAbilityOverviewDetailWidget* Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// EAbilityPosition               AbilityPosition                (Parm, ZeroConstructor, IsPlainOldData)

void UAbilityOverviewWidget::STATIC_OnAbilityUsed(class UAbilityOverviewDetailWidget* Widget, EAbilityPosition AbilityPosition)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AbilityOverviewWidget.OnAbilityUsed");

	UAbilityOverviewWidget_OnAbilityUsed_Params params;
	params.Widget = Widget;
	params.AbilityPosition = AbilityPosition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AbilityOverviewWidget.OnAbilityCooldownTriggered
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EAbilityPosition               AbilityPosition                (Parm, ZeroConstructor, IsPlainOldData)

void UAbilityOverviewWidget::STATIC_OnAbilityCooldownTriggered(EAbilityPosition AbilityPosition)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AbilityOverviewWidget.OnAbilityCooldownTriggered");

	UAbilityOverviewWidget_OnAbilityCooldownTriggered_Params params;
	params.AbilityPosition = AbilityPosition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AbilityOverviewWidget.OnAbilityCooldownStarted
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EAbilityPosition               AbilityPosition                (Parm, ZeroConstructor, IsPlainOldData)

void UAbilityOverviewWidget::STATIC_OnAbilityCooldownStarted(EAbilityPosition AbilityPosition)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AbilityOverviewWidget.OnAbilityCooldownStarted");

	UAbilityOverviewWidget_OnAbilityCooldownStarted_Params params;
	params.AbilityPosition = AbilityPosition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AbilityOverviewWidget.OnAbilityCooldownFinished
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EAbilityPosition               AbillityPosition               (Parm, ZeroConstructor, IsPlainOldData)

void UAbilityOverviewWidget::STATIC_OnAbilityCooldownFinished(EAbilityPosition AbillityPosition)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AbilityOverviewWidget.OnAbilityCooldownFinished");

	UAbilityOverviewWidget_OnAbilityCooldownFinished_Params params;
	params.AbillityPosition = AbillityPosition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AbilityOverviewWidget.OnAbilityCooldownEnded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EAbilityPosition               AbilityPosition                (Parm, ZeroConstructor, IsPlainOldData)

void UAbilityOverviewWidget::STATIC_OnAbilityCooldownEnded(EAbilityPosition AbilityPosition)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AbilityOverviewWidget.OnAbilityCooldownEnded");

	UAbilityOverviewWidget_OnAbilityCooldownEnded_Params params;
	params.AbilityPosition = AbilityPosition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AchievementsManager.ResetAchievements
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UAchievementsManager::STATIC_ResetAchievements()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AchievementsManager.ResetAchievements");

	UAchievementsManager_ResetAchievements_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AchievementsManager.OnWeaponSlotted
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UItem*                   Item                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UAchievementsManager::STATIC_OnWeaponSlotted(class UItem* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AchievementsManager.OnWeaponSlotted");

	UAchievementsManager_OnWeaponSlotted_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AchievementsManager.OnKillPreDeath
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Victim                         (Parm, ZeroConstructor, IsPlainOldData)

void UAchievementsManager::STATIC_OnKillPreDeath(class AActor* Victim)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AchievementsManager.OnKillPreDeath");

	UAchievementsManager_OnKillPreDeath_Params params;
	params.Victim = Victim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AchievementsManager.OnItemEquipped
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UItem*                   Item                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UAchievementsManager::STATIC_OnItemEquipped(class UItem* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AchievementsManager.OnItemEquipped");

	UAchievementsManager_OnItemEquipped_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AchievementsManager.OnActiveUserChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EActiveUserChangeType          ChangeType                     (Parm, ZeroConstructor, IsPlainOldData)

void UAchievementsManager::STATIC_OnActiveUserChanged(EActiveUserChangeType ChangeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AchievementsManager.OnActiveUserChanged");

	UAchievementsManager_OnActiveUserChanged_Params params;
	params.ChangeType = ChangeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AchievementsManager.IncrementAchievement
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   AchievementBPName              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void UAchievementsManager::STATIC_IncrementAchievement(const struct FName& AchievementBPName, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AchievementsManager.IncrementAchievement");

	UAchievementsManager_IncrementAchievement_Params params;
	params.AchievementBPName = AchievementBPName;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AchievementsManager.GameOver
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UAchievementsManager::STATIC_GameOver()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AchievementsManager.GameOver");

	UAchievementsManager_GameOver_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AchievementsManager.CompleteAchievementBP
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UAchievementDataAsset*   Achievement                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UAchievementsManager::STATIC_CompleteAchievementBP(class UAchievementDataAsset* Achievement)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AchievementsManager.CompleteAchievementBP");

	UAchievementsManager_CompleteAchievementBP_Params params;
	params.Achievement = Achievement;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AchievementsManager.CompleteAchievement
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   AchievementBPName              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UAchievementsManager::STATIC_CompleteAchievement(const struct FName& AchievementBPName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AchievementsManager.CompleteAchievement");

	UAchievementsManager_CompleteAchievement_Params params;
	params.AchievementBPName = AchievementBPName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ActorRenderWidget.OnMouseZoomOut
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UActorRenderWidget::STATIC_OnMouseZoomOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ActorRenderWidget.OnMouseZoomOut");

	UActorRenderWidget_OnMouseZoomOut_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ActorRenderWidget.OnMouseZoomIn
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UActorRenderWidget::STATIC_OnMouseZoomIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ActorRenderWidget.OnMouseZoomIn");

	UActorRenderWidget_OnMouseZoomIn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ActorRenderWidget.OnGamepadToggleFullZoom
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UActorRenderWidget::STATIC_OnGamepadToggleFullZoom()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ActorRenderWidget.OnGamepadToggleFullZoom");

	UActorRenderWidget_OnGamepadToggleFullZoom_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ActorRenderWidget.OnBorderMouseDown
// (BlueprintCosmetic, NetReliable)
// Parameters:
// struct FGeometry               MyGeometry                     (Parm, IsPlainOldData)
// struct FPointerEvent           MouseEvent                     (ConstParm, Parm, OutParm, ReferenceParm)
// struct FEventReply             ReturnValue                    (Parm, OutParm, ReturnParm)

struct FEventReply UActorRenderWidget::OnBorderMouseDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ActorRenderWidget.OnBorderMouseDown");

	UActorRenderWidget_OnBorderMouseDown_Params params;
	params.MyGeometry = MyGeometry;
	params.MouseEvent = MouseEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ActorRenderWidget.CanZoom
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UActorRenderWidget::CanZoom()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ActorRenderWidget.CanZoom");

	UActorRenderWidget_CanZoom_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.StatusEffect.ReceiveClearEffect
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)

void UStatusEffect::STATIC_ReceiveClearEffect(class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffect.ReceiveClearEffect");

	UStatusEffect_ReceiveClearEffect_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusEffect.ReceiveApplyEffect
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Ratio                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoredFromSave              (Parm, ZeroConstructor, IsPlainOldData)

void UStatusEffect::STATIC_ReceiveApplyEffect(class AActor* Target, float Ratio, bool bRestoredFromSave)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffect.ReceiveApplyEffect");

	UStatusEffect_ReceiveApplyEffect_Params params;
	params.Target = Target;
	params.Ratio = Ratio;
	params.bRestoredFromSave = bRestoredFromSave;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusEffect.GetStatusEffectOriginActor
// ()
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UStatusEffect::GetStatusEffectOriginActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffect.GetStatusEffectOriginActor");

	UStatusEffect_GetStatusEffectOriginActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.AIDefensiveActionsComponent.OnTakeDamage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FCauseDamageInfo        CauseDamageInfo                (ConstParm, Parm, OutParm, ReferenceParm)

void UAIDefensiveActionsComponent::STATIC_OnTakeDamage(const struct FCauseDamageInfo& CauseDamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AIDefensiveActionsComponent.OnTakeDamage");

	UAIDefensiveActionsComponent_OnTakeDamage_Params params;
	params.CauseDamageInfo = CauseDamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AIDetectionComponent.OnPlayerKill
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Victim                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FCauseDamageInfo        CauseDamageInfo                (ConstParm, Parm, OutParm, ReferenceParm)

void UAIDetectionComponent::STATIC_OnPlayerKill(class AActor* Victim, const struct FCauseDamageInfo& CauseDamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AIDetectionComponent.OnPlayerKill");

	UAIDetectionComponent_OnPlayerKill_Params params;
	params.Victim = Victim;
	params.CauseDamageInfo = CauseDamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AIDetectionComponent.OnPerceptionUpdate
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FAIStimulus             Stimulus                       (Parm)

void UAIDetectionComponent::STATIC_OnPerceptionUpdate(class AActor* Actor, const struct FAIStimulus& Stimulus)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AIDetectionComponent.OnPerceptionUpdate");

	UAIDetectionComponent_OnPerceptionUpdate_Params params;
	params.Actor = Actor;
	params.Stimulus = Stimulus;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AIDetectionComponent.OnDetectedNonHostileCombatStateChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bIsInCombat                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void UAIDetectionComponent::STATIC_OnDetectedNonHostileCombatStateChange(bool bIsInCombat, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AIDetectionComponent.OnDetectedNonHostileCombatStateChange");

	UAIDetectionComponent_OnDetectedNonHostileCombatStateChange_Params params;
	params.bIsInCombat = bIsInCombat;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AIInteractionComponent.OnNavigationPathUpdate
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UAIInteractionComponent::STATIC_OnNavigationPathUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AIInteractionComponent.OnNavigationPathUpdate");

	UAIInteractionComponent_OnNavigationPathUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AimAssistComponent.ToggleTrackQuickTarget
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UAimAssistComponent::STATIC_ToggleTrackQuickTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AimAssistComponent.ToggleTrackQuickTarget");

	UAimAssistComponent_ToggleTrackQuickTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AimAssistComponent.ToggleTargetStrafeLock
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UAimAssistComponent::STATIC_ToggleTargetStrafeLock()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AimAssistComponent.ToggleTargetStrafeLock");

	UAimAssistComponent_ToggleTargetStrafeLock_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AimAssistComponent.ToggleFriction
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UAimAssistComponent::STATIC_ToggleFriction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AimAssistComponent.ToggleFriction");

	UAimAssistComponent_ToggleFriction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AimAssistComponent.ToggleBulletMagnetism
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UAimAssistComponent::STATIC_ToggleBulletMagnetism()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AimAssistComponent.ToggleBulletMagnetism");

	UAimAssistComponent_ToggleBulletMagnetism_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AimAssistComponent.ToggleAimAssist
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UAimAssistComponent::STATIC_ToggleAimAssist()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AimAssistComponent.ToggleAimAssist");

	UAimAssistComponent_ToggleAimAssist_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AimAssistComponent.OnDifficultyChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EGameDifficulty                NewDifficulty                  (Parm, ZeroConstructor, IsPlainOldData)

void UAimAssistComponent::STATIC_OnDifficultyChanged(EGameDifficulty NewDifficulty)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AimAssistComponent.OnDifficultyChanged");

	UAimAssistComponent_OnDifficultyChanged_Params params;
	params.NewDifficulty = NewDifficulty;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AimAssistComponent.EnableAimAssist
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UAimAssistComponent::STATIC_EnableAimAssist(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AimAssistComponent.EnableAimAssist");

	UAimAssistComponent_EnableAimAssist_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AimAssistComponent.AimAssistVisualSpread
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void UAimAssistComponent::STATIC_AimAssistVisualSpread(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AimAssistComponent.AimAssistVisualSpread");

	UAimAssistComponent_AimAssistVisualSpread_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AimAssistComponent.AimAssistVisualFriction
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void UAimAssistComponent::STATIC_AimAssistVisualFriction(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AimAssistComponent.AimAssistVisualFriction");

	UAimAssistComponent_AimAssistVisualFriction_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AimAssistComponent.AimAssistVisualBulletMagnetism
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void UAimAssistComponent::STATIC_AimAssistVisualBulletMagnetism(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AimAssistComponent.AimAssistVisualBulletMagnetism");

	UAimAssistComponent_AimAssistVisualBulletMagnetism_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AimAssistComponent.AimAssistVisualAdhesion
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void UAimAssistComponent::STATIC_AimAssistVisualAdhesion(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AimAssistComponent.AimAssistVisualAdhesion");

	UAimAssistComponent_AimAssistVisualAdhesion_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaCharMovementComponent.OnBumped
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  SelfActor                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UIndianaCharMovementComponent::STATIC_OnBumped(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaCharMovementComponent.OnBumped");

	UIndianaCharMovementComponent_OnBumped_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AIMovementComponent.OnRestoredStateOfBeing
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EStateOfBeing                  RestoredStateOfBeing           (Parm, ZeroConstructor, IsPlainOldData)

void UAIMovementComponent::STATIC_OnRestoredStateOfBeing(EStateOfBeing RestoredStateOfBeing)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AIMovementComponent.OnRestoredStateOfBeing");

	UAIMovementComponent_OnRestoredStateOfBeing_Params params;
	params.RestoredStateOfBeing = RestoredStateOfBeing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AIMovementComponent.OnNewStateOfBeing
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EStateOfBeing                  NewStateOfBeing                (Parm, ZeroConstructor, IsPlainOldData)
// EStateOfBeing                  OldStateOfBeing                (Parm, ZeroConstructor, IsPlainOldData)

void UAIMovementComponent::STATIC_OnNewStateOfBeing(EStateOfBeing NewStateOfBeing, EStateOfBeing OldStateOfBeing)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AIMovementComponent.OnNewStateOfBeing");

	UAIMovementComponent_OnNewStateOfBeing_Params params;
	params.NewStateOfBeing = NewStateOfBeing;
	params.OldStateOfBeing = OldStateOfBeing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AIMovementComponent.OnExtremaEndOverlap
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void UAIMovementComponent::STATIC_OnExtremaEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AIMovementComponent.OnExtremaEndOverlap");

	UAIMovementComponent_OnExtremaEndOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AIMovementComponent.OnExtremaBeginOverlap
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UAIMovementComponent::STATIC_OnExtremaBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AIMovementComponent.OnExtremaBeginOverlap");

	UAIMovementComponent_OnExtremaBeginOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AISettingsComponent.OnUnequipWeapon
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UAISettingsComponent::STATIC_OnUnequipWeapon(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AISettingsComponent.OnUnequipWeapon");

	UAISettingsComponent_OnUnequipWeapon_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AISettingsComponent.OnEquipWeapon
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UAISettingsComponent::STATIC_OnEquipWeapon(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AISettingsComponent.OnEquipWeapon");

	UAISettingsComponent_OnEquipWeapon_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AlarmComponent.GetAlarmState
// ()
// Parameters:
// EAlarmState                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EAlarmState UAlarmComponent::GetAlarmState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AlarmComponent.GetAlarmState");

	UAlarmComponent_GetAlarmState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Item.SetPlayerOwnership
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bRemoveNonPlayerOwnership      (Parm, ZeroConstructor, IsPlainOldData)

void UItem::STATIC_SetPlayerOwnership(bool bRemoveNonPlayerOwnership)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Item.SetPlayerOwnership");

	UItem_SetPlayerOwnership_Params params;
	params.bRemoveNonPlayerOwnership = bRemoveNonPlayerOwnership;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Item.SetOwnership
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UClass*                  Faction                        (Parm, ZeroConstructor, IsPlainOldData)
// TSoftObjectPtr<class AActor>   Actor                          (Parm)
// bool                           bInPlayerOwned                 (Parm, ZeroConstructor, IsPlainOldData)

void UItem::STATIC_SetOwnership(class UClass* Faction, TSoftObjectPtr<class AActor> Actor, bool bInPlayerOwned)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Item.SetOwnership");

	UItem_SetOwnership_Params params;
	params.Faction = Faction;
	params.Actor = Actor;
	params.bInPlayerOwned = bInPlayerOwned;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Item.SetNonPlayerOwnership
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UClass*                  Faction                        (Parm, ZeroConstructor, IsPlainOldData)
// TSoftObjectPtr<class AActor>   Actor                          (Parm)
// bool                           bRemovePlayerOwnership         (Parm, ZeroConstructor, IsPlainOldData)

void UItem::STATIC_SetNonPlayerOwnership(class UClass* Faction, TSoftObjectPtr<class AActor> Actor, bool bRemovePlayerOwnership)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Item.SetNonPlayerOwnership");

	UItem_SetNonPlayerOwnership_Params params;
	params.Faction = Faction;
	params.Actor = Actor;
	params.bRemovePlayerOwnership = bRemovePlayerOwnership;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Item.IsPlayerOwned
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UItem::IsPlayerOwned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Item.IsPlayerOwned");

	UItem_IsPlayerOwned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Item.GetOwningFaction
// ()
// Parameters:
// class UClass*                  ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UItem::GetOwningFaction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Item.GetOwningFaction");

	UItem_GetOwningFaction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Item.GetOwningActor
// ()
// Parameters:
// TSoftObjectPtr<class AActor>   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

TSoftObjectPtr<class AActor> UItem::GetOwningActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Item.GetOwningActor");

	UItem_GetOwningActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Item.ClearPlayerOwnership
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UItem::STATIC_ClearPlayerOwnership()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Item.ClearPlayerOwnership");

	UItem_ClearPlayerOwnership_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Item.ClearNonPlayerOwnership
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UItem::STATIC_ClearNonPlayerOwnership()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Item.ClearNonPlayerOwnership");

	UItem_ClearNonPlayerOwnership_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Item.ClearAllOwnership
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UItem::STATIC_ClearAllOwnership()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Item.ClearAllOwnership");

	UItem_ClearAllOwnership_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Item.CanPlayerSafelyTake
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UItem::CanPlayerSafelyTake()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Item.CanPlayerSafelyTake");

	UItem_CanPlayerSafelyTake_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.AmmoPoolBase.UsesConsumables
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UAmmoPoolBase::UsesConsumables()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AmmoPoolBase.UsesConsumables");

	UAmmoPoolBase_UsesConsumables_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.AmmoPoolBase.UsesAmmo
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UAmmoPoolBase::UsesAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AmmoPoolBase.UsesAmmo");

	UAmmoPoolBase_UsesAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.AmmoPoolBase.OnTacticalTimeDilationEnd
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void UAmmoPoolBase::STATIC_OnTacticalTimeDilationEnd(float Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AmmoPoolBase.OnTacticalTimeDilationEnd");

	UAmmoPoolBase_OnTacticalTimeDilationEnd_Params params;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AmmoPoolBase.IsReloading
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UAmmoPoolBase::IsReloading()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AmmoPoolBase.IsReloading");

	UAmmoPoolBase_IsReloading_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.AmmoPoolBase.GetCurrentPoolSize
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UAmmoPoolBase::GetCurrentPoolSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AmmoPoolBase.GetCurrentPoolSize");

	UAmmoPoolBase_GetCurrentPoolSize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.AmmoPoolBase.GetCurrentConsumableClass
// ()
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UAmmoPoolBase::GetCurrentConsumableClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AmmoPoolBase.GetCurrentConsumableClass");

	UAmmoPoolBase_GetCurrentConsumableClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.AmmoPoolBase.GetCurrentAmmoClass
// ()
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UAmmoPoolBase::GetCurrentAmmoClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AmmoPoolBase.GetCurrentAmmoClass");

	UAmmoPoolBase_GetCurrentAmmoClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.AmmoPoolBase.GetBaseReloadTime
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UAmmoPoolBase::GetBaseReloadTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AmmoPoolBase.GetBaseReloadTime");

	UAmmoPoolBase_GetBaseReloadTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.AmmoReadoutWidget.OnWeaponSwitch
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeapon*                 EquippedWeapon                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UAmmoReadoutWidget::STATIC_OnWeaponSwitch(class UWeapon* EquippedWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AmmoReadoutWidget.OnWeaponSwitch");

	UAmmoReadoutWidget_OnWeaponSwitch_Params params;
	params.EquippedWeapon = EquippedWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AmmoReadoutWidget.OnReloadComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeapon*                 EquippedWeapon                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UAmmoReadoutWidget::STATIC_OnReloadComplete(class UWeapon* EquippedWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AmmoReadoutWidget.OnReloadComplete");

	UAmmoReadoutWidget_OnReloadComplete_Params params;
	params.EquippedWeapon = EquippedWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AmmoReadoutWidget.OnPlayerCombatStateChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bCombatIn                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void UAmmoReadoutWidget::STATIC_OnPlayerCombatStateChange(bool bCombatIn, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AmmoReadoutWidget.OnPlayerCombatStateChange");

	UAmmoReadoutWidget_OnPlayerCombatStateChange_Params params;
	params.bCombatIn = bCombatIn;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AmmoReadoutWidget.OnHUDVisibilityChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void UAmmoReadoutWidget::STATIC_OnHUDVisibilityChanged(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AmmoReadoutWidget.OnHUDVisibilityChanged");

	UAmmoReadoutWidget_OnHUDVisibilityChanged_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AmmoReadoutWidget.OnHeldWeaponTextDisplayModeChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UAmmoReadoutWidget::STATIC_OnHeldWeaponTextDisplayModeChanged(int ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AmmoReadoutWidget.OnHeldWeaponTextDisplayModeChanged");

	UAmmoReadoutWidget_OnHeldWeaponTextDisplayModeChanged_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AmmoReadoutWidget.OnHeldWeaponDisplayModeChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UAmmoReadoutWidget::STATIC_OnHeldWeaponDisplayModeChanged(int ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AmmoReadoutWidget.OnHeldWeaponDisplayModeChanged");

	UAmmoReadoutWidget_OnHeldWeaponDisplayModeChanged_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AmmoReadoutWidget.EvaluateLowAmmoWarning
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            MaxClipSize                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            CurrentClipSize                (Parm, ZeroConstructor, IsPlainOldData)
// int                            RemainingAmmo                  (Parm, ZeroConstructor, IsPlainOldData)

void UAmmoReadoutWidget::STATIC_EvaluateLowAmmoWarning(int MaxClipSize, int CurrentClipSize, int RemainingAmmo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AmmoReadoutWidget.EvaluateLowAmmoWarning");

	UAmmoReadoutWidget_EvaluateLowAmmoWarning_Params params;
	params.MaxClipSize = MaxClipSize;
	params.CurrentClipSize = CurrentClipSize;
	params.RemainingAmmo = RemainingAmmo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AnimNotifyState_Prop.OnMontageEnded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInterrupted                   (Parm, ZeroConstructor, IsPlainOldData)
// class USkeletalMeshComponent*  MeshComp                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UAnimNotifyState_Prop::STATIC_OnMontageEnded(class UAnimMontage* Montage, bool bInterrupted, class USkeletalMeshComponent* MeshComp)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AnimNotifyState_Prop.OnMontageEnded");

	UAnimNotifyState_Prop_OnMontageEnded_Params params;
	params.Montage = Montage;
	params.bInterrupted = bInterrupted;
	params.MeshComp = MeshComp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AppearanceComponent.SetVectorParameter
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   Parameter                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Vector                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UAppearanceComponent::STATIC_SetVectorParameter(const struct FName& Parameter, const struct FVector& Vector)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.SetVectorParameter");

	UAppearanceComponent_SetVectorParameter_Params params;
	params.Parameter = Parameter;
	params.Vector = Vector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AppearanceComponent.SetSlotVectorParameter
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   SlotName                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   Parameter                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Vector                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UAppearanceComponent::STATIC_SetSlotVectorParameter(const struct FName& SlotName, const struct FName& Parameter, const struct FVector& Vector)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.SetSlotVectorParameter");

	UAppearanceComponent_SetSlotVectorParameter_Params params;
	params.SlotName = SlotName;
	params.Parameter = Parameter;
	params.Vector = Vector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AppearanceComponent.SetSlotTextureParameter
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   SlotName                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   Parameter                      (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture*                Texture                        (Parm, ZeroConstructor, IsPlainOldData)

void UAppearanceComponent::STATIC_SetSlotTextureParameter(const struct FName& SlotName, const struct FName& Parameter, class UTexture* Texture)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.SetSlotTextureParameter");

	UAppearanceComponent_SetSlotTextureParameter_Params params;
	params.SlotName = SlotName;
	params.Parameter = Parameter;
	params.Texture = Texture;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AppearanceComponent.SetSlotScalarParameter
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   SlotName                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   Parameter                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          Scalar                         (Parm, ZeroConstructor, IsPlainOldData)

void UAppearanceComponent::STATIC_SetSlotScalarParameter(const struct FName& SlotName, const struct FName& Parameter, float Scalar)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.SetSlotScalarParameter");

	UAppearanceComponent_SetSlotScalarParameter_Params params;
	params.SlotName = SlotName;
	params.Parameter = Parameter;
	params.Scalar = Scalar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AppearanceComponent.SetSkinTone
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class USkinTone*               NewSkinTone                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UAppearanceComponent::STATIC_SetSkinTone(class USkinTone* NewSkinTone)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.SetSkinTone");

	UAppearanceComponent_SetSkinTone_Params params;
	params.NewSkinTone = NewSkinTone;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AppearanceComponent.SetScar
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UScar*                   NewScar                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UAppearanceComponent::STATIC_SetScar(class UScar* NewScar)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.SetScar");

	UAppearanceComponent_SetScar_Params params;
	params.NewScar = NewScar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AppearanceComponent.SetScalarParameter
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   Parameter                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          Scalar                         (Parm, ZeroConstructor, IsPlainOldData)

void UAppearanceComponent::STATIC_SetScalarParameter(const struct FName& Parameter, float Scalar)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.SetScalarParameter");

	UAppearanceComponent_SetScalarParameter_Params params;
	params.Parameter = Parameter;
	params.Scalar = Scalar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AppearanceComponent.SetMakeup
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UMakeup*                 NewMakeup                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UAppearanceComponent::STATIC_SetMakeup(class UMakeup* NewMakeup)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.SetMakeup");

	UAppearanceComponent_SetMakeup_Params params;
	params.NewMakeup = NewMakeup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AppearanceComponent.SetHairColor
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UHairColor*              NewColor                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UAppearanceComponent::STATIC_SetHairColor(class UHairColor* NewColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.SetHairColor");

	UAppearanceComponent_SetHairColor_Params params;
	params.NewColor = NewColor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AppearanceComponent.SetHair
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UHairAppearances*        NewHair                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UAppearanceComponent::STATIC_SetHair(class UHairAppearances* NewHair)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.SetHair");

	UAppearanceComponent_SetHair_Params params;
	params.NewHair = NewHair;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AppearanceComponent.SetGender
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGameplayTag            Gender                         (ConstParm, Parm, OutParm, ReferenceParm)

void UAppearanceComponent::STATIC_SetGender(const struct FGameplayTag& Gender)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.SetGender");

	UAppearanceComponent_SetGender_Params params;
	params.Gender = Gender;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AppearanceComponent.SetEyeColor
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UEyeColor*               NewColor                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UAppearanceComponent::STATIC_SetEyeColor(class UEyeColor* NewColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.SetEyeColor");

	UAppearanceComponent_SetEyeColor_Params params;
	params.NewColor = NewColor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AppearanceComponent.SetDirt
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UDirt*                   NewDirt                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UAppearanceComponent::STATIC_SetDirt(class UDirt* NewDirt)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.SetDirt");

	UAppearanceComponent_SetDirt_Params params;
	params.NewDirt = NewDirt;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AppearanceComponent.SetDefaultHead
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UHeadAppearances*        Head                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UAppearanceComponent::STATIC_SetDefaultHead(class UHeadAppearances* Head)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.SetDefaultHead");

	UAppearanceComponent_SetDefaultHead_Params params;
	params.Head = Head;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AppearanceComponent.SetDefaultBody
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UBodyAppearances*        Body                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UAppearanceComponent::STATIC_SetDefaultBody(class UBodyAppearances* Body)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.SetDefaultBody");

	UAppearanceComponent_SetDefaultBody_Params params;
	params.Body = Body;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AppearanceComponent.SetBrows
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UBrows*                  NewBrows                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UAppearanceComponent::STATIC_SetBrows(class UBrows* NewBrows)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.SetBrows");

	UAppearanceComponent_SetBrows_Params params;
	params.NewBrows = NewBrows;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AppearanceComponent.SetBoneModificationPresets
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UBoneModificationsPreset* Presets                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UAppearanceComponent::STATIC_SetBoneModificationPresets(class UBoneModificationsPreset* Presets)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.SetBoneModificationPresets");

	UAppearanceComponent_SetBoneModificationPresets_Params params;
	params.Presets = Presets;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AppearanceComponent.SetBoneModification
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UBoneModifications*      Modifications                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UAppearanceComponent::STATIC_SetBoneModification(class UBoneModifications* Modifications, float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.SetBoneModification");

	UAppearanceComponent_SetBoneModification_Params params;
	params.Modifications = Modifications;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AppearanceComponent.SetBeardColor
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UBeardColor*             NewColor                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UAppearanceComponent::STATIC_SetBeardColor(class UBeardColor* NewColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.SetBeardColor");

	UAppearanceComponent_SetBeardColor_Params params;
	params.NewColor = NewColor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AppearanceComponent.SetBeard
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UBeardAppearances*       NewBeard                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UAppearanceComponent::STATIC_SetBeard(class UBeardAppearances* NewBeard)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.SetBeard");

	UAppearanceComponent_SetBeard_Params params;
	params.NewBeard = NewBeard;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AppearanceComponent.SetAge
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          NewAge                         (Parm, ZeroConstructor, IsPlainOldData)

void UAppearanceComponent::STATIC_SetAge(float NewAge)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.SetAge");

	UAppearanceComponent_SetAge_Params params;
	params.NewAge = NewAge;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AppearanceComponent.RemoveBoneModification
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UBoneModifications*      Modifications                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UAppearanceComponent::STATIC_RemoveBoneModification(class UBoneModifications* Modifications)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.RemoveBoneModification");

	UAppearanceComponent_RemoveBoneModification_Params params;
	params.Modifications = Modifications;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AppearanceComponent.RefreshFullAppearance
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UAppearanceComponent::STATIC_RefreshFullAppearance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.RefreshFullAppearance");

	UAppearanceComponent_RefreshFullAppearance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AppearanceComponent.InvalidateOldBoneModifications
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UAppearanceComponent::STATIC_InvalidateOldBoneModifications()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.InvalidateOldBoneModifications");

	UAppearanceComponent_InvalidateOldBoneModifications_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AppearanceComponent.GetBreakBoneName
// ()
// Parameters:
// struct FGameplayTag            BodyPartTag                    (Parm)
// struct FName                   BoneName                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UAppearanceComponent::GetBreakBoneName(const struct FGameplayTag& BodyPartTag, struct FName* BoneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.GetBreakBoneName");

	UAppearanceComponent_GetBreakBoneName_Params params;
	params.BodyPartTag = BodyPartTag;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (BoneName != nullptr)
		*BoneName = params.BoneName;

	return params.ReturnValue;
}


// Function Indiana.AppearanceComponent.GetBreakBoneAndSocketNames
// ()
// Parameters:
// struct FGameplayTag            BodyPartTag                    (Parm)
// struct FName                   BoneName                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FName                   AttachedSocket                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FName                   DetachedSocket                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UAppearanceComponent::GetBreakBoneAndSocketNames(const struct FGameplayTag& BodyPartTag, struct FName* BoneName, struct FName* AttachedSocket, struct FName* DetachedSocket)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.GetBreakBoneAndSocketNames");

	UAppearanceComponent_GetBreakBoneAndSocketNames_Params params;
	params.BodyPartTag = BodyPartTag;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (BoneName != nullptr)
		*BoneName = params.BoneName;
	if (AttachedSocket != nullptr)
		*AttachedSocket = params.AttachedSocket;
	if (DetachedSocket != nullptr)
		*DetachedSocket = params.DetachedSocket;

	return params.ReturnValue;
}


// Function Indiana.AppearanceComponent.GetBreakableBoneNames
// ()

void UAppearanceComponent::GetBreakableBoneNames()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.GetBreakableBoneNames");

	UAppearanceComponent_GetBreakableBoneNames_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AppearanceComponent.GetBodyPartTags
// ()

void UAppearanceComponent::GetBodyPartTags()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.GetBodyPartTags");

	UAppearanceComponent_GetBodyPartTags_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AppearanceComponent.GetBodyPartsArray
// ()
// Parameters:
// TArray<struct FBodyPart>       ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<struct FBodyPart> UAppearanceComponent::GetBodyPartsArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.GetBodyPartsArray");

	UAppearanceComponent_GetBodyPartsArray_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.AppearanceComponent.GetBodyPart
// (BlueprintCosmetic)
// Parameters:
// struct FName                   BoneName                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 ImpactLocation                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FGameplayTag            ReturnValue                    (Parm, OutParm, ReturnParm)

struct FGameplayTag UAppearanceComponent::GetBodyPart(const struct FName& BoneName, const struct FVector& ImpactLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.GetBodyPart");

	UAppearanceComponent_GetBodyPart_Params params;
	params.BoneName = BoneName;
	params.ImpactLocation = ImpactLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.AppearanceComponent.DebugTargetVertexColors
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UAppearanceComponent::STATIC_DebugTargetVertexColors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.DebugTargetVertexColors");

	UAppearanceComponent_DebugTargetVertexColors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AppearanceComponent.ApplyAppearancePreset
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UAppearancePreset*       Preset                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UAppearanceComponent::STATIC_ApplyAppearancePreset(class UAppearancePreset* Preset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AppearanceComponent.ApplyAppearancePreset");

	UAppearanceComponent_ApplyAppearancePreset_Params params;
	params.Preset = Preset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ArmorComponent.TinkerAdvanceArmor
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bIgnoreCost                    (Parm, ZeroConstructor, IsPlainOldData)

void UArmorComponent::STATIC_TinkerAdvanceArmor(bool bIgnoreCost)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ArmorComponent.TinkerAdvanceArmor");

	UArmorComponent_TinkerAdvanceArmor_Params params;
	params.bIgnoreCost = bIgnoreCost;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AudioHelpers.LoadAkAudioEventReference
// ()
// Parameters:
// class FString                  Path                           (Parm, ZeroConstructor)
// class UAkAudioEvent*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAkAudioEvent* UAudioHelpers::LoadAkAudioEventReference(const class FString& Path)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AudioHelpers.LoadAkAudioEventReference");

	UAudioHelpers_LoadAkAudioEventReference_Params params;
	params.Path = Path;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.GenericCollapsableList.ExpandableAreaExpansionChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UExpandableAreaBase*     Area                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bIsExpanded                    (Parm, ZeroConstructor, IsPlainOldData)

void UGenericCollapsableList::STATIC_ExpandableAreaExpansionChanged(class UExpandableAreaBase* Area, bool bIsExpanded)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GenericCollapsableList.ExpandableAreaExpansionChanged");

	UGenericCollapsableList_ExpandableAreaExpansionChanged_Params params;
	params.Area = Area;
	params.bIsExpanded = bIsExpanded;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AudioLogList.OnAudioLogViewedCB
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UGenericCollapsableListEntry* ListEntry                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UAudioLogList::STATIC_OnAudioLogViewedCB(class UGenericCollapsableListEntry* ListEntry)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AudioLogList.OnAudioLogViewedCB");

	UAudioLogList_OnAudioLogViewedCB_Params params;
	params.ListEntry = ListEntry;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AudioLogList.OnAudioLogSelectedCB
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UGenericCollapsableListEntry* ListEntry                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UAudioLogList::STATIC_OnAudioLogSelectedCB(class UGenericCollapsableListEntry* ListEntry)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AudioLogList.OnAudioLogSelectedCB");

	UAudioLogList_OnAudioLogSelectedCB_Params params;
	params.ListEntry = ListEntry;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AudioLogList.OnAudioLogLibraryLoaded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UAudioLogLibraryDataAsset* LoadedAudioLogLibrary          (Parm, ZeroConstructor, IsPlainOldData)

void UAudioLogList::STATIC_OnAudioLogLibraryLoaded(class UAudioLogLibraryDataAsset* LoadedAudioLogLibrary)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AudioLogList.OnAudioLogLibraryLoaded");

	UAudioLogList_OnAudioLogLibraryLoaded_Params params;
	params.LoadedAudioLogLibrary = LoadedAudioLogLibrary;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AudioLogList.AddOldAudioLog
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UAudioLogDataAsset*      AudioLogDataAsset              (Parm, ZeroConstructor, IsPlainOldData)

void UAudioLogList::STATIC_AddOldAudioLog(class UAudioLogDataAsset* AudioLogDataAsset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AudioLogList.AddOldAudioLog");

	UAudioLogList_AddOldAudioLog_Params params;
	params.AudioLogDataAsset = AudioLogDataAsset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AudioLogList.AddNewAudioLog
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UAudioLogDataAsset*      AudioLogDataAsset              (Parm, ZeroConstructor, IsPlainOldData)

void UAudioLogList::STATIC_AddNewAudioLog(class UAudioLogDataAsset* AudioLogDataAsset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AudioLogList.AddNewAudioLog");

	UAudioLogList_AddNewAudioLog_Params params;
	params.AudioLogDataAsset = AudioLogDataAsset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AudioLogManager.StopCurrentAudioLog
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bForce                         (Parm, ZeroConstructor, IsPlainOldData)

void UAudioLogManager::STATIC_StopCurrentAudioLog(bool bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AudioLogManager.StopCurrentAudioLog");

	UAudioLogManager_StopCurrentAudioLog_Params params;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AudioLogManager.ResumeCurrentAudioLog
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bForce                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromPlay                      (Parm, ZeroConstructor, IsPlainOldData)

void UAudioLogManager::STATIC_ResumeCurrentAudioLog(bool bForce, bool bFromPlay)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AudioLogManager.ResumeCurrentAudioLog");

	UAudioLogManager_ResumeCurrentAudioLog_Params params;
	params.bForce = bForce;
	params.bFromPlay = bFromPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AudioLogManager.PlayAudioLog
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            AudioLogIndex                  (Parm, ZeroConstructor, IsPlainOldData)

void UAudioLogManager::STATIC_PlayAudioLog(int AudioLogIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AudioLogManager.PlayAudioLog");

	UAudioLogManager_PlayAudioLog_Params params;
	params.AudioLogIndex = AudioLogIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AudioLogManager.PauseCurrentAudioLog
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bForce                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromStop                      (Parm, ZeroConstructor, IsPlainOldData)

void UAudioLogManager::STATIC_PauseCurrentAudioLog(bool bForce, bool bFromStop)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AudioLogManager.PauseCurrentAudioLog");

	UAudioLogManager_PauseCurrentAudioLog_Params params;
	params.bForce = bForce;
	params.bFromStop = bFromStop;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AudioLogManager.OnPreMapLoad
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  MapName                        (Parm, ZeroConstructor)

void UAudioLogManager::STATIC_OnPreMapLoad(const class FString& MapName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AudioLogManager.OnPreMapLoad");

	UAudioLogManager_OnPreMapLoad_Params params;
	params.MapName = MapName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AudioLogManager.OnPostMapLoad
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWorld*                  World                          (Parm, ZeroConstructor, IsPlainOldData)

void UAudioLogManager::STATIC_OnPostMapLoad(class UWorld* World)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AudioLogManager.OnPostMapLoad");

	UAudioLogManager_OnPostMapLoad_Params params;
	params.World = World;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AudioLogManager.OnLoadComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  Filename                       (Parm, ZeroConstructor)
// ELoadGameResult                Result                         (Parm, ZeroConstructor, IsPlainOldData)

void UAudioLogManager::STATIC_OnLoadComplete(const class FString& Filename, ELoadGameResult Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AudioLogManager.OnLoadComplete");

	UAudioLogManager_OnLoadComplete_Params params;
	params.Filename = Filename;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AudioLogManager.OnConversationEnded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UConversationInstance*   ConversationInstance           (Parm, ZeroConstructor, IsPlainOldData)

void UAudioLogManager::STATIC_OnConversationEnded(class UConversationInstance* ConversationInstance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AudioLogManager.OnConversationEnded");

	UAudioLogManager_OnConversationEnded_Params params;
	params.ConversationInstance = ConversationInstance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AudioLogManager.OnCombatStateChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bInCombat                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void UAudioLogManager::STATIC_OnCombatStateChanged(bool bInCombat, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AudioLogManager.OnCombatStateChanged");

	UAudioLogManager_OnCombatStateChanged_Params params;
	params.bInCombat = bInCombat;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AudioLogManager.OnAudioLogLibraryLoaded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// TSoftObjectPtr<class UAudioLogLibraryDataAsset> LibraryDataAsset               (Parm)

void UAudioLogManager::STATIC_OnAudioLogLibraryLoaded(TSoftObjectPtr<class UAudioLogLibraryDataAsset> LibraryDataAsset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AudioLogManager.OnAudioLogLibraryLoaded");

	UAudioLogManager_OnAudioLogLibraryLoaded_Params params;
	params.LibraryDataAsset = LibraryDataAsset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AudioLogManager.IsPlayingAudioLog
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UAudioLogManager::IsPlayingAudioLog()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AudioLogManager.IsPlayingAudioLog");

	UAudioLogManager_IsPlayingAudioLog_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.AudioLogManager.GetCurrentAudioLogPlayState
// ()
// Parameters:
// EAudioLogPlayState             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EAudioLogPlayState UAudioLogManager::GetCurrentAudioLogPlayState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AudioLogManager.GetCurrentAudioLogPlayState");

	UAudioLogManager_GetCurrentAudioLogPlayState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.AudioLogManager.CanStopCurrentAudioLog
// (Final)
// Parameters:
// bool                           bExclusive                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UAudioLogManager::CanStopCurrentAudioLog(bool bExclusive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AudioLogManager.CanStopCurrentAudioLog");

	UAudioLogManager_CanStopCurrentAudioLog_Params params;
	params.bExclusive = bExclusive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.AudioLogManager.CanResumeCurrentAudioLog
// (Final)
// Parameters:
// bool                           bExclusive                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UAudioLogManager::CanResumeCurrentAudioLog(bool bExclusive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AudioLogManager.CanResumeCurrentAudioLog");

	UAudioLogManager_CanResumeCurrentAudioLog_Params params;
	params.bExclusive = bExclusive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.AudioLogManager.CanPauseCurrentAudioLog
// (Final)
// Parameters:
// bool                           bExclusive                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UAudioLogManager::CanPauseCurrentAudioLog(bool bExclusive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AudioLogManager.CanPauseCurrentAudioLog");

	UAudioLogManager_CanPauseCurrentAudioLog_Params params;
	params.bExclusive = bExclusive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaInterfaceUserWidget.SetInterfaceUserFocus
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaInterfaceUserWidget::STATIC_SetInterfaceUserFocus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaInterfaceUserWidget.SetInterfaceUserFocus");

	UIndianaInterfaceUserWidget_SetInterfaceUserFocus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaInterfaceUserWidget.SetCursorVisible
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaInterfaceUserWidget::STATIC_SetCursorVisible(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaInterfaceUserWidget.SetCursorVisible");

	UIndianaInterfaceUserWidget_SetCursorVisible_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AudioLogWidget.TacticalTimeDilationStart
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UAudioLogWidget::STATIC_TacticalTimeDilationStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AudioLogWidget.TacticalTimeDilationStart");

	UAudioLogWidget_TacticalTimeDilationStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AudioLogWidget.TacticalTimeDilationEnd
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Delta                          (Parm, ZeroConstructor, IsPlainOldData)

void UAudioLogWidget::STATIC_TacticalTimeDilationEnd(float Delta)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AudioLogWidget.TacticalTimeDilationEnd");

	UAudioLogWidget_TacticalTimeDilationEnd_Params params;
	params.Delta = Delta;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AudioLogWidget.ShowAudioLog
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          CurrentRenderOpacity           (Parm, ZeroConstructor, IsPlainOldData)

void UAudioLogWidget::STATIC_ShowAudioLog(bool bShow, float CurrentRenderOpacity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AudioLogWidget.ShowAudioLog");

	UAudioLogWidget_ShowAudioLog_Params params;
	params.bShow = bShow;
	params.CurrentRenderOpacity = CurrentRenderOpacity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AudioLogWidget.OnHUDVisibilityChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void UAudioLogWidget::STATIC_OnHUDVisibilityChanged(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AudioLogWidget.OnHUDVisibilityChanged");

	UAudioLogWidget_OnHUDVisibilityChanged_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AudioLogWidget.OnAudioLogPlayStateChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EAudioLogPlayState             NewPlayState                   (Parm, ZeroConstructor, IsPlainOldData)

void UAudioLogWidget::STATIC_OnAudioLogPlayStateChanged(EAudioLogPlayState NewPlayState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AudioLogWidget.OnAudioLogPlayStateChanged");

	UAudioLogWidget_OnAudioLogPlayStateChanged_Params params;
	params.NewPlayState = NewPlayState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.AudioLogWidget.CanStopAudioLog
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UAudioLogWidget::CanStopAudioLog()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.AudioLogWidget.CanStopAudioLog");

	UAudioLogWidget_CanStopAudioLog_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.BackgroundPanelWidget.SetBackgroundFocused
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bFocused                       (Parm, ZeroConstructor, IsPlainOldData)

void UBackgroundPanelWidget::STATIC_SetBackgroundFocused(bool bFocused)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BackgroundPanelWidget.SetBackgroundFocused");

	UBackgroundPanelWidget_SetBackgroundFocused_Params params;
	params.bFocused = bFocused;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.BackgroundPanelWidget.RegisterButtons
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// TArray<class UButtonBase*>     Buttons                        (ConstParm, Parm, ZeroConstructor)

void UBackgroundPanelWidget::STATIC_RegisterButtons(TArray<class UButtonBase*> Buttons)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BackgroundPanelWidget.RegisterButtons");

	UBackgroundPanelWidget_RegisterButtons_Params params;
	params.Buttons = Buttons;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.BackgroundPanelWidget.OnOuterTextureLoaded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UTexture2D*              Texture                        (Parm, ZeroConstructor, IsPlainOldData)

void UBackgroundPanelWidget::STATIC_OnOuterTextureLoaded(class UTexture2D* Texture)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BackgroundPanelWidget.OnOuterTextureLoaded");

	UBackgroundPanelWidget_OnOuterTextureLoaded_Params params;
	params.Texture = Texture;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.BackgroundPanelWidget.OnInnerTextureLoaded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UTexture2D*              Texture                        (Parm, ZeroConstructor, IsPlainOldData)

void UBackgroundPanelWidget::STATIC_OnInnerTextureLoaded(class UTexture2D* Texture)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BackgroundPanelWidget.OnInnerTextureLoaded");

	UBackgroundPanelWidget_OnInnerTextureLoaded_Params params;
	params.Texture = Texture;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.BackgroundSplitPanelWidget.OnOuterTopTextureLoaded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UTexture2D*              Texture                        (Parm, ZeroConstructor, IsPlainOldData)

void UBackgroundSplitPanelWidget::STATIC_OnOuterTopTextureLoaded(class UTexture2D* Texture)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BackgroundSplitPanelWidget.OnOuterTopTextureLoaded");

	UBackgroundSplitPanelWidget_OnOuterTopTextureLoaded_Params params;
	params.Texture = Texture;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.BackgroundSplitPanelWidget.OnOuterBottomTextureLoaded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UTexture2D*              Texture                        (Parm, ZeroConstructor, IsPlainOldData)

void UBackgroundSplitPanelWidget::STATIC_OnOuterBottomTextureLoaded(class UTexture2D* Texture)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BackgroundSplitPanelWidget.OnOuterBottomTextureLoaded");

	UBackgroundSplitPanelWidget_OnOuterBottomTextureLoaded_Params params;
	params.Texture = Texture;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.BackgroundSplitPanelWidget.OnInnerTopTextureLoaded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UTexture2D*              Texture                        (Parm, ZeroConstructor, IsPlainOldData)

void UBackgroundSplitPanelWidget::STATIC_OnInnerTopTextureLoaded(class UTexture2D* Texture)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BackgroundSplitPanelWidget.OnInnerTopTextureLoaded");

	UBackgroundSplitPanelWidget_OnInnerTopTextureLoaded_Params params;
	params.Texture = Texture;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.BackgroundSplitPanelWidget.OnInnerBottomTextureLoaded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UTexture2D*              Texture                        (Parm, ZeroConstructor, IsPlainOldData)

void UBackgroundSplitPanelWidget::STATIC_OnInnerBottomTextureLoaded(class UTexture2D* Texture)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BackgroundSplitPanelWidget.OnInnerBottomTextureLoaded");

	UBackgroundSplitPanelWidget_OnInnerBottomTextureLoaded_Params params;
	params.Texture = Texture;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.BaseInventoryItemManagement.OnDragDrop_SetArmorSlot
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UIndianaDragDropOperation* Operation                      (Parm, ZeroConstructor, IsPlainOldData)

void UBaseInventoryItemManagement::STATIC_OnDragDrop_SetArmorSlot(class UIndianaDragDropOperation* Operation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BaseInventoryItemManagement.OnDragDrop_SetArmorSlot");

	UBaseInventoryItemManagement_OnDragDrop_SetArmorSlot_Params params;
	params.Operation = Operation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.BaseInventoryItemManagement.OnDragDrop_JunkItem
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UIndianaDragDropOperation* Operation                      (Parm, ZeroConstructor, IsPlainOldData)

void UBaseInventoryItemManagement::STATIC_OnDragDrop_JunkItem(class UIndianaDragDropOperation* Operation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BaseInventoryItemManagement.OnDragDrop_JunkItem");

	UBaseInventoryItemManagement_OnDragDrop_JunkItem_Params params;
	params.Operation = Operation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.BaseInventoryItemManagement.OnDragDrop_ClearWeaponSlot
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UIndianaDragDropOperation* Operation                      (Parm, ZeroConstructor, IsPlainOldData)

void UBaseInventoryItemManagement::STATIC_OnDragDrop_ClearWeaponSlot(class UIndianaDragDropOperation* Operation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BaseInventoryItemManagement.OnDragDrop_ClearWeaponSlot");

	UBaseInventoryItemManagement_OnDragDrop_ClearWeaponSlot_Params params;
	params.Operation = Operation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.BaseInventoryItemManagement.OnDragDrop_BreakDownItem
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UIndianaDragDropOperation* Operation                      (Parm, ZeroConstructor, IsPlainOldData)

void UBaseInventoryItemManagement::STATIC_OnDragDrop_BreakDownItem(class UIndianaDragDropOperation* Operation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BaseInventoryItemManagement.OnDragDrop_BreakDownItem");

	UBaseInventoryItemManagement_OnDragDrop_BreakDownItem_Params params;
	params.Operation = Operation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.BeaconComponent.Show
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UBeaconComponent::STATIC_Show()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BeaconComponent.Show");

	UBeaconComponent_Show_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.BeaconComponent.Hide
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UBeaconComponent::STATIC_Hide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BeaconComponent.Hide");

	UBeaconComponent_Hide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.BeaconManager.OnShipChangedLocation
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UShipDestinationData*    NewShipLocation                (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UBeaconManager::STATIC_OnShipChangedLocation(class UShipDestinationData* NewShipLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BeaconManager.OnShipChangedLocation");

	UBeaconManager_OnShipChangedLocation_Params params;
	params.NewShipLocation = NewShipLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.BeaconTagWidget.OnWaypointMarkerVisibilityChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void UBeaconTagWidget::STATIC_OnWaypointMarkerVisibilityChanged(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BeaconTagWidget.OnWaypointMarkerVisibilityChanged");

	UBeaconTagWidget_OnWaypointMarkerVisibilityChanged_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.BeaconTagWidget.OnHUDVisibilityChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void UBeaconTagWidget::STATIC_OnHUDVisibilityChanged(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BeaconTagWidget.OnHUDVisibilityChanged");

	UBeaconTagWidget_OnHUDVisibilityChanged_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Destructible.SetDestructibleState
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EDestructibleState             NewState                       (Parm, ZeroConstructor, IsPlainOldData)

void ADestructible::STATIC_SetDestructibleState(EDestructibleState NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Destructible.SetDestructibleState");

	ADestructible_SetDestructibleState_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Destructible.ReceiveTriggerUntripped
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void ADestructible::STATIC_ReceiveTriggerUntripped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Destructible.ReceiveTriggerUntripped");

	ADestructible_ReceiveTriggerUntripped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Destructible.ReceiveTriggerTripped
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void ADestructible::STATIC_ReceiveTriggerTripped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Destructible.ReceiveTriggerTripped");

	ADestructible_ReceiveTriggerTripped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Destructible.ReceiveTriggerDisarmed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void ADestructible::STATIC_ReceiveTriggerDisarmed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Destructible.ReceiveTriggerDisarmed");

	ADestructible_ReceiveTriggerDisarmed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Destructible.ReceiveTriggerArmed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void ADestructible::STATIC_ReceiveTriggerArmed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Destructible.ReceiveTriggerArmed");

	ADestructible_ReceiveTriggerArmed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Destructible.ReceivePreDeploy
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void ADestructible::STATIC_ReceivePreDeploy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Destructible.ReceivePreDeploy");

	ADestructible_ReceivePreDeploy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Destructible.ReceiveDeployOrder
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void ADestructible::STATIC_ReceiveDeployOrder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Destructible.ReceiveDeployOrder");

	ADestructible_ReceiveDeployOrder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Destructible.OnHealthChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          HealthChange                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  InInstigator                   (Parm, ZeroConstructor, IsPlainOldData)

void ADestructible::STATIC_OnHealthChanged(float HealthChange, class AActor* InInstigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Destructible.OnHealthChanged");

	ADestructible_OnHealthChanged_Params params;
	params.HealthChange = HealthChange;
	params.InInstigator = InInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.WeaponMode.IsIdle
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeaponMode::IsIdle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponMode.IsIdle");

	UWeaponMode_IsIdle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.WeaponMode.IsFullyAimed
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeaponMode::IsFullyAimed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponMode.IsFullyAimed");

	UWeaponMode_IsFullyAimed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.WeaponMode.IsCharging
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeaponMode::IsCharging()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponMode.IsCharging");

	UWeaponMode_IsCharging_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.WeaponMode.GetSecondaryDamageType
// ()
// Parameters:
// class UClass*                  ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData)

class UClass* UWeaponMode::GetSecondaryDamageType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponMode.GetSecondaryDamageType");

	UWeaponMode_GetSecondaryDamageType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.WeaponMode.GetPrimaryDamageTypeEnum
// ()
// Parameters:
// EIndianaDamageType             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EIndianaDamageType UWeaponMode::GetPrimaryDamageTypeEnum()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponMode.GetPrimaryDamageTypeEnum");

	UWeaponMode_GetPrimaryDamageTypeEnum_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.WeaponMode.GetPrimaryDamageType
// ()
// Parameters:
// class UClass*                  ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData)

class UClass* UWeaponMode::GetPrimaryDamageType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponMode.GetPrimaryDamageType");

	UWeaponMode_GetPrimaryDamageType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.RangedMode.OnMontageBlendingOut
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInterrupted                   (Parm, ZeroConstructor, IsPlainOldData)

void URangedMode::STATIC_OnMontageBlendingOut(class UAnimMontage* Montage, bool bInterrupted)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.RangedMode.OnMontageBlendingOut");

	URangedMode_OnMontageBlendingOut_Params params;
	params.Montage = Montage;
	params.bInterrupted = bInterrupted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.RangedMode.HasScope
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool URangedMode::HasScope()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.RangedMode.HasScope");

	URangedMode_HasScope_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.RangedMode.GetWeaponCurrentAmmoGaugeAlpha
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float URangedMode::GetWeaponCurrentAmmoGaugeAlpha()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.RangedMode.GetWeaponCurrentAmmoGaugeAlpha");

	URangedMode_GetWeaponCurrentAmmoGaugeAlpha_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.RangedMode.GetShotOrigin
// ()
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector URangedMode::GetShotOrigin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.RangedMode.GetShotOrigin");

	URangedMode_GetShotOrigin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.RangedMode.GetMuzzleRotation
// ()
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FRotator URangedMode::GetMuzzleRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.RangedMode.GetMuzzleRotation");

	URangedMode_GetMuzzleRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.RangedMode.GetMuzzleLocationAndRotation
// (BlueprintCosmetic)
// Parameters:
// struct FVector                 Location                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FRotator                Rotation                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool URangedMode::GetMuzzleLocationAndRotation(struct FVector* Location, struct FRotator* Rotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.RangedMode.GetMuzzleLocationAndRotation");

	URangedMode_GetMuzzleLocationAndRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Location != nullptr)
		*Location = params.Location;
	if (Rotation != nullptr)
		*Rotation = params.Rotation;

	return params.ReturnValue;
}


// Function Indiana.RangedMode.GetMuzzleLocation
// ()
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector URangedMode::GetMuzzleLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.RangedMode.GetMuzzleLocation");

	URangedMode_GetMuzzleLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.RangedMode.GetAimingUpDirection
// ()
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector URangedMode::GetAimingUpDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.RangedMode.GetAimingUpDirection");

	URangedMode_GetAimingUpDirection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.RangedMode.GetAimingDirection
// ()
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector URangedMode::GetAimingDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.RangedMode.GetAimingDirection");

	URangedMode_GetAimingDirection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.BeamMode.IsTargetingPlayer
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBeamMode::IsTargetingPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BeamMode.IsTargetingPlayer");

	UBeamMode_IsTargetingPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.BeamMode.HasLockedTarget
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBeamMode::HasLockedTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BeamMode.HasLockedTarget");

	UBeamMode_HasLockedTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.BeamMode.GetTargetLocation
// ()
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UBeamMode::GetTargetLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BeamMode.GetTargetLocation");

	UBeamMode_GetTargetLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaAnimInstance.Montage_SkipToEnd
// (BlueprintCosmetic)
// Parameters:
// class UAnimMontage*            MontageToPlay                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaAnimInstance::Montage_SkipToEnd(class UAnimMontage* MontageToPlay)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAnimInstance.Montage_SkipToEnd");

	UIndianaAnimInstance_Montage_SkipToEnd_Params params;
	params.MontageToPlay = MontageToPlay;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaAnimInstance.AnimNotify_ToggleFootIK
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaAnimInstance::STATIC_AnimNotify_ToggleFootIK()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAnimInstance.AnimNotify_ToggleFootIK");

	UIndianaAnimInstance_AnimNotify_ToggleFootIK_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAnimInstance.AnimNotify_EnableFootIK
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaAnimInstance::STATIC_AnimNotify_EnableFootIK()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAnimInstance.AnimNotify_EnableFootIK");

	UIndianaAnimInstance_AnimNotify_EnableFootIK_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAnimInstance.AnimNotify_DisableFootIK
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaAnimInstance::STATIC_AnimNotify_DisableFootIK()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAnimInstance.AnimNotify_DisableFootIK");

	UIndianaAnimInstance_AnimNotify_DisableFootIK_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterAnimInstance.SetDisabledAnimation
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FAnimEventGameplayTagContainer Container                      (Parm)

void UCharacterAnimInstance::STATIC_SetDisabledAnimation(const struct FAnimEventGameplayTagContainer& Container)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterAnimInstance.SetDisabledAnimation");

	UCharacterAnimInstance_SetDisabledAnimation_Params params;
	params.Container = Container;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterAnimInstance.OnRebuildAnimationSetData
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCharacterAnimInstance::STATIC_OnRebuildAnimationSetData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterAnimInstance.OnRebuildAnimationSetData");

	UCharacterAnimInstance_OnRebuildAnimationSetData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterAnimInstance.OnNewWeaponAnimations
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeaponAnimations*       NewWeaponAnimations            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UCharacterAnimInstance::STATIC_OnNewWeaponAnimations(class UWeaponAnimations* NewWeaponAnimations)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterAnimInstance.OnNewWeaponAnimations");

	UCharacterAnimInstance_OnNewWeaponAnimations_Params params;
	params.NewWeaponAnimations = NewWeaponAnimations;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterAnimInstance.OnNewLocomotionAnimationSet
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class ULocomotionAnimationSet* NewLocomtionAnimationSet       (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterAnimInstance::STATIC_OnNewLocomotionAnimationSet(class ULocomotionAnimationSet* NewLocomtionAnimationSet)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterAnimInstance.OnNewLocomotionAnimationSet");

	UCharacterAnimInstance_OnNewLocomotionAnimationSet_Params params;
	params.NewLocomtionAnimationSet = NewLocomtionAnimationSet;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterAnimInstance.OnMovementLanded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterAnimInstance::STATIC_OnMovementLanded(float Distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterAnimInstance.OnMovementLanded");

	UCharacterAnimInstance_OnMovementLanded_Params params;
	params.Distance = Distance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterAnimInstance.IsMontagePlayingOnSlot
// (BlueprintCosmetic)
// Parameters:
// struct FName                   SlotNodeName                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterAnimInstance::IsMontagePlayingOnSlot(const struct FName& SlotNodeName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterAnimInstance.IsMontagePlayingOnSlot");

	UCharacterAnimInstance_IsMontagePlayingOnSlot_Params params;
	params.SlotNodeName = SlotNodeName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.TPVAnimInstance.UpdateAnimationSetUpdate
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTPVAnimInstance::STATIC_UpdateAnimationSetUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TPVAnimInstance.UpdateAnimationSetUpdate");

	UTPVAnimInstance_UpdateAnimationSetUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TPVAnimInstance.SetStateTransitioned
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EAnimTreeState                 State                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Transitioned                   (Parm, ZeroConstructor, IsPlainOldData)

void UTPVAnimInstance::STATIC_SetStateTransitioned(EAnimTreeState State, bool Transitioned)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TPVAnimInstance.SetStateTransitioned");

	UTPVAnimInstance_SetStateTransitioned_Params params;
	params.State = State;
	params.Transitioned = Transitioned;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TPVAnimInstance.SetPersonality
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UTPVPersonalitySet*      Personality                    (Parm, ZeroConstructor, IsPlainOldData)

void UTPVAnimInstance::STATIC_SetPersonality(class UTPVPersonalitySet* Personality)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TPVAnimInstance.SetPersonality");

	UTPVAnimInstance_SetPersonality_Params params;
	params.Personality = Personality;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TPVAnimInstance.SetNextEmotion
// (RequiredAPI, BlueprintCosmetic)
// Parameters:
// EEmotion                       Emotion                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Persist                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ForceNextEmotion               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTPVAnimInstance::SetNextEmotion(EEmotion Emotion, float Duration, bool Persist, bool ForceNextEmotion)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TPVAnimInstance.SetNextEmotion");

	UTPVAnimInstance_SetNextEmotion_Params params;
	params.Emotion = Emotion;
	params.Duration = Duration;
	params.Persist = Persist;
	params.ForceNextEmotion = ForceNextEmotion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.TPVAnimInstance.ResetEmotionToDefault
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTPVAnimInstance::STATIC_ResetEmotionToDefault()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TPVAnimInstance.ResetEmotionToDefault");

	UTPVAnimInstance_ResetEmotionToDefault_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TPVAnimInstance.OnMontageStart
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData)

void UTPVAnimInstance::STATIC_OnMontageStart(class UAnimMontage* Montage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TPVAnimInstance.OnMontageStart");

	UTPVAnimInstance_OnMontageStart_Params params;
	params.Montage = Montage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TPVAnimInstance.OnMontageEnd
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInterrupted                   (Parm, ZeroConstructor, IsPlainOldData)

void UTPVAnimInstance::STATIC_OnMontageEnd(class UAnimMontage* Montage, bool bInterrupted)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TPVAnimInstance.OnMontageEnd");

	UTPVAnimInstance_OnMontageEnd_Params params;
	params.Montage = Montage;
	params.bInterrupted = bInterrupted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TPVAnimInstance.GetUpFromRagdoll
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          GetUpSpeed                     (Parm, ZeroConstructor, IsPlainOldData)

void UTPVAnimInstance::STATIC_GetUpFromRagdoll(float GetUpSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TPVAnimInstance.GetUpFromRagdoll");

	UTPVAnimInstance_GetUpFromRagdoll_Params params;
	params.GetUpSpeed = GetUpSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TPVAnimInstance.GetAnimationSetUpdate
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UTPVAnimInstance::GetAnimationSetUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TPVAnimInstance.GetAnimationSetUpdate");

	UTPVAnimInstance_GetAnimationSetUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.TPVAnimInstance.ClearCurrentEmotion
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTPVAnimInstance::STATIC_ClearCurrentEmotion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TPVAnimInstance.ClearCurrentEmotion");

	UTPVAnimInstance_ClearCurrentEmotion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TPVAnimInstance.AnimNotify_ResetLocomotionState
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTPVAnimInstance::STATIC_AnimNotify_ResetLocomotionState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TPVAnimInstance.AnimNotify_ResetLocomotionState");

	UTPVAnimInstance_AnimNotify_ResetLocomotionState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TPVAnimInstance.AnimNotify_OnLandEnd
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTPVAnimInstance::STATIC_AnimNotify_OnLandEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TPVAnimInstance.AnimNotify_OnLandEnd");

	UTPVAnimInstance_AnimNotify_OnLandEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TPVAnimInstance.AnimNotify_OnJumpIntroEnd
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTPVAnimInstance::STATIC_AnimNotify_OnJumpIntroEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TPVAnimInstance.AnimNotify_OnJumpIntroEnd");

	UTPVAnimInstance_AnimNotify_OnJumpIntroEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TPVAnimInstance.AnimNotify_NCWalkStartEntered
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTPVAnimInstance::STATIC_AnimNotify_NCWalkStartEntered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TPVAnimInstance.AnimNotify_NCWalkStartEntered");

	UTPVAnimInstance_AnimNotify_NCWalkStartEntered_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TPVAnimInstance.AnimNotify_NCWalkEntered
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTPVAnimInstance::STATIC_AnimNotify_NCWalkEntered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TPVAnimInstance.AnimNotify_NCWalkEntered");

	UTPVAnimInstance_AnimNotify_NCWalkEntered_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TPVAnimInstance.AnimNotify_NCTurnEntered
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTPVAnimInstance::STATIC_AnimNotify_NCTurnEntered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TPVAnimInstance.AnimNotify_NCTurnEntered");

	UTPVAnimInstance_AnimNotify_NCTurnEntered_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TPVAnimInstance.AnimNotify_NCRunEntered
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTPVAnimInstance::STATIC_AnimNotify_NCRunEntered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TPVAnimInstance.AnimNotify_NCRunEntered");

	UTPVAnimInstance_AnimNotify_NCRunEntered_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TPVAnimInstance.AnimNotify_NCIdleEntered
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTPVAnimInstance::STATIC_AnimNotify_NCIdleEntered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TPVAnimInstance.AnimNotify_NCIdleEntered");

	UTPVAnimInstance_AnimNotify_NCIdleEntered_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TPVAnimInstance.AnimNotify_JumpStateMachineComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTPVAnimInstance::STATIC_AnimNotify_JumpStateMachineComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TPVAnimInstance.AnimNotify_JumpStateMachineComplete");

	UTPVAnimInstance_AnimNotify_JumpStateMachineComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TPVAnimInstance.AnimNotify_IdleStateLeft
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTPVAnimInstance::STATIC_AnimNotify_IdleStateLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TPVAnimInstance.AnimNotify_IdleStateLeft");

	UTPVAnimInstance_AnimNotify_IdleStateLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TPVAnimInstance.AnimNotify_CTurnEntered
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTPVAnimInstance::STATIC_AnimNotify_CTurnEntered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TPVAnimInstance.AnimNotify_CTurnEntered");

	UTPVAnimInstance_AnimNotify_CTurnEntered_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TPVAnimInstance.AnimNotify_CombatStateEntered
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTPVAnimInstance::STATIC_AnimNotify_CombatStateEntered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TPVAnimInstance.AnimNotify_CombatStateEntered");

	UTPVAnimInstance_AnimNotify_CombatStateEntered_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TPVAnimInstance.AnimNotify_ClearFurnitureFlag
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTPVAnimInstance::STATIC_AnimNotify_ClearFurnitureFlag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TPVAnimInstance.AnimNotify_ClearFurnitureFlag");

	UTPVAnimInstance_AnimNotify_ClearFurnitureFlag_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.BipedAnimInstance.UpdatePersonalityAnims
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UBipedAnimInstance::STATIC_UpdatePersonalityAnims()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BipedAnimInstance.UpdatePersonalityAnims");

	UBipedAnimInstance_UpdatePersonalityAnims_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.BipedAnimInstance.PickRandomIdle
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UBipedAnimInstance::STATIC_PickRandomIdle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BipedAnimInstance.PickRandomIdle");

	UBipedAnimInstance_PickRandomIdle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.BipedAnimInstance.AnimNotify_SafeToReevaluateTalking
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UBipedAnimInstance::STATIC_AnimNotify_SafeToReevaluateTalking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BipedAnimInstance.AnimNotify_SafeToReevaluateTalking");

	UBipedAnimInstance_AnimNotify_SafeToReevaluateTalking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.BossComponent.OnHealthChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          HealthChange                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  InInstigator                   (Parm, ZeroConstructor, IsPlainOldData)

void UBossComponent::STATIC_OnHealthChanged(float HealthChange, class AActor* InInstigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BossComponent.OnHealthChanged");

	UBossComponent_OnHealthChanged_Params params;
	params.HealthChange = HealthChange;
	params.InInstigator = InInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.BossComponent.OnCombatStateChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bIsInCombat                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void UBossComponent::STATIC_OnCombatStateChanged(bool bIsInCombat, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BossComponent.OnCombatStateChanged");

	UBossComponent_OnCombatStateChanged_Params params;
	params.bIsInCombat = bIsInCombat;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.BTTask_Disable.OnRagdollComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UStatusEffect*           StatusEffect                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UBTTask_Disable::STATIC_OnRagdollComplete(class UStatusEffect* StatusEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BTTask_Disable.OnRagdollComplete");

	UBTTask_Disable_OnRagdollComplete_Params params;
	params.StatusEffect = StatusEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.BTTask_Disable.OnPushComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UStatusEffect*           StatusEffect                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UBTTask_Disable::STATIC_OnPushComplete(class UStatusEffect* StatusEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BTTask_Disable.OnPushComplete");

	UBTTask_Disable_OnPushComplete_Params params;
	params.StatusEffect = StatusEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.BTTask_Disable.OnMontageBlendingOut
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInterrupted                   (Parm, ZeroConstructor, IsPlainOldData)

void UBTTask_Disable::STATIC_OnMontageBlendingOut(class UAnimMontage* Montage, bool bInterrupted)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BTTask_Disable.OnMontageBlendingOut");

	UBTTask_Disable_OnMontageBlendingOut_Params params;
	params.Montage = Montage;
	params.bInterrupted = bInterrupted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.BTTask_Disable.OnIdleFinished
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UStatusEffect*           StatusEffect                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UBTTask_Disable::STATIC_OnIdleFinished(class UStatusEffect* StatusEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BTTask_Disable.OnIdleFinished");

	UBTTask_Disable_OnIdleFinished_Params params;
	params.StatusEffect = StatusEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.BTTask_Disable.OnFreezeComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UStatusEffect*           StatusEffect                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UBTTask_Disable::STATIC_OnFreezeComplete(class UStatusEffect* StatusEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BTTask_Disable.OnFreezeComplete");

	UBTTask_Disable_OnFreezeComplete_Params params;
	params.StatusEffect = StatusEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.BTTask_Disable.OnDisableFinished
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UStatusEffect*           StatusEffect                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UBTTask_Disable::STATIC_OnDisableFinished(class UStatusEffect* StatusEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.BTTask_Disable.OnDisableFinished");

	UBTTask_Disable_OnDisableFinished_Params params;
	params.StatusEffect = StatusEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ButtonBase.SetSelectedPressedBrush
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FSlateBrush             InBrush                        (ConstParm, Parm, OutParm, ReferenceParm)

void UButtonBase::STATIC_SetSelectedPressedBrush(const struct FSlateBrush& InBrush)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBase.SetSelectedPressedBrush");

	UButtonBase_SetSelectedPressedBrush_Params params;
	params.InBrush = InBrush;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ButtonBase.SetSelectedNormalBrush
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FSlateBrush             InBrush                        (ConstParm, Parm, OutParm, ReferenceParm)

void UButtonBase::STATIC_SetSelectedNormalBrush(const struct FSlateBrush& InBrush)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBase.SetSelectedNormalBrush");

	UButtonBase_SetSelectedNormalBrush_Params params;
	params.InBrush = InBrush;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ButtonBase.SetSelectedHoveredBrush
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FSlateBrush             InBrush                        (ConstParm, Parm, OutParm, ReferenceParm)

void UButtonBase::STATIC_SetSelectedHoveredBrush(const struct FSlateBrush& InBrush)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBase.SetSelectedHoveredBrush");

	UButtonBase_SetSelectedHoveredBrush_Params params;
	params.InBrush = InBrush;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ButtonBase.SetSelectedFocusedBrush
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FSlateBrush             InBrush                        (ConstParm, Parm, OutParm, ReferenceParm)

void UButtonBase::STATIC_SetSelectedFocusedBrush(const struct FSlateBrush& InBrush)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBase.SetSelectedFocusedBrush");

	UButtonBase_SetSelectedFocusedBrush_Params params;
	params.InBrush = InBrush;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ButtonBase.SetSelected
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bSelected                      (Parm, ZeroConstructor, IsPlainOldData)
// EFocusCause                    Cause                          (Parm, ZeroConstructor, IsPlainOldData)

void UButtonBase::STATIC_SetSelected(bool bSelected, EFocusCause Cause)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBase.SetSelected");

	UButtonBase_SetSelected_Params params;
	params.bSelected = bSelected;
	params.Cause = Cause;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ButtonBase.SetPressedBrush
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FSlateBrush             InBrush                        (ConstParm, Parm, OutParm, ReferenceParm)

void UButtonBase::STATIC_SetPressedBrush(const struct FSlateBrush& InBrush)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBase.SetPressedBrush");

	UButtonBase_SetPressedBrush_Params params;
	params.InBrush = InBrush;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ButtonBase.SetNormalBrush
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FSlateBrush             InBrush                        (ConstParm, Parm, OutParm, ReferenceParm)

void UButtonBase::STATIC_SetNormalBrush(const struct FSlateBrush& InBrush)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBase.SetNormalBrush");

	UButtonBase_SetNormalBrush_Params params;
	params.InBrush = InBrush;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ButtonBase.SetHoveredBrush
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FSlateBrush             InBrush                        (ConstParm, Parm, OutParm, ReferenceParm)

void UButtonBase::STATIC_SetHoveredBrush(const struct FSlateBrush& InBrush)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBase.SetHoveredBrush");

	UButtonBase_SetHoveredBrush_Params params;
	params.InBrush = InBrush;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ButtonBase.SetFocusedBrush
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FSlateBrush             InBrush                        (ConstParm, Parm, OutParm, ReferenceParm)

void UButtonBase::STATIC_SetFocusedBrush(const struct FSlateBrush& InBrush)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBase.SetFocusedBrush");

	UButtonBase_SetFocusedBrush_Params params;
	params.InBrush = InBrush;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ButtonBase.SetFocusable
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bFocused                       (Parm, ZeroConstructor, IsPlainOldData)

void UButtonBase::STATIC_SetFocusable(bool bFocused)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBase.SetFocusable");

	UButtonBase_SetFocusable_Params params;
	params.bFocused = bFocused;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ButtonBase.SetEnabled
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bInEnabled                     (Parm, ZeroConstructor, IsPlainOldData)

void UButtonBase::STATIC_SetEnabled(bool bInEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBase.SetEnabled");

	UButtonBase_SetEnabled_Params params;
	params.bInEnabled = bInEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ButtonBase.SetContentColor
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FLinearColor            InColorAndOpacity              (Parm, ZeroConstructor, IsPlainOldData)

void UButtonBase::STATIC_SetContentColor(const struct FLinearColor& InColorAndOpacity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBase.SetContentColor");

	UButtonBase_SetContentColor_Params params;
	params.InColorAndOpacity = InColorAndOpacity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ButtonBase.SetButtonType
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EButtonType                    TypeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UButtonBase::STATIC_SetButtonType(EButtonType TypeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBase.SetButtonType");

	UButtonBase_SetButtonType_Params params;
	params.TypeIn = TypeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ButtonBase.SetButtonColor
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FLinearColor            InBackgroundColor              (Parm, ZeroConstructor, IsPlainOldData)

void UButtonBase::STATIC_SetButtonColor(const struct FLinearColor& InBackgroundColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBase.SetButtonColor");

	UButtonBase_SetButtonColor_Params params;
	params.InBackgroundColor = InBackgroundColor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ButtonBase.SetAllowSelectionStateChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bAllowChange                   (Parm, ZeroConstructor, IsPlainOldData)

void UButtonBase::STATIC_SetAllowSelectionStateChange(bool bAllowChange)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBase.SetAllowSelectionStateChange");

	UButtonBase_SetAllowSelectionStateChange_Params params;
	params.bAllowChange = bAllowChange;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ButtonBase.SetAdvancedHitTexture
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UTexture2D*              InTexture                      (Parm, ZeroConstructor, IsPlainOldData)

void UButtonBase::STATIC_SetAdvancedHitTexture(class UTexture2D* InTexture)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBase.SetAdvancedHitTexture");

	UButtonBase_SetAdvancedHitTexture_Params params;
	params.InTexture = InTexture;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ButtonBase.SetAdvancedHitAlpha
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            InAlpha                        (Parm, ZeroConstructor, IsPlainOldData)

void UButtonBase::STATIC_SetAdvancedHitAlpha(int InAlpha)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBase.SetAdvancedHitAlpha");

	UButtonBase_SetAdvancedHitAlpha_Params params;
	params.InAlpha = InAlpha;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ButtonBase.IsSelected
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UButtonBase::IsSelected()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBase.IsSelected");

	UButtonBase_IsSelected_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ButtonBase.IsPressed
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UButtonBase::IsPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBase.IsPressed");

	UButtonBase_IsPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ButtonBase.GetSelectedPressedBrush
// ()
// Parameters:
// struct FSlateBrush             ReturnValue                    (Parm, OutParm, ReturnParm)

struct FSlateBrush UButtonBase::GetSelectedPressedBrush()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBase.GetSelectedPressedBrush");

	UButtonBase_GetSelectedPressedBrush_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ButtonBase.GetSelectedNormalBrush
// ()
// Parameters:
// struct FSlateBrush             ReturnValue                    (Parm, OutParm, ReturnParm)

struct FSlateBrush UButtonBase::GetSelectedNormalBrush()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBase.GetSelectedNormalBrush");

	UButtonBase_GetSelectedNormalBrush_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ButtonBase.GetSelectedHoveredBrush
// ()
// Parameters:
// struct FSlateBrush             ReturnValue                    (Parm, OutParm, ReturnParm)

struct FSlateBrush UButtonBase::GetSelectedHoveredBrush()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBase.GetSelectedHoveredBrush");

	UButtonBase_GetSelectedHoveredBrush_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ButtonBase.GetSelectedFocusedBrush
// ()
// Parameters:
// struct FSlateBrush             ReturnValue                    (Parm, OutParm, ReturnParm)

struct FSlateBrush UButtonBase::GetSelectedFocusedBrush()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBase.GetSelectedFocusedBrush");

	UButtonBase_GetSelectedFocusedBrush_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ButtonBase.GetPressedBrush
// ()
// Parameters:
// struct FSlateBrush             ReturnValue                    (Parm, OutParm, ReturnParm)

struct FSlateBrush UButtonBase::GetPressedBrush()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBase.GetPressedBrush");

	UButtonBase_GetPressedBrush_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ButtonBase.GetNormalBrush
// ()
// Parameters:
// struct FSlateBrush             ReturnValue                    (Parm, OutParm, ReturnParm)

struct FSlateBrush UButtonBase::GetNormalBrush()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBase.GetNormalBrush");

	UButtonBase_GetNormalBrush_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ButtonBase.GetHoveredBrush
// ()
// Parameters:
// struct FSlateBrush             ReturnValue                    (Parm, OutParm, ReturnParm)

struct FSlateBrush UButtonBase::GetHoveredBrush()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBase.GetHoveredBrush");

	UButtonBase_GetHoveredBrush_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ButtonBase.GetFocusedBrush
// ()
// Parameters:
// struct FSlateBrush             ReturnValue                    (Parm, OutParm, ReturnParm)

struct FSlateBrush UButtonBase::GetFocusedBrush()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBase.GetFocusedBrush");

	UButtonBase_GetFocusedBrush_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ButtonBase.GetButtonType
// ()
// Parameters:
// EButtonType                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EButtonType UButtonBase::GetButtonType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBase.GetButtonType");

	UButtonBase_GetButtonType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ButtonBase.AllowsSelectionStateChange
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UButtonBase::AllowsSelectionStateChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBase.AllowsSelectionStateChange");

	UButtonBase_AllowsSelectionStateChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ButtonBaseContainerWidget.OnActivatableChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bActivatable                   (Parm, ZeroConstructor, IsPlainOldData)

void UButtonBaseContainerWidget::STATIC_OnActivatableChange(bool bActivatable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBaseContainerWidget.OnActivatableChange");

	UButtonBaseContainerWidget_OnActivatableChange_Params params;
	params.bActivatable = bActivatable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ButtonBaseSlot.SetVerticalAlignment
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// TEnumAsByte<EVerticalAlignment> InVerticalAlignment            (Parm, ZeroConstructor, IsPlainOldData)

void UButtonBaseSlot::STATIC_SetVerticalAlignment(TEnumAsByte<EVerticalAlignment> InVerticalAlignment)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBaseSlot.SetVerticalAlignment");

	UButtonBaseSlot_SetVerticalAlignment_Params params;
	params.InVerticalAlignment = InVerticalAlignment;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ButtonBaseSlot.SetPadding
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FMargin                 InPadding                      (Parm, ZeroConstructor, IsPlainOldData)

void UButtonBaseSlot::STATIC_SetPadding(const struct FMargin& InPadding)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBaseSlot.SetPadding");

	UButtonBaseSlot_SetPadding_Params params;
	params.InPadding = InPadding;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ButtonBaseSlot.SetHorizontalAlignment
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// TEnumAsByte<EHorizontalAlignment> InHorizontalAlignment          (Parm, ZeroConstructor, IsPlainOldData)

void UButtonBaseSlot::STATIC_SetHorizontalAlignment(TEnumAsByte<EHorizontalAlignment> InHorizontalAlignment)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonBaseSlot.SetHorizontalAlignment");

	UButtonBaseSlot_SetHorizontalAlignment_Params params;
	params.InHorizontalAlignment = InHorizontalAlignment;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CombatCameraComponent.EndCamera
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCombatCameraComponent::STATIC_EndCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CombatCameraComponent.EndCamera");

	UCombatCameraComponent_EndCamera_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatsSkillButtonEntryBase.UpdateButtonBrush
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UStatsSkillButtonEntryBase::STATIC_UpdateButtonBrush()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatsSkillButtonEntryBase.UpdateButtonBrush");

	UStatsSkillButtonEntryBase_UpdateButtonBrush_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CategoryButtonEntryWidget.OnCategoryUnhoveredUnfocused
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCategoryButtonEntryWidget::STATIC_OnCategoryUnhoveredUnfocused()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CategoryButtonEntryWidget.OnCategoryUnhoveredUnfocused");

	UCategoryButtonEntryWidget_OnCategoryUnhoveredUnfocused_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CauseDamageReticleWidget.ShowWeakAnim
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCauseDamageReticleWidget::STATIC_ShowWeakAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CauseDamageReticleWidget.ShowWeakAnim");

	UCauseDamageReticleWidget_ShowWeakAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CauseDamageReticleWidget.ShowKillAnim
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCauseDamageReticleWidget::STATIC_ShowKillAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CauseDamageReticleWidget.ShowKillAnim");

	UCauseDamageReticleWidget_ShowKillAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CauseDamageReticleWidget.ShowHitAnim
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCauseDamageReticleWidget::STATIC_ShowHitAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CauseDamageReticleWidget.ShowHitAnim");

	UCauseDamageReticleWidget_ShowHitAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CauseDamageReticleWidget.OnCauseDamage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FCauseDamageInfo        CauseDamageInfo                (ConstParm, Parm, OutParm, ReferenceParm)

void UCauseDamageReticleWidget::STATIC_OnCauseDamage(const struct FCauseDamageInfo& CauseDamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CauseDamageReticleWidget.OnCauseDamage");

	UCauseDamageReticleWidget_OnCauseDamage_Params params;
	params.CauseDamageInfo = CauseDamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CCAppearancePageWidget.SetCharacterDefaults
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCCAppearancePageWidget::STATIC_SetCharacterDefaults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CCAppearancePageWidget.SetCharacterDefaults");

	UCCAppearancePageWidget_SetCharacterDefaults_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CCAppearancePageWidget.RandomizeCharacter
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCCAppearancePageWidget::STATIC_RandomizeCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CCAppearancePageWidget.RandomizeCharacter");

	UCCAppearancePageWidget_RandomizeCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CCAppearancePageWidget.OnProgressToNextPage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCCAppearancePageWidget::STATIC_OnProgressToNextPage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CCAppearancePageWidget.OnProgressToNextPage");

	UCCAppearancePageWidget_OnProgressToNextPage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CCAppearancePageWidget.OnExpandableAreaChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UExpandableAreaBase*     AreaBaseWidget                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bIsExpanded                    (Parm, ZeroConstructor, IsPlainOldData)

void UCCAppearancePageWidget::STATIC_OnExpandableAreaChanged(class UExpandableAreaBase* AreaBaseWidget, bool bIsExpanded)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CCAppearancePageWidget.OnExpandableAreaChanged");

	UCCAppearancePageWidget_OnExpandableAreaChanged_Params params;
	params.AreaBaseWidget = AreaBaseWidget;
	params.bIsExpanded = bIsExpanded;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CCAppearancePageWidget.OnBorderMouseDown
// (BlueprintCosmetic, NetReliable)
// Parameters:
// struct FGeometry               MyGeometry                     (Parm, IsPlainOldData)
// struct FPointerEvent           MouseEvent                     (ConstParm, Parm, OutParm, ReferenceParm)
// struct FEventReply             ReturnValue                    (Parm, OutParm, ReturnParm)

struct FEventReply UCCAppearancePageWidget::OnBorderMouseDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CCAppearancePageWidget.OnBorderMouseDown");

	UCCAppearancePageWidget_OnBorderMouseDown_Params params;
	params.MyGeometry = MyGeometry;
	params.MouseEvent = MouseEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.CCSkillsPageWidget.OnUserScrolled
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          ScrollAmount                   (Parm, ZeroConstructor, IsPlainOldData)

void UCCSkillsPageWidget::STATIC_OnUserScrolled(float ScrollAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CCSkillsPageWidget.OnUserScrolled");

	UCCSkillsPageWidget_OnUserScrolled_Params params;
	params.ScrollAmount = ScrollAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterCreationMasterWidget.PlayPartTwoOutroMovie
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bWasSkipped                    (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterCreationMasterWidget::STATIC_PlayPartTwoOutroMovie(bool bWasSkipped)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterCreationMasterWidget.PlayPartTwoOutroMovie");

	UCharacterCreationMasterWidget_PlayPartTwoOutroMovie_Params params;
	params.bWasSkipped = bWasSkipped;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterCreationMasterWidget.OnPageBack
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCharacterCreationMasterWidget::STATIC_OnPageBack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterCreationMasterWidget.OnPageBack");

	UCharacterCreationMasterWidget_OnPageBack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterCreationMasterWidget.OnOutroMovieTwoComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bWasSkipped                    (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterCreationMasterWidget::STATIC_OnOutroMovieTwoComplete(bool bWasSkipped)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterCreationMasterWidget.OnOutroMovieTwoComplete");

	UCharacterCreationMasterWidget_OnOutroMovieTwoComplete_Params params;
	params.bWasSkipped = bWasSkipped;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterCreationMasterWidget.OnOutroMovieStarted
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCharacterCreationMasterWidget::STATIC_OnOutroMovieStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterCreationMasterWidget.OnOutroMovieStarted");

	UCharacterCreationMasterWidget_OnOutroMovieStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterCreationMasterWidget.OnOutroMoviePartTwoComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bWasSkipped                    (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterCreationMasterWidget::STATIC_OnOutroMoviePartTwoComplete(bool bWasSkipped)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterCreationMasterWidget.OnOutroMoviePartTwoComplete");

	UCharacterCreationMasterWidget_OnOutroMoviePartTwoComplete_Params params;
	params.bWasSkipped = bWasSkipped;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterCreationMasterWidget.OnOutroMoviePartOneComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bWasSkipped                    (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterCreationMasterWidget::STATIC_OnOutroMoviePartOneComplete(bool bWasSkipped)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterCreationMasterWidget.OnOutroMoviePartOneComplete");

	UCharacterCreationMasterWidget_OnOutroMoviePartOneComplete_Params params;
	params.bWasSkipped = bWasSkipped;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterCreationMasterWidget.OnIntroMovieCompleteImpl
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bWasSkipped                    (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterCreationMasterWidget::STATIC_OnIntroMovieCompleteImpl(bool bWasSkipped)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterCreationMasterWidget.OnIntroMovieCompleteImpl");

	UCharacterCreationMasterWidget_OnIntroMovieCompleteImpl_Params params;
	params.bWasSkipped = bWasSkipped;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterCreationMasterWidget.OnIntroMovieComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bWasSkipped                    (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterCreationMasterWidget::STATIC_OnIntroMovieComplete(bool bWasSkipped)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterCreationMasterWidget.OnIntroMovieComplete");

	UCharacterCreationMasterWidget_OnIntroMovieComplete_Params params;
	params.bWasSkipped = bWasSkipped;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterCreationMasterWidget.OnIntroAnimSequenceComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCharacterCreationMasterWidget::STATIC_OnIntroAnimSequenceComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterCreationMasterWidget.OnIntroAnimSequenceComplete");

	UCharacterCreationMasterWidget_OnIntroAnimSequenceComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterCreationMasterWidget.OnFadeOutContents
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCharacterCreationMasterWidget::STATIC_OnFadeOutContents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterCreationMasterWidget.OnFadeOutContents");

	UCharacterCreationMasterWidget_OnFadeOutContents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterCreationMasterWidget.OnFadeInContents
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCharacterCreationMasterWidget::STATIC_OnFadeInContents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterCreationMasterWidget.OnFadeInContents");

	UCharacterCreationMasterWidget_OnFadeInContents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterCreationMasterWidget.OnCharacterCreationUIStart
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCharacterCreationMasterWidget::STATIC_OnCharacterCreationUIStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterCreationMasterWidget.OnCharacterCreationUIStart");

	UCharacterCreationMasterWidget_OnCharacterCreationUIStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DeathClass.Tick
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Delta                          (Parm, ZeroConstructor, IsPlainOldData)

void UDeathClass::STATIC_Tick(float Delta)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DeathClass.Tick");

	UDeathClass_Tick_Params params;
	params.Delta = Delta;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DeathClass.FindAudioEvent
// (BlueprintCosmetic)
// Parameters:
// struct FGameplayTag            DeathAudioEvent                (ConstParm, Parm, OutParm, ReferenceParm)
// class UAkAudioEvent*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAkAudioEvent* UDeathClass::FindAudioEvent(const struct FGameplayTag& DeathAudioEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DeathClass.FindAudioEvent");

	UDeathClass_FindAudioEvent_Params params;
	params.DeathAudioEvent = DeathAudioEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.DeathClass.FindAndPostAudioEvent
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGameplayTag            DeathAudioEvent                (ConstParm, Parm, OutParm, ReferenceParm)

void UDeathClass::STATIC_FindAndPostAudioEvent(const struct FGameplayTag& DeathAudioEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DeathClass.FindAndPostAudioEvent");

	UDeathClass_FindAndPostAudioEvent_Params params;
	params.DeathAudioEvent = DeathAudioEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DeathClass.ExecuteOnReload
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UCharacterDeathComponent* InDeathComponent               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UDeathClass::STATIC_ExecuteOnReload(class UCharacterDeathComponent* InDeathComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DeathClass.ExecuteOnReload");

	UDeathClass_ExecuteOnReload_Params params;
	params.InDeathComponent = InDeathComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DeathClass.Execute
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UCharacterDeathComponent* InDeathComponent               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UDeathClass::STATIC_Execute(class UCharacterDeathComponent* InDeathComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DeathClass.Execute");

	UDeathClass_Execute_Params params;
	params.InDeathComponent = InDeathComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DeathComponent.DeathComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDeathComponent::STATIC_DeathComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DeathComponent.DeathComplete");

	UDeathComponent_DeathComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterDeathComponent.StoreDeathImpact
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FVector                 Impulse                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   BoneName                       (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterDeathComponent::STATIC_StoreDeathImpact(const struct FVector& Impulse, const struct FVector& Location, const struct FName& BoneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterDeathComponent.StoreDeathImpact");

	UCharacterDeathComponent_StoreDeathImpact_Params params;
	params.Impulse = Impulse;
	params.Location = Location;
	params.BoneName = BoneName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterDeathComponent.SpawnAshPile
// ()
// Parameters:
// class UStaticMesh*             Mesh                           (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInterface*      LootablePileMaterial           (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInstanceDynamic* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInstanceDynamic* UCharacterDeathComponent::SpawnAshPile(class UStaticMesh* Mesh, class UMaterialInterface* LootablePileMaterial)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterDeathComponent.SpawnAshPile");

	UCharacterDeathComponent_SpawnAshPile_Params params;
	params.Mesh = Mesh;
	params.LootablePileMaterial = LootablePileMaterial;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.CharacterDeathComponent.RagdollCharacter
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bIgnoreDeathMontages           (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterDeathComponent::STATIC_RagdollCharacter(bool bIgnoreDeathMontages)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterDeathComponent.RagdollCharacter");

	UCharacterDeathComponent_RagdollCharacter_Params params;
	params.bIgnoreDeathMontages = bIgnoreDeathMontages;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterDeathComponent.OnMontageEnded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInterrupted                   (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterDeathComponent::STATIC_OnMontageEnded(class UAnimMontage* Montage, bool bInterrupted)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterDeathComponent.OnMontageEnded");

	UCharacterDeathComponent_OnMontageEnded_Params params;
	params.Montage = Montage;
	params.bInterrupted = bInterrupted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterDeathComponent.HideProps
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCharacterDeathComponent::STATIC_HideProps()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterDeathComponent.HideProps");

	UCharacterDeathComponent_HideProps_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterDeathComponent.HideAppearanceMeshes
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCharacterDeathComponent::STATIC_HideAppearanceMeshes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterDeathComponent.HideAppearanceMeshes");

	UCharacterDeathComponent_HideAppearanceMeshes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterDeathComponent.GibCharacter
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCharacterDeathComponent::STATIC_GibCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterDeathComponent.GibCharacter");

	UCharacterDeathComponent_GibCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterDeathComponent.DetachImpactFx
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCharacterDeathComponent::STATIC_DetachImpactFx()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterDeathComponent.DetachImpactFx");

	UCharacterDeathComponent_DetachImpactFx_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterDeathComponent.CalcImpactVector
// ()
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UCharacterDeathComponent::CalcImpactVector()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterDeathComponent.CalcImpactVector");

	UCharacterDeathComponent_CalcImpactVector_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.CharacterDeathComponent.BreakBone
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCharacterDeathComponent::STATIC_BreakBone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterDeathComponent.BreakBone");

	UCharacterDeathComponent_BreakBone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterDeathComponent.BreakAllBones
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCharacterDeathComponent::STATIC_BreakAllBones()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterDeathComponent.BreakAllBones");

	UCharacterDeathComponent_BreakAllBones_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterDeathComponent.AttachGoreCaps
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCharacterDeathComponent::STATIC_AttachGoreCaps()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterDeathComponent.AttachGoreCaps");

	UCharacterDeathComponent_AttachGoreCaps_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterDeathComponent.AttachAllGoreCaps
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCharacterDeathComponent::STATIC_AttachAllGoreCaps()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterDeathComponent.AttachAllGoreCaps");

	UCharacterDeathComponent_AttachAllGoreCaps_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterInfoComponent.UnlockPerksWithRandomLevels_Debug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCharacterInfoComponent::STATIC_UnlockPerksWithRandomLevels_Debug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterInfoComponent.UnlockPerksWithRandomLevels_Debug");

	UCharacterInfoComponent_UnlockPerksWithRandomLevels_Debug_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterInfoComponent.SetLevel
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            NewLevel                       (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterInfoComponent::STATIC_SetLevel(int NewLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterInfoComponent.SetLevel");

	UCharacterInfoComponent_SetLevel_Params params;
	params.NewLevel = NewLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterInfoComponent.PerkRemove
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  PerkName                       (Parm, ZeroConstructor)

void UCharacterInfoComponent::STATIC_PerkRemove(const class FString& PerkName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterInfoComponent.PerkRemove");

	UCharacterInfoComponent_PerkRemove_Params params;
	params.PerkName = PerkName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterInfoComponent.PerkPurchase
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  PerkName                       (Parm, ZeroConstructor)

void UCharacterInfoComponent::STATIC_PerkPurchase(const class FString& PerkName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterInfoComponent.PerkPurchase");

	UCharacterInfoComponent_PerkPurchase_Params params;
	params.PerkName = PerkName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterInfoComponent.PerkPointsAdd
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterInfoComponent::STATIC_PerkPointsAdd(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterInfoComponent.PerkPointsAdd");

	UCharacterInfoComponent_PerkPointsAdd_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterInfoComponent.OnWeaponEndUnequip
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UCharacterInfoComponent::STATIC_OnWeaponEndUnequip(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterInfoComponent.OnWeaponEndUnequip");

	UCharacterInfoComponent_OnWeaponEndUnequip_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterInfoComponent.OnWeaponEndEquip
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UCharacterInfoComponent::STATIC_OnWeaponEndEquip(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterInfoComponent.OnWeaponEndEquip");

	UCharacterInfoComponent_OnWeaponEndEquip_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterInfoComponent.OnStatUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class URpgStat*                Stat                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UCharacterInfoComponent::STATIC_OnStatUpdated(class URpgStat* Stat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterInfoComponent.OnStatUpdated");

	UCharacterInfoComponent_OnStatUpdated_Params params;
	params.Stat = Stat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterInfoComponent.OnCompanionRegistered
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaAiCharacter*     Companion                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRegister                      (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterInfoComponent::STATIC_OnCompanionRegistered(class AIndianaAiCharacter* Companion, bool bRegister)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterInfoComponent.OnCompanionRegistered");

	UCharacterInfoComponent_OnCompanionRegistered_Params params;
	params.Companion = Companion;
	params.bRegister = bRegister;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterInfoComponent.GetName
// ()
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UCharacterInfoComponent::GetName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterInfoComponent.GetName");

	UCharacterInfoComponent_GetName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.CharacterInfoComponent.GetLevelScaledByWorld
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UCharacterInfoComponent::GetLevelScaledByWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterInfoComponent.GetLevelScaledByWorld");

	UCharacterInfoComponent_GetLevelScaledByWorld_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.CharacterInfoComponent.GetLevelScaledAtLocation
// (BlueprintAuthorityOnly, BlueprintCosmetic)
// Parameters:
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UCharacterInfoComponent::GetLevelScaledAtLocation(const struct FVector& Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterInfoComponent.GetLevelScaledAtLocation");

	UCharacterInfoComponent_GetLevelScaledAtLocation_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.CharacterInfoComponent.GetLevel
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UCharacterInfoComponent::GetLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterInfoComponent.GetLevel");

	UCharacterInfoComponent_GetLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.CharacterInfoComponent.GetGender
// ()
// Parameters:
// EGender                        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EGender UCharacterInfoComponent::GetGender()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterInfoComponent.GetGender");

	UCharacterInfoComponent_GetGender_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.CharacterInfoComponent.GetCreatureXPType
// ()
// Parameters:
// ECreatureXPType                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECreatureXPType UCharacterInfoComponent::GetCreatureXPType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterInfoComponent.GetCreatureXPType");

	UCharacterInfoComponent_GetCreatureXPType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.InventoryComponent.TransferItemsBetweenActorsByTag
// (Final, BlueprintAuthorityOnly)
// Parameters:
// class AActor*                  SourceActor                    (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DestinationActor               (Parm, ZeroConstructor, IsPlainOldData)
// struct FGameplayTagContainer   MatchTags                      (Parm)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bPotentialTheft                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInventoryComponent::TransferItemsBetweenActorsByTag(class AActor* SourceActor, class AActor* DestinationActor, const struct FGameplayTagContainer& MatchTags, int Count, bool bPotentialTheft)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryComponent.TransferItemsBetweenActorsByTag");

	UInventoryComponent_TransferItemsBetweenActorsByTag_Params params;
	params.SourceActor = SourceActor;
	params.DestinationActor = DestinationActor;
	params.MatchTags = MatchTags;
	params.Count = Count;
	params.bPotentialTheft = bPotentialTheft;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.InventoryComponent.ShowItemRemovedNotification
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UClass*                  ItemType                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryComponent::STATIC_ShowItemRemovedNotification(class UClass* ItemType, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryComponent.ShowItemRemovedNotification");

	UInventoryComponent_ShowItemRemovedNotification_Params params;
	params.ItemType = ItemType;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InventoryComponent.ShowItemGainedNotification
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UClass*                  ItemType                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryComponent::STATIC_ShowItemGainedNotification(class UClass* ItemType, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryComponent.ShowItemGainedNotification");

	UInventoryComponent_ShowItemGainedNotification_Params params;
	params.ItemType = ItemType;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InventoryComponent.RemoveItemsFromActorByTag
// (BlueprintAuthorityOnly, BlueprintCosmetic)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FGameplayTagContainer   MatchTags                      (Parm)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInventoryComponent::RemoveItemsFromActorByTag(class AActor* Actor, const struct FGameplayTagContainer& MatchTags, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryComponent.RemoveItemsFromActorByTag");

	UInventoryComponent_RemoveItemsFromActorByTag_Params params;
	params.Actor = Actor;
	params.MatchTags = MatchTags;
	params.Count = Count;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.InventoryComponent.RemoveItemFromActor
// (BlueprintAuthorityOnly)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ItemType                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInventoryComponent::RemoveItemFromActor(class AActor* Actor, class UClass* ItemType, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryComponent.RemoveItemFromActor");

	UInventoryComponent_RemoveItemFromActor_Params params;
	params.Actor = Actor;
	params.ItemType = ItemType;
	params.Count = Count;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.InventoryComponent.RemoveCurrency
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bVendorInteraction             (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryComponent::STATIC_RemoveCurrency(int Amount, bool bVendorInteraction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryComponent.RemoveCurrency");

	UInventoryComponent_RemoveCurrency_Params params;
	params.Amount = Amount;
	params.bVendorInteraction = bVendorInteraction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InventoryComponent.IsEmpty
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInventoryComponent::IsEmpty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryComponent.IsEmpty");

	UInventoryComponent_IsEmpty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.InventoryComponent.HasItemCountOnActorByTag
// (BlueprintAuthorityOnly, BlueprintCosmetic)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FGameplayTagContainer   MatchTags                      (Parm)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInventoryComponent::HasItemCountOnActorByTag(class AActor* Actor, const struct FGameplayTagContainer& MatchTags, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryComponent.HasItemCountOnActorByTag");

	UInventoryComponent_HasItemCountOnActorByTag_Params params;
	params.Actor = Actor;
	params.MatchTags = MatchTags;
	params.Count = Count;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.InventoryComponent.HasItemCountOnActor
// (BlueprintAuthorityOnly)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ItemType                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInventoryComponent::HasItemCountOnActor(class AActor* Actor, class UClass* ItemType, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryComponent.HasItemCountOnActor");

	UInventoryComponent_HasItemCountOnActor_Params params;
	params.Actor = Actor;
	params.ItemType = ItemType;
	params.Count = Count;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.InventoryComponent.GetItemCountOnActor
// ()
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ItemType                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UInventoryComponent::GetItemCountOnActor(class AActor* Actor, class UClass* ItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryComponent.GetItemCountOnActor");

	UInventoryComponent_GetItemCountOnActor_Params params;
	params.Actor = Actor;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.InventoryComponent.DebugCreateInventory
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            NumToAddPerItem                (Parm, ZeroConstructor, IsPlainOldData)
// int                            Skip                           (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryComponent::STATIC_DebugCreateInventory(int NumToAddPerItem, int Skip)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryComponent.DebugCreateInventory");

	UInventoryComponent_DebugCreateInventory_Params params;
	params.NumToAddPerItem = NumToAddPerItem;
	params.Skip = Skip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InventoryComponent.ContainsLoot
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInventoryComponent::ContainsLoot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryComponent.ContainsLoot");

	UInventoryComponent_ContainsLoot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.InventoryComponent.AddLootFromTable
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class ULootTableData*          LootTable                      (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryComponent::STATIC_AddLootFromTable(class ULootTableData* LootTable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryComponent.AddLootFromTable");

	UInventoryComponent_AddLootFromTable_Params params;
	params.LootTable = LootTable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InventoryComponent.AddItemToActor
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ItemType                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bLootable                      (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryComponent::STATIC_AddItemToActor(class AActor* Actor, class UClass* ItemType, int Count, bool bLootable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryComponent.AddItemToActor");

	UInventoryComponent_AddItemToActor_Params params;
	params.Actor = Actor;
	params.ItemType = ItemType;
	params.Count = Count;
	params.bLootable = bLootable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InventoryComponent.AddItemDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   ItemName                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// uint32_t                       Count                          (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryComponent::STATIC_AddItemDebug(const struct FName& ItemName, uint32_t Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryComponent.AddItemDebug");

	UInventoryComponent_AddItemDebug_Params params;
	params.ItemName = ItemName;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InventoryComponent.AddCurrency
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bLootable                      (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryComponent::STATIC_AddCurrency(int Amount, bool bLootable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryComponent.AddCurrency");

	UInventoryComponent_AddCurrency_Params params;
	params.Amount = Amount;
	params.bLootable = bLootable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterMedKitWidget.UpdateDrugSlots
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            ConsumablesUsed                (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterMedKitWidget::STATIC_UpdateDrugSlots(int ConsumablesUsed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterMedKitWidget.UpdateDrugSlots");

	UCharacterMedKitWidget_UpdateDrugSlots_Params params;
	params.ConsumablesUsed = ConsumablesUsed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterMedKitWidget.OnInventoryItemAddedRemoved
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)

void UCharacterMedKitWidget::STATIC_OnInventoryItemAddedRemoved(const struct FItemStack& ItemStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterMedKitWidget.OnInventoryItemAddedRemoved");

	UCharacterMedKitWidget_OnInventoryItemAddedRemoved_Params params;
	params.ItemStack = ItemStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterMedKitWidget.OnHealthChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          HealthChange                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  InInstigator                   (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterMedKitWidget::STATIC_OnHealthChanged(float HealthChange, class AActor* InInstigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterMedKitWidget.OnHealthChanged");

	UCharacterMedKitWidget_OnHealthChanged_Params params;
	params.HealthChange = HealthChange;
	params.InInstigator = InInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterMedKitWidget.InhalerModeChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            NewSetting                     (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterMedKitWidget::STATIC_InhalerModeChanged(int NewSetting)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterMedKitWidget.InhalerModeChanged");

	UCharacterMedKitWidget_InhalerModeChanged_Params params;
	params.NewSetting = NewSetting;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterMedKitWidget.AbilityControlModeChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            NewSetting                     (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterMedKitWidget::STATIC_AbilityControlModeChanged(int NewSetting)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterMedKitWidget.AbilityControlModeChanged");

	UCharacterMedKitWidget_AbilityControlModeChanged_Params params;
	params.NewSetting = NewSetting;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterNameplateWidget.OnLevelChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            NewLevel                       (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterNameplateWidget::STATIC_OnLevelChanged(int NewLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterNameplateWidget.OnLevelChanged");

	UCharacterNameplateWidget_OnLevelChanged_Params params;
	params.NewLevel = NewLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterOverviewWidget.OnTTDDisplayModeChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            TTDDisplayModeIn               (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterOverviewWidget::STATIC_OnTTDDisplayModeChanged(int TTDDisplayModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterOverviewWidget.OnTTDDisplayModeChanged");

	UCharacterOverviewWidget_OnTTDDisplayModeChanged_Params params;
	params.TTDDisplayModeIn = TTDDisplayModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterOverviewWidget.OnSurvivalModeChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bSurvivalBarVisibilityIn       (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterOverviewWidget::STATIC_OnSurvivalModeChanged(bool bSurvivalBarVisibilityIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterOverviewWidget.OnSurvivalModeChanged");

	UCharacterOverviewWidget_OnSurvivalModeChanged_Params params;
	params.bSurvivalBarVisibilityIn = bSurvivalBarVisibilityIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterOverviewWidget.OnSkillUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ESkill                         Skill                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            NewValue                       (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterOverviewWidget::STATIC_OnSkillUpdated(ESkill Skill, int NewValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterOverviewWidget.OnSkillUpdated");

	UCharacterOverviewWidget_OnSkillUpdated_Params params;
	params.Skill = Skill;
	params.NewValue = NewValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterOverviewWidget.OnPreventTTDChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bPreventTTD                    (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterOverviewWidget::STATIC_OnPreventTTDChanged(bool bPreventTTD)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterOverviewWidget.OnPreventTTDChanged");

	UCharacterOverviewWidget_OnPreventTTDChanged_Params params;
	params.bPreventTTD = bPreventTTD;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterOverviewWidget.OnPlayerStatusBarModeChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterOverviewWidget::STATIC_OnPlayerStatusBarModeChanged(int ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterOverviewWidget.OnPlayerStatusBarModeChanged");

	UCharacterOverviewWidget_OnPlayerStatusBarModeChanged_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterOverviewWidget.OnPlayerCombatStateChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           IsPlayerInCombat               (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterOverviewWidget::STATIC_OnPlayerCombatStateChange(bool IsPlayerInCombat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterOverviewWidget.OnPlayerCombatStateChange");

	UCharacterOverviewWidget_OnPlayerCombatStateChange_Params params;
	params.IsPlayerInCombat = IsPlayerInCombat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterOverviewWidget.OnInhalerModeChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            InhalerModeIn                  (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterOverviewWidget::STATIC_OnInhalerModeChanged(int InhalerModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterOverviewWidget.OnInhalerModeChanged");

	UCharacterOverviewWidget_OnInhalerModeChanged_Params params;
	params.InhalerModeIn = InhalerModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterOverviewWidget.OnHUDVisibilityChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bHUDVisibility                 (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterOverviewWidget::STATIC_OnHUDVisibilityChanged(bool bHUDVisibility)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterOverviewWidget.OnHUDVisibilityChanged");

	UCharacterOverviewWidget_OnHUDVisibilityChanged_Params params;
	params.bHUDVisibility = bHUDVisibility;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterOverviewWidget.OnDodgeDisplayModeChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            DodgeDisplayModeIn             (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterOverviewWidget::STATIC_OnDodgeDisplayModeChanged(int DodgeDisplayModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterOverviewWidget.OnDodgeDisplayModeChanged");

	UCharacterOverviewWidget_OnDodgeDisplayModeChanged_Params params;
	params.DodgeDisplayModeIn = DodgeDisplayModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterOverviewWidget.OnDodged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EDodgeDirection                EDodgeDirection                (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterOverviewWidget::STATIC_OnDodged(EDodgeDirection EDodgeDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterOverviewWidget.OnDodged");

	UCharacterOverviewWidget_OnDodged_Params params;
	params.EDodgeDirection = EDodgeDirection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterOverviewWidget.OnDifficultyChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EGameDifficulty                DifficultyIn                   (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterOverviewWidget::STATIC_OnDifficultyChanged(EGameDifficulty DifficultyIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterOverviewWidget.OnDifficultyChanged");

	UCharacterOverviewWidget_OnDifficultyChanged_Params params;
	params.DifficultyIn = DifficultyIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterOverviewWidget.OnCombatStateChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bCombatIn                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterOverviewWidget::STATIC_OnCombatStateChange(bool bCombatIn, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterOverviewWidget.OnCombatStateChange");

	UCharacterOverviewWidget_OnCombatStateChange_Params params;
	params.bCombatIn = bCombatIn;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterOverviewWidget.OnAbilityControlModeChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            AbilityControlModeIn           (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterOverviewWidget::STATIC_OnAbilityControlModeChanged(int AbilityControlModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterOverviewWidget.OnAbilityControlModeChanged");

	UCharacterOverviewWidget_OnAbilityControlModeChanged_Params params;
	params.AbilityControlModeIn = AbilityControlModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterOverviewWidget.HideTTDMeter
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bHide                          (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterOverviewWidget::STATIC_HideTTDMeter(bool bHide)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterOverviewWidget.HideTTDMeter");

	UCharacterOverviewWidget_HideTTDMeter_Params params;
	params.bHide = bHide;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterLibrary.GetSkillValue
// (BlueprintAuthorityOnly, BlueprintCosmetic)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// ESkill                         Skill                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UCharacterLibrary::GetSkillValue(class AActor* Actor, ESkill Skill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterLibrary.GetSkillValue");

	UCharacterLibrary_GetSkillValue_Params params;
	params.Actor = Actor;
	params.Skill = Skill;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.CharacterLibrary.GetAttributeValue
// (BlueprintAuthorityOnly, BlueprintCosmetic)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// EAttribute                     Attribute                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UCharacterLibrary::GetAttributeValue(class AActor* Actor, EAttribute Attribute)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterLibrary.GetAttributeValue");

	UCharacterLibrary_GetAttributeValue_Params params;
	params.Actor = Actor;
	params.Attribute = Attribute;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.CharacterShoutComponent.OnCombatStateChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bIsInCombat                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterShoutComponent::STATIC_OnCombatStateChange(bool bIsInCombat, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterShoutComponent.OnCombatStateChange");

	UCharacterShoutComponent_OnCombatStateChange_Params params;
	params.bIsInCombat = bIsInCombat;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterShoutComponent.OnCharacterDeath
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FCauseDamageInfo        CDI                            (ConstParm, Parm, OutParm, ReferenceParm)

void UCharacterShoutComponent::STATIC_OnCharacterDeath(const struct FCauseDamageInfo& CDI)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterShoutComponent.OnCharacterDeath");

	UCharacterShoutComponent_OnCharacterDeath_Params params;
	params.CDI = CDI;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterShoutComponent.OnAlertStateChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  TargetActor                    (Parm, ZeroConstructor, IsPlainOldData)
// EAlertState                    PreviousAlertState             (Parm, ZeroConstructor, IsPlainOldData)
// EAlertState                    TargetAlertState               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterShoutComponent::STATIC_OnAlertStateChange(class AActor* TargetActor, EAlertState PreviousAlertState, EAlertState TargetAlertState, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterShoutComponent.OnAlertStateChange");

	UCharacterShoutComponent_OnAlertStateChange_Params params;
	params.TargetActor = TargetActor;
	params.PreviousAlertState = PreviousAlertState;
	params.TargetAlertState = TargetAlertState;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterStatusEffectsWidget.OnRemoveStatusEffect
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UStatusEffectManagerComponent* Sender                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UStatusEffect*           StatusEffect                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UCharacterStatusEffectsWidget::STATIC_OnRemoveStatusEffect(class UStatusEffectManagerComponent* Sender, class UStatusEffect* StatusEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterStatusEffectsWidget.OnRemoveStatusEffect");

	UCharacterStatusEffectsWidget_OnRemoveStatusEffect_Params params;
	params.Sender = Sender;
	params.StatusEffect = StatusEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CharacterStatusEffectsWidget.OnAddStatusEffect
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UStatusEffectManagerComponent* Sender                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UStatusEffect*           StatusEffect                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UCharacterStatusEffectsWidget::STATIC_OnAddStatusEffect(class UStatusEffectManagerComponent* Sender, class UStatusEffect* StatusEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CharacterStatusEffectsWidget.OnAddStatusEffect");

	UCharacterStatusEffectsWidget_OnAddStatusEffect_Params params;
	params.Sender = Sender;
	params.StatusEffect = StatusEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ChatterGameHelpers.PlayChatterEvent
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Speaker                        (Parm, ZeroConstructor, IsPlainOldData)
// EChatterEventType              ChatterEvent                   (Parm, ZeroConstructor, IsPlainOldData)

void UChatterGameHelpers::STATIC_PlayChatterEvent(class AActor* Speaker, EChatterEventType ChatterEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ChatterGameHelpers.PlayChatterEvent");

	UChatterGameHelpers_PlayChatterEvent_Params params;
	params.Speaker = Speaker;
	params.ChatterEvent = ChatterEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ChatterManager.OnConversationBegin
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UConversationInstance*   ConversationInstance           (Parm, ZeroConstructor, IsPlainOldData)

void UChatterManager::STATIC_OnConversationBegin(class UConversationInstance* ConversationInstance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ChatterManager.OnConversationBegin");

	UChatterManager_OnConversationBegin_Params params;
	params.ConversationInstance = ConversationInstance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CheckBoxWidget.UpdateCheckBoxSize
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            FontSizeModifier               (Parm, ZeroConstructor, IsPlainOldData)

void UCheckBoxWidget::STATIC_UpdateCheckBoxSize(int FontSizeModifier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CheckBoxWidget.UpdateCheckBoxSize");

	UCheckBoxWidget_UpdateCheckBoxSize_Params params;
	params.FontSizeModifier = FontSizeModifier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CinematicPlayerWidget.SkipCinematic
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCinematicPlayerWidget::STATIC_SkipCinematic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CinematicPlayerWidget.SkipCinematic");

	UCinematicPlayerWidget_SkipCinematic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CinematicPlayerWidget.PlayerInputDetected
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCinematicPlayerWidget::STATIC_PlayerInputDetected()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CinematicPlayerWidget.PlayerInputDetected");

	UCinematicPlayerWidget_PlayerInputDetected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CinematicPlayerWidget.PlayCinematic
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UMovieSceneSequencePlayer* Cinematic                      (Parm, ZeroConstructor, IsPlainOldData)

void UCinematicPlayerWidget::STATIC_PlayCinematic(class UMovieSceneSequencePlayer* Cinematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CinematicPlayerWidget.PlayCinematic");

	UCinematicPlayerWidget_PlayCinematic_Params params;
	params.Cinematic = Cinematic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CinematicPlayerWidget.PauseCinematic
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCinematicPlayerWidget::STATIC_PauseCinematic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CinematicPlayerWidget.PauseCinematic");

	UCinematicPlayerWidget_PauseCinematic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CinematicPlayerWidget.InitiateFadeOut
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCinematicPlayerWidget::STATIC_InitiateFadeOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CinematicPlayerWidget.InitiateFadeOut");

	UCinematicPlayerWidget_InitiateFadeOut_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CinematicPlayerWidget.InitiateFadeIn
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCinematicPlayerWidget::STATIC_InitiateFadeIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CinematicPlayerWidget.InitiateFadeIn");

	UCinematicPlayerWidget_InitiateFadeIn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CinematicPlayerWidget.FinishCinematic
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCinematicPlayerWidget::STATIC_FinishCinematic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CinematicPlayerWidget.FinishCinematic");

	UCinematicPlayerWidget_FinishCinematic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CodexJournal.OnAudioLogUnhoveredCB
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UButtonBase*             ButtonUnhovered                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UCodexJournal::STATIC_OnAudioLogUnhoveredCB(class UButtonBase* ButtonUnhovered)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CodexJournal.OnAudioLogUnhoveredCB");

	UCodexJournal_OnAudioLogUnhoveredCB_Params params;
	params.ButtonUnhovered = ButtonUnhovered;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CodexJournal.OnAudioLogUnfocusedCB
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UButtonBase*             ButtonUnfocused                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UCodexJournal::STATIC_OnAudioLogUnfocusedCB(class UButtonBase* ButtonUnfocused)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CodexJournal.OnAudioLogUnfocusedCB");

	UCodexJournal_OnAudioLogUnfocusedCB_Params params;
	params.ButtonUnfocused = ButtonUnfocused;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CodexJournal.OnAudioLogListEntryAdded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UGenericCollapsableListEntry* ListEntry                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UAudioLogDataAsset*      DataAsset                      (Parm, ZeroConstructor, IsPlainOldData)

void UCodexJournal::STATIC_OnAudioLogListEntryAdded(class UGenericCollapsableListEntry* ListEntry, class UAudioLogDataAsset* DataAsset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CodexJournal.OnAudioLogListEntryAdded");

	UCodexJournal_OnAudioLogListEntryAdded_Params params;
	params.ListEntry = ListEntry;
	params.DataAsset = DataAsset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CodexJournal.OnAudioLogHoveredCB
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UButtonBase*             ButtonHovered                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UCodexJournal::STATIC_OnAudioLogHoveredCB(class UButtonBase* ButtonHovered)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CodexJournal.OnAudioLogHoveredCB");

	UCodexJournal_OnAudioLogHoveredCB_Params params;
	params.ButtonHovered = ButtonHovered;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CodexJournal.OnAudioLogFocusedCB
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UButtonBase*             ButtonFocused                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UCodexJournal::STATIC_OnAudioLogFocusedCB(class UButtonBase* ButtonFocused)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CodexJournal.OnAudioLogFocusedCB");

	UCodexJournal_OnAudioLogFocusedCB_Params params;
	params.ButtonFocused = ButtonFocused;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ComboBoxStringBase.SetSelectedOption
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  Option                         (Parm, ZeroConstructor)

void UComboBoxStringBase::STATIC_SetSelectedOption(const class FString& Option)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ComboBoxStringBase.SetSelectedOption");

	UComboBoxStringBase_SetSelectedOption_Params params;
	params.Option = Option;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ComboBoxStringBase.RemoveOption
// ()
// Parameters:
// class FString                  Option                         (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UComboBoxStringBase::RemoveOption(const class FString& Option)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ComboBoxStringBase.RemoveOption");

	UComboBoxStringBase_RemoveOption_Params params;
	params.Option = Option;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ComboBoxStringBase.RefreshOptions
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UComboBoxStringBase::STATIC_RefreshOptions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ComboBoxStringBase.RefreshOptions");

	UComboBoxStringBase_RefreshOptions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction Indiana.ComboBoxStringBase.OnSelectionChangedEvent__DelegateSignature
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  SelectedItem                   (Parm, ZeroConstructor)
// TEnumAsByte<ESelectInfo>       SelectionType                  (Parm, ZeroConstructor, IsPlainOldData)

void UComboBoxStringBase::STATIC_OnSelectionChangedEvent__DelegateSignature(const class FString& SelectedItem, TEnumAsByte<ESelectInfo> SelectionType)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Indiana.ComboBoxStringBase.OnSelectionChangedEvent__DelegateSignature");

	UComboBoxStringBase_OnSelectionChangedEvent__DelegateSignature_Params params;
	params.SelectedItem = SelectedItem;
	params.SelectionType = SelectionType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction Indiana.ComboBoxStringBase.OnOpeningEvent__DelegateSignature
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UComboBoxStringBase::STATIC_OnOpeningEvent__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Indiana.ComboBoxStringBase.OnOpeningEvent__DelegateSignature");

	UComboBoxStringBase_OnOpeningEvent__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ComboBoxStringBase.GetSelectedOptionIndex
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UComboBoxStringBase::GetSelectedOptionIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ComboBoxStringBase.GetSelectedOptionIndex");

	UComboBoxStringBase_GetSelectedOptionIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ComboBoxStringBase.GetSelectedOption
// ()
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UComboBoxStringBase::GetSelectedOption()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ComboBoxStringBase.GetSelectedOption");

	UComboBoxStringBase_GetSelectedOption_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ComboBoxStringBase.GetOptionCount
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UComboBoxStringBase::GetOptionCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ComboBoxStringBase.GetOptionCount");

	UComboBoxStringBase_GetOptionCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ComboBoxStringBase.GetOptionAtIndex
// (BlueprintCosmetic)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UComboBoxStringBase::GetOptionAtIndex(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ComboBoxStringBase.GetOptionAtIndex");

	UComboBoxStringBase_GetOptionAtIndex_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ComboBoxStringBase.FindOptionIndex
// ()
// Parameters:
// class FString                  Option                         (Parm, ZeroConstructor)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UComboBoxStringBase::FindOptionIndex(const class FString& Option)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ComboBoxStringBase.FindOptionIndex");

	UComboBoxStringBase_FindOptionIndex_Params params;
	params.Option = Option;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ComboBoxStringBase.ClearSelection
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UComboBoxStringBase::STATIC_ClearSelection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ComboBoxStringBase.ClearSelection");

	UComboBoxStringBase_ClearSelection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ComboBoxStringBase.ClearOptions
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UComboBoxStringBase::STATIC_ClearOptions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ComboBoxStringBase.ClearOptions");

	UComboBoxStringBase_ClearOptions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ComboBoxStringBase.AddOption
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  Option                         (Parm, ZeroConstructor)

void UComboBoxStringBase::STATIC_AddOption(const class FString& Option)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ComboBoxStringBase.AddOption");

	UComboBoxStringBase_AddOption_Params params;
	params.Option = Option;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionCommandComponent.OnStatUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class URpgStat*                Stat                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UCompanionCommandComponent::STATIC_OnStatUpdated(class URpgStat* Stat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionCommandComponent.OnStatUpdated");

	UCompanionCommandComponent_OnStatUpdated_Params params;
	params.Stat = Stat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionCommandComponent.OnCalledShotCameraStep
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Attacker                       (Parm, ZeroConstructor, IsPlainOldData)
// ECalledShotCameraStep          OldCameraStep                  (Parm, ZeroConstructor, IsPlainOldData)
// ECalledShotCameraStep          NewCameraStep                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bCloseRange                    (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionCommandComponent::STATIC_OnCalledShotCameraStep(class AActor* Attacker, ECalledShotCameraStep OldCameraStep, ECalledShotCameraStep NewCameraStep, bool bCloseRange)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionCommandComponent.OnCalledShotCameraStep");

	UCompanionCommandComponent_OnCalledShotCameraStep_Params params;
	params.Attacker = Attacker;
	params.OldCameraStep = OldCameraStep;
	params.NewCameraStep = NewCameraStep;
	params.bCloseRange = bCloseRange;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionCommandComponent.FillMeter
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCompanionCommandComponent::STATIC_FillMeter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionCommandComponent.FillMeter");

	UCompanionCommandComponent_FillMeter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionCommandComponent.CompanionCommandInfinite
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCompanionCommandComponent::STATIC_CompanionCommandInfinite()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionCommandComponent.CompanionCommandInfinite");

	UCompanionCommandComponent_CompanionCommandInfinite_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionComponent.UpdateCompanionState
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCompanionComponent::STATIC_UpdateCompanionState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionComponent.UpdateCompanionState");

	UCompanionComponent_UpdateCompanionState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionComponent.SetOffering
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UClass*                  PickupClass                    (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionComponent::STATIC_SetOffering(class UClass* PickupClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionComponent.SetOffering");

	UCompanionComponent_SetOffering_Params params;
	params.PickupClass = PickupClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionComponent.OnPlayerExitedAcknowledgeZone
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  ZoneOwner                      (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionComponent::STATIC_OnPlayerExitedAcknowledgeZone(class AActor* ZoneOwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionComponent.OnPlayerExitedAcknowledgeZone");

	UCompanionComponent_OnPlayerExitedAcknowledgeZone_Params params;
	params.ZoneOwner = ZoneOwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionComponent.OnPlayerEnteredAcknowledgeZone
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  ZoneOwner                      (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionComponent::STATIC_OnPlayerEnteredAcknowledgeZone(class AActor* ZoneOwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionComponent.OnPlayerEnteredAcknowledgeZone");

	UCompanionComponent_OnPlayerEnteredAcknowledgeZone_Params params;
	params.ZoneOwner = ZoneOwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionComponent.OnCombatStateChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bIsInCombat                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionComponent::STATIC_OnCombatStateChange(bool bIsInCombat, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionComponent.OnCombatStateChange");

	UCompanionComponent_OnCombatStateChange_Params params;
	params.bIsInCombat = bIsInCombat;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionComponent.DropOffering
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCompanionComponent::STATIC_DropOffering()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionComponent.DropOffering");

	UCompanionComponent_DropOffering_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionEquipmentWidget.OnItemRemovedFromPlayerInventory
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)

void UCompanionEquipmentWidget::STATIC_OnItemRemovedFromPlayerInventory(const struct FItemStack& ItemStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionEquipmentWidget.OnItemRemovedFromPlayerInventory");

	UCompanionEquipmentWidget_OnItemRemovedFromPlayerInventory_Params params;
	params.ItemStack = ItemStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionEquipmentWidget.OnItemAddedToPlayerInventory
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)

void UCompanionEquipmentWidget::STATIC_OnItemAddedToPlayerInventory(const struct FItemStack& ItemStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionEquipmentWidget.OnItemAddedToPlayerInventory");

	UCompanionEquipmentWidget_OnItemAddedToPlayerInventory_Params params;
	params.ItemStack = ItemStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionEquipmentWidget.OnDragDrop_EquipItem
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UIndianaDragDropOperation* Operation                      (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionEquipmentWidget::STATIC_OnDragDrop_EquipItem(class UIndianaDragDropOperation* Operation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionEquipmentWidget.OnDragDrop_EquipItem");

	UCompanionEquipmentWidget_OnDragDrop_EquipItem_Params params;
	params.Operation = Operation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionManager.SetCompanionWantsToTalk
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ESpecialObsidianID             Companion                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bWantsToTalk                   (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionManager::STATIC_SetCompanionWantsToTalk(ESpecialObsidianID Companion, bool bWantsToTalk)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManager.SetCompanionWantsToTalk");

	UCompanionManager_SetCompanionWantsToTalk_Params params;
	params.Companion = Companion;
	params.bWantsToTalk = bWantsToTalk;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionManager.IsCompanionUnlocked
// (Final)
// Parameters:
// ESpecialObsidianID             Companion                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCompanionManager::IsCompanionUnlocked(ESpecialObsidianID Companion)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManager.IsCompanionUnlocked");

	UCompanionManager_IsCompanionUnlocked_Params params;
	params.Companion = Companion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.CompanionManager.IsCompanionInRequestedParty
// (Final)
// Parameters:
// ESpecialObsidianID             Companion                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCompanionManager::IsCompanionInRequestedParty(ESpecialObsidianID Companion)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManager.IsCompanionInRequestedParty");

	UCompanionManager_IsCompanionInRequestedParty_Params params;
	params.Companion = Companion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.CompanionManager.IsCompanionInActiveParty
// (Final)
// Parameters:
// ESpecialObsidianID             Companion                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCompanionManager::IsCompanionInActiveParty(ESpecialObsidianID Companion)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManager.IsCompanionInActiveParty");

	UCompanionManager_IsCompanionInActiveParty_Params params;
	params.Companion = Companion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.CompanionManager.IsCompanionDismissed
// (Final)
// Parameters:
// ESpecialObsidianID             Companion                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCompanionManager::IsCompanionDismissed(ESpecialObsidianID Companion)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManager.IsCompanionDismissed");

	UCompanionManager_IsCompanionDismissed_Params params;
	params.Companion = Companion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.CompanionManager.HasPlayerUnlockedCompanions
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCompanionManager::HasPlayerUnlockedCompanions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManager.HasPlayerUnlockedCompanions");

	UCompanionManager_HasPlayerUnlockedCompanions_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.CompanionManager.GetCompanionWantsToTalk
// (Final)
// Parameters:
// ESpecialObsidianID             Companion                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCompanionManager::GetCompanionWantsToTalk(ESpecialObsidianID Companion)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManager.GetCompanionWantsToTalk");

	UCompanionManager_GetCompanionWantsToTalk_Params params;
	params.Companion = Companion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.CompanionManager.GetCompanionMorale
// (BlueprintAuthorityOnly)
// Parameters:
// ESpecialObsidianID             Companion                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UCompanionManager::GetCompanionMorale(ESpecialObsidianID Companion)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManager.GetCompanionMorale");

	UCompanionManager_GetCompanionMorale_Params params;
	params.Companion = Companion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.CompanionManager.GetCompanionGuid
// (BlueprintAuthorityOnly)
// Parameters:
// ESpecialObsidianID             SpecialID                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FGuid                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FGuid UCompanionManager::GetCompanionGuid(ESpecialObsidianID SpecialID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManager.GetCompanionGuid");

	UCompanionManager_GetCompanionGuid_Params params;
	params.SpecialID = SpecialID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.CompanionManager.DebugUnlockCompanion
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ESpecialObsidianID             Companion                      (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionManager::STATIC_DebugUnlockCompanion(ESpecialObsidianID Companion)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManager.DebugUnlockCompanion");

	UCompanionManager_DebugUnlockCompanion_Params params;
	params.Companion = Companion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionManager.DebugAddCompanionMorale
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// unsigned char                  Companion                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          MoraleAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bPositiveMorale                (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionManager::STATIC_DebugAddCompanionMorale(unsigned char Companion, float MoraleAmount, bool bPositiveMorale)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManager.DebugAddCompanionMorale");

	UCompanionManager_DebugAddCompanionMorale_Params params;
	params.Companion = Companion;
	params.MoraleAmount = MoraleAmount;
	params.bPositiveMorale = bPositiveMorale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionManager.ChangeCompanionMorale
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ESpecialObsidianID             Companion                      (Parm, ZeroConstructor, IsPlainOldData)
// EMoraleContribution            Contribution                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          MoraleAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bPositiveMorale                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bOnlyActivePartyMembers        (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionManager::STATIC_ChangeCompanionMorale(ESpecialObsidianID Companion, EMoraleContribution Contribution, float MoraleAmount, bool bPositiveMorale, bool bOnlyActivePartyMembers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManager.ChangeCompanionMorale");

	UCompanionManager_ChangeCompanionMorale_Params params;
	params.Companion = Companion;
	params.Contribution = Contribution;
	params.MoraleAmount = MoraleAmount;
	params.bPositiveMorale = bPositiveMorale;
	params.bOnlyActivePartyMembers = bOnlyActivePartyMembers;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionManagerComponent.SetCompanionOutlineMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ECompanionOutlineMode          OutlineMode                    (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionManagerComponent::STATIC_SetCompanionOutlineMode(ECompanionOutlineMode OutlineMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManagerComponent.SetCompanionOutlineMode");

	UCompanionManagerComponent_SetCompanionOutlineMode_Params params;
	params.OutlineMode = OutlineMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionManagerComponent.SendCharacterToShip
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaAiCharacter*     Companion                      (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionManagerComponent::STATIC_SendCharacterToShip(class AIndianaAiCharacter* Companion)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManagerComponent.SendCharacterToShip");

	UCompanionManagerComponent_SendCharacterToShip_Params params;
	params.Companion = Companion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionManagerComponent.ScriptRemoveCompanionFromParty
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaAiCharacter*     Companion                      (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionManagerComponent::STATIC_ScriptRemoveCompanionFromParty(class AIndianaAiCharacter* Companion)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManagerComponent.ScriptRemoveCompanionFromParty");

	UCompanionManagerComponent_ScriptRemoveCompanionFromParty_Params params;
	params.Companion = Companion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionManagerComponent.ScriptAddCompanionToParty
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaAiCharacter*     Companion                      (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionManagerComponent::STATIC_ScriptAddCompanionToParty(class AIndianaAiCharacter* Companion)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManagerComponent.ScriptAddCompanionToParty");

	UCompanionManagerComponent_ScriptAddCompanionToParty_Params params;
	params.Companion = Companion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionManagerComponent.OnRestartController
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaAiCharacter*     Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionManagerComponent::STATIC_OnRestartController(class AIndianaAiCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManagerComponent.OnRestartController");

	UCompanionManagerComponent_OnRestartController_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionManagerComponent.OnPlayerLevelChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            PlayerLevel                    (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionManagerComponent::STATIC_OnPlayerLevelChanged(int PlayerLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManagerComponent.OnPlayerLevelChanged");

	UCompanionManagerComponent_OnPlayerLevelChanged_Params params;
	params.PlayerLevel = PlayerLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionManagerComponent.OnPlayerIndividualDetected
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaAiCharacter*     Detector                       (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionManagerComponent::STATIC_OnPlayerIndividualDetected(class AIndianaAiCharacter* Detector)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManagerComponent.OnPlayerIndividualDetected");

	UCompanionManagerComponent_OnPlayerIndividualDetected_Params params;
	params.Detector = Detector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionManagerComponent.OnPlayerCinematicModeChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bCinematicModeEnabled          (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionManagerComponent::STATIC_OnPlayerCinematicModeChanged(bool bCinematicModeEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManagerComponent.OnPlayerCinematicModeChanged");

	UCompanionManagerComponent_OnPlayerCinematicModeChanged_Params params;
	params.bCinematicModeEnabled = bCinematicModeEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionManagerComponent.OnNewStateOfBeing
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EStateOfBeing                  NewStateOfBeing                (Parm, ZeroConstructor, IsPlainOldData)
// EStateOfBeing                  OldStateOfBeing                (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionManagerComponent::STATIC_OnNewStateOfBeing(EStateOfBeing NewStateOfBeing, EStateOfBeing OldStateOfBeing)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManagerComponent.OnNewStateOfBeing");

	UCompanionManagerComponent_OnNewStateOfBeing_Params params;
	params.NewStateOfBeing = NewStateOfBeing;
	params.OldStateOfBeing = OldStateOfBeing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionManagerComponent.OnKill
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Victim                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FCauseDamageInfo        CauseDamageInfo                (ConstParm, Parm, OutParm, ReferenceParm)

void UCompanionManagerComponent::STATIC_OnKill(class AActor* Victim, const struct FCauseDamageInfo& CauseDamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManagerComponent.OnKill");

	UCompanionManagerComponent_OnKill_Params params;
	params.Victim = Victim;
	params.CauseDamageInfo = CauseDamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionManagerComponent.OnDifficultyChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EGameDifficulty                NewDifficulty                  (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionManagerComponent::STATIC_OnDifficultyChanged(EGameDifficulty NewDifficulty)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManagerComponent.OnDifficultyChanged");

	UCompanionManagerComponent_OnDifficultyChanged_Params params;
	params.NewDifficulty = NewDifficulty;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionManagerComponent.OnDeath
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FCauseDamageInfo        DamageInfo                     (ConstParm, Parm, OutParm, ReferenceParm)

void UCompanionManagerComponent::STATIC_OnDeath(const struct FCauseDamageInfo& DamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManagerComponent.OnDeath");

	UCompanionManagerComponent_OnDeath_Params params;
	params.DamageInfo = DamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionManagerComponent.OnCauseDamage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FCauseDamageInfo        CauseDamageInfo                (ConstParm, Parm, OutParm, ReferenceParm)

void UCompanionManagerComponent::STATIC_OnCauseDamage(const struct FCauseDamageInfo& CauseDamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManagerComponent.OnCauseDamage");

	UCompanionManagerComponent_OnCauseDamage_Params params;
	params.CauseDamageInfo = CauseDamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionManagerComponent.IsPartyFull
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCompanionManagerComponent::IsPartyFull()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManagerComponent.IsPartyFull");

	UCompanionManagerComponent_IsPartyFull_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.CompanionManagerComponent.GetCompanionFromSlot
// (BlueprintCosmetic)
// Parameters:
// ECompanionSlot                 Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// class AIndianaAiCharacter*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AIndianaAiCharacter* UCompanionManagerComponent::GetCompanionFromSlot(ECompanionSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManagerComponent.GetCompanionFromSlot");

	UCompanionManagerComponent_GetCompanionFromSlot_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.CompanionManagerComponent.GetActiveCompanionWithSpecialID
// (BlueprintCosmetic)
// Parameters:
// ESpecialObsidianID             SpecialID                      (Parm, ZeroConstructor, IsPlainOldData)
// class AIndianaAiCharacter*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AIndianaAiCharacter* UCompanionManagerComponent::GetActiveCompanionWithSpecialID(ESpecialObsidianID SpecialID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManagerComponent.GetActiveCompanionWithSpecialID");

	UCompanionManagerComponent_GetActiveCompanionWithSpecialID_Params params;
	params.SpecialID = SpecialID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.CompanionManagerComponent.DebugKillCompanions
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCompanionManagerComponent::STATIC_DebugKillCompanions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManagerComponent.DebugKillCompanions");

	UCompanionManagerComponent_DebugKillCompanions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionManagerComponent.AddPerkPointsToCompanions
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            Points                         (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionManagerComponent::STATIC_AddPerkPointsToCompanions(int Points)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionManagerComponent.AddPerkPointsToCompanions");

	UCompanionManagerComponent_AddPerkPointsToCompanions_Params params;
	params.Points = Points;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionMoveToWidget.OnNewLocation
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCompanionMoveToWidget::STATIC_OnNewLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionMoveToWidget.OnNewLocation");

	UCompanionMoveToWidget_OnNewLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionMoveToWidget.OnMoveToCancelled
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCompanionMoveToWidget::STATIC_OnMoveToCancelled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionMoveToWidget.OnMoveToCancelled");

	UCompanionMoveToWidget_OnMoveToCancelled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionOverviewWidget.OnNoStatusEffect
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCompanionOverviewWidget::STATIC_OnNoStatusEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionOverviewWidget.OnNoStatusEffect");

	UCompanionOverviewWidget_OnNoStatusEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionOverviewWidget.OnMadeInactive
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCompanionOverviewWidget::STATIC_OnMadeInactive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionOverviewWidget.OnMadeInactive");

	UCompanionOverviewWidget_OnMadeInactive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionOverviewWidget.OnMadeActive
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCompanionOverviewWidget::STATIC_OnMadeActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionOverviewWidget.OnMadeActive");

	UCompanionOverviewWidget_OnMadeActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionOverviewWidget.OnHUDVisibilityChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionOverviewWidget::STATIC_OnHUDVisibilityChanged(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionOverviewWidget.OnHUDVisibilityChanged");

	UCompanionOverviewWidget_OnHUDVisibilityChanged_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionOverviewWidget.OnFirstStatusEffect
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCompanionOverviewWidget::STATIC_OnFirstStatusEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionOverviewWidget.OnFirstStatusEffect");

	UCompanionOverviewWidget_OnFirstStatusEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionOverviewWidget.OnCompanionStatusModeChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionOverviewWidget::STATIC_OnCompanionStatusModeChanged(int ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionOverviewWidget.OnCompanionStatusModeChanged");

	UCompanionOverviewWidget_OnCompanionStatusModeChanged_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionOverviewWidget.OnCombatStateChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bCombatIn                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionOverviewWidget::STATIC_OnCombatStateChanged(bool bCombatIn, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionOverviewWidget.OnCombatStateChanged");

	UCompanionOverviewWidget_OnCombatStateChanged_Params params;
	params.bCombatIn = bCombatIn;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionPositionComponent.RequestForceTeleportCompanions
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FVector                 Position1                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 Position2                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UCompanionPositionComponent::STATIC_RequestForceTeleportCompanions(const struct FVector& Position1, const struct FVector& Position2)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionPositionComponent.RequestForceTeleportCompanions");

	UCompanionPositionComponent_RequestForceTeleportCompanions_Params params;
	params.Position1 = Position1;
	params.Position2 = Position2;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionPositionComponent.OnStealthChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bStealthed                     (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionPositionComponent::STATIC_OnStealthChange(bool bStealthed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionPositionComponent.OnStealthChange");

	UCompanionPositionComponent_OnStealthChange_Params params;
	params.bStealthed = bStealthed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionPositionComponent.OnPlayerConversationChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UConversationInstance*   Instance                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           bEntered                       (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionPositionComponent::STATIC_OnPlayerConversationChange(class UConversationInstance* Instance, bool bEntered)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionPositionComponent.OnPlayerConversationChange");

	UCompanionPositionComponent_OnPlayerConversationChange_Params params;
	params.Instance = Instance;
	params.bEntered = bEntered;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionPositionComponent.OnOccupiedElevatorMove
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AElevator*               Elevator                       (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionPositionComponent::STATIC_OnOccupiedElevatorMove(class AElevator* Elevator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionPositionComponent.OnOccupiedElevatorMove");

	UCompanionPositionComponent_OnOccupiedElevatorMove_Params params;
	params.Elevator = Elevator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionPositionComponent.OnOccupiedElevatorChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AElevator*               Elevator                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bOccupied                      (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionPositionComponent::STATIC_OnOccupiedElevatorChange(class AElevator* Elevator, bool bOccupied)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionPositionComponent.OnOccupiedElevatorChange");

	UCompanionPositionComponent_OnOccupiedElevatorChange_Params params;
	params.Elevator = Elevator;
	params.bOccupied = bOccupied;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionScreenWrapperWidget.FadeInSharedItemViewer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCompanionScreenWrapperWidget::STATIC_FadeInSharedItemViewer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionScreenWrapperWidget.FadeInSharedItemViewer");

	UCompanionScreenWrapperWidget_FadeInSharedItemViewer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionScreenWrapperWidget.AddItemToItemViewer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)

void UCompanionScreenWrapperWidget::STATIC_AddItemToItemViewer(const struct FItemStack& ItemStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionScreenWrapperWidget.AddItemToItemViewer");

	UCompanionScreenWrapperWidget_AddItemToItemViewer_Params params;
	params.ItemStack = ItemStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionSelectionWidget.SetCharacterSelected
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            CharacterIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSelected                      (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionSelectionWidget::STATIC_SetCharacterSelected(int CharacterIndex, bool bSelected)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionSelectionWidget.SetCharacterSelected");

	UCompanionSelectionWidget_SetCharacterSelected_Params params;
	params.CharacterIndex = CharacterIndex;
	params.bSelected = bSelected;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionSelectionWidget.SetCharacterAvailable
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            CharacterIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUsable                        (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionSelectionWidget::STATIC_SetCharacterAvailable(int CharacterIndex, bool bUsable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionSelectionWidget.SetCharacterAvailable");

	UCompanionSelectionWidget_SetCharacterAvailable_Params params;
	params.CharacterIndex = CharacterIndex;
	params.bUsable = bUsable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompanionSelectionWidget.SelectionFailed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            CharacterIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void UCompanionSelectionWidget::STATIC_SelectionFailed(int CharacterIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompanionSelectionWidget.SelectionFailed");

	UCompanionSelectionWidget_SelectionFailed_Params params;
	params.CharacterIndex = CharacterIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompassEntryWidget.InitProperties
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FEntryData              EntryData                      (ConstParm, Parm, OutParm, ReferenceParm)

void UCompassEntryWidget::STATIC_InitProperties(const struct FEntryData& EntryData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompassEntryWidget.InitProperties");

	UCompassEntryWidget_InitProperties_Params params;
	params.EntryData = EntryData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompassWidget.OnHUDVisibilityChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bHUDVisible                    (Parm, ZeroConstructor, IsPlainOldData)

void UCompassWidget::STATIC_OnHUDVisibilityChanged(bool bHUDVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompassWidget.OnHUDVisibilityChanged");

	UCompassWidget_OnHUDVisibilityChanged_Params params;
	params.bHUDVisible = bHUDVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompassWidget.OnEnemyRemoved
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaAiCharacter*     Detector                       (Parm, ZeroConstructor, IsPlainOldData)

void UCompassWidget::STATIC_OnEnemyRemoved(class AIndianaAiCharacter* Detector)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompassWidget.OnEnemyRemoved");

	UCompassWidget_OnEnemyRemoved_Params params;
	params.Detector = Detector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompassWidget.OnEnemyAdded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaAiCharacter*     Detector                       (Parm, ZeroConstructor, IsPlainOldData)

void UCompassWidget::STATIC_OnEnemyAdded(class AIndianaAiCharacter* Detector)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompassWidget.OnEnemyAdded");

	UCompassWidget_OnEnemyAdded_Params params;
	params.Detector = Detector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CompassWidget.OnCompassSettingChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            CompassVisibilityModeIn        (Parm, ZeroConstructor, IsPlainOldData)

void UCompassWidget::STATIC_OnCompassSettingChanged(int CompassVisibilityModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CompassWidget.OnCompassSettingChanged");

	UCompassWidget_OnCompassSettingChanged_Params params;
	params.CompassVisibilityModeIn = CompassVisibilityModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ComputerTerminal.UnlockComputer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bFireComputerUnlockedEvent     (Parm, ZeroConstructor, IsPlainOldData)

void AComputerTerminal::STATIC_UnlockComputer(bool bFireComputerUnlockedEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ComputerTerminal.UnlockComputer");

	AComputerTerminal_UnlockComputer_Params params;
	params.bFireComputerUnlockedEvent = bFireComputerUnlockedEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ComputerTerminal.LockComputer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bFireComputerLockedEvent       (Parm, ZeroConstructor, IsPlainOldData)

void AComputerTerminal::STATIC_LockComputer(bool bFireComputerLockedEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ComputerTerminal.LockComputer");

	AComputerTerminal_LockComputer_Params params;
	params.bFireComputerLockedEvent = bFireComputerLockedEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ComputerTerminal.GetExactHackDifficulty
// ()
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char AComputerTerminal::GetExactHackDifficulty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ComputerTerminal.GetExactHackDifficulty");

	AComputerTerminal_GetExactHackDifficulty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ComputerTerminal.GetCurrentState
// ()
// Parameters:
// EComputerLockState             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EComputerLockState AComputerTerminal::GetCurrentState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ComputerTerminal.GetCurrentState");

	AComputerTerminal_GetCurrentState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ComputerTerminal.AttemptUse
// (Final, BlueprintCosmetic)
// Parameters:
// class AActor*                  Initiator                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bForce                         (Parm, ZeroConstructor, IsPlainOldData)
// EComputerTerminalResult        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EComputerTerminalResult AComputerTerminal::AttemptUse(class AActor* Initiator, bool bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ComputerTerminal.AttemptUse");

	AComputerTerminal_AttemptUse_Params params;
	params.Initiator = Initiator;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ComputerTerminal.AttemptUnlock
// (BlueprintCosmetic)
// Parameters:
// class AActor*                  Initiator                      (Parm, ZeroConstructor, IsPlainOldData)
// EComputerTerminalResult        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EComputerTerminalResult AComputerTerminal::AttemptUnlock(class AActor* Initiator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ComputerTerminal.AttemptUnlock");

	AComputerTerminal_AttemptUnlock_Params params;
	params.Initiator = Initiator;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.InteractableAudioComponent.StopCustomEventEffect
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   Name                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UInteractableAudioComponent::STATIC_StopCustomEventEffect(const struct FName& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InteractableAudioComponent.StopCustomEventEffect");

	UInteractableAudioComponent_StopCustomEventEffect_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InteractableAudioComponent.PlayCustomEventEffect
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   Name                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UInteractableAudioComponent::STATIC_PlayCustomEventEffect(const struct FName& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InteractableAudioComponent.PlayCustomEventEffect");

	UInteractableAudioComponent_PlayCustomEventEffect_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ComputerTerminalAudioComponent.Stop
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EComputerTerminalEventType     Type                           (Parm, ZeroConstructor, IsPlainOldData)

void UComputerTerminalAudioComponent::STATIC_Stop(EComputerTerminalEventType Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ComputerTerminalAudioComponent.Stop");

	UComputerTerminalAudioComponent_Stop_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ComputerTerminalAudioComponent.Play
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EComputerTerminalEventType     Type                           (Parm, ZeroConstructor, IsPlainOldData)

void UComputerTerminalAudioComponent::STATIC_Play(EComputerTerminalEventType Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ComputerTerminalAudioComponent.Play");

	UComputerTerminalAudioComponent_Play_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ComputerTerminalContainerWidget.OnConversationStateChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bHasStarted                    (Parm, ZeroConstructor, IsPlainOldData)

void UComputerTerminalContainerWidget::STATIC_OnConversationStateChange(bool bHasStarted)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ComputerTerminalContainerWidget.OnConversationStateChange");

	UComputerTerminalContainerWidget_OnConversationStateChange_Params params;
	params.bHasStarted = bHasStarted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ComputerTerminalHeaderWidget.FadeInLogoImage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UComputerTerminalHeaderWidget::STATIC_FadeInLogoImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ComputerTerminalHeaderWidget.FadeInLogoImage");

	UComputerTerminalHeaderWidget_FadeInLogoImage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationBaseWidget.OnSkipInputAction
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UConversationBaseWidget::STATIC_OnSkipInputAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationBaseWidget.OnSkipInputAction");

	UConversationBaseWidget_OnSkipInputAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationBaseWidget.OnResponse9InputAction
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UConversationBaseWidget::STATIC_OnResponse9InputAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationBaseWidget.OnResponse9InputAction");

	UConversationBaseWidget_OnResponse9InputAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationBaseWidget.OnResponse8InputAction
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UConversationBaseWidget::STATIC_OnResponse8InputAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationBaseWidget.OnResponse8InputAction");

	UConversationBaseWidget_OnResponse8InputAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationBaseWidget.OnResponse7InputAction
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UConversationBaseWidget::STATIC_OnResponse7InputAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationBaseWidget.OnResponse7InputAction");

	UConversationBaseWidget_OnResponse7InputAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationBaseWidget.OnResponse6InputAction
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UConversationBaseWidget::STATIC_OnResponse6InputAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationBaseWidget.OnResponse6InputAction");

	UConversationBaseWidget_OnResponse6InputAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationBaseWidget.OnResponse5InputAction
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UConversationBaseWidget::STATIC_OnResponse5InputAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationBaseWidget.OnResponse5InputAction");

	UConversationBaseWidget_OnResponse5InputAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationBaseWidget.OnResponse4InputAction
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UConversationBaseWidget::STATIC_OnResponse4InputAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationBaseWidget.OnResponse4InputAction");

	UConversationBaseWidget_OnResponse4InputAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationBaseWidget.OnResponse3InputAction
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UConversationBaseWidget::STATIC_OnResponse3InputAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationBaseWidget.OnResponse3InputAction");

	UConversationBaseWidget_OnResponse3InputAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationBaseWidget.OnResponse2InputAction
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UConversationBaseWidget::STATIC_OnResponse2InputAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationBaseWidget.OnResponse2InputAction");

	UConversationBaseWidget_OnResponse2InputAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationBaseWidget.OnResponse1InputAction
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UConversationBaseWidget::STATIC_OnResponse1InputAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationBaseWidget.OnResponse1InputAction");

	UConversationBaseWidget_OnResponse1InputAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationBaseWidget.OnPauseInputAction
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UConversationBaseWidget::STATIC_OnPauseInputAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationBaseWidget.OnPauseInputAction");

	UConversationBaseWidget_OnPauseInputAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ComputerTerminalWidget.OnExitInputAction
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UComputerTerminalWidget::STATIC_OnExitInputAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ComputerTerminalWidget.OnExitInputAction");

	UComputerTerminalWidget_OnExitInputAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ComputerTerminalWidget.OnConversationEnded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UComputerTerminalWidget::STATIC_OnConversationEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ComputerTerminalWidget.OnConversationEnded");

	UComputerTerminalWidget_OnConversationEnded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ComputerTerminalWidgetComponent.OnOwnerStateChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EComputerLockState             PreviousState                  (Parm, ZeroConstructor, IsPlainOldData)
// EComputerLockState             CurrentState                   (Parm, ZeroConstructor, IsPlainOldData)

void UComputerTerminalWidgetComponent::STATIC_OnOwnerStateChange(EComputerLockState PreviousState, EComputerLockState CurrentState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ComputerTerminalWidgetComponent.OnOwnerStateChange");

	UComputerTerminalWidgetComponent_OnOwnerStateChange_Params params;
	params.PreviousState = PreviousState;
	params.CurrentState = CurrentState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Conditionals.PlayerHasPerk
// ()
// Parameters:
// class FString                  Perk                           (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::PlayerHasPerk(const class FString& Perk)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.PlayerHasPerk");

	UConditionals_PlayerHasPerk_Params params;
	params.Perk = Perk;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.PlayerHasFlaw
// ()
// Parameters:
// class FString                  Flaw                           (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::PlayerHasFlaw(const class FString& Flaw)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.PlayerHasFlaw");

	UConditionals_PlayerHasFlaw_Params params;
	params.Flaw = Flaw;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsWeaponEquipped
// (Final)
// Parameters:
// class FString                  Weapon                         (Parm, ZeroConstructor)
// bool                           bIncludeDerivedClasses         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsWeaponEquipped(const class FString& Weapon, bool bIncludeDerivedClasses)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsWeaponEquipped");

	UConditionals_IsWeaponEquipped_Params params;
	params.Weapon = Weapon;
	params.bIncludeDerivedClasses = bIncludeDerivedClasses;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsTrapStateEqual
// (Final)
// Parameters:
// struct FGuid                   TrapObjectID                   (Parm, ZeroConstructor, IsPlainOldData)
// ETrapTriggerState              State                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsTrapStateEqual(const struct FGuid& TrapObjectID, ETrapTriggerState State)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsTrapStateEqual");

	UConditionals_IsTrapStateEqual_Params params;
	params.TrapObjectID = TrapObjectID;
	params.State = State;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsTimeSlice
// (BlueprintCosmetic)
// Parameters:
// int                            StartHour                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            EndHour                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsTimeSlice(int StartHour, int EndHour)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsTimeSlice");

	UConditionals_IsTimeSlice_Params params;
	params.StartHour = StartHour;
	params.EndHour = EndHour;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsSpeakerGender
// (Final)
// Parameters:
// EGender                        Gender                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsSpeakerGender(EGender Gender)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsSpeakerGender");

	UConditionals_IsSpeakerGender_Params params;
	params.Gender = Gender;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsSpeaker
// ()
// Parameters:
// struct FGuid                   SpeakerID                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsSpeaker(const struct FGuid& SpeakerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsSpeaker");

	UConditionals_IsSpeaker_Params params;
	params.SpeakerID = SpeakerID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsRestrictedAreaEnabled
// ()
// Parameters:
// struct FGuid                   RestrictedAreaID               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsRestrictedAreaEnabled(const struct FGuid& RestrictedAreaID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsRestrictedAreaEnabled");

	UConditionals_IsRestrictedAreaEnabled_Params params;
	params.RestrictedAreaID = RestrictedAreaID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsQuestTracked
// ()
// Parameters:
// struct FGuid                   QuestID                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsQuestTracked(const struct FGuid& QuestID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsQuestTracked");

	UConditionals_IsQuestTracked_Params params;
	params.QuestID = QuestID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsQuestStateVisited
// (BlueprintAuthorityOnly)
// Parameters:
// struct FGuid                   QuestID                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            NodeID                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsQuestStateVisited(const struct FGuid& QuestID, int NodeID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsQuestStateVisited");

	UConditionals_IsQuestStateVisited_Params params;
	params.QuestID = QuestID;
	params.NodeID = NodeID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsQuestStateActive
// (BlueprintAuthorityOnly)
// Parameters:
// struct FGuid                   QuestID                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            NodeID                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsQuestStateActive(const struct FGuid& QuestID, int NodeID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsQuestStateActive");

	UConditionals_IsQuestStateActive_Params params;
	params.QuestID = QuestID;
	params.NodeID = NodeID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsQuestStarted
// ()
// Parameters:
// struct FGuid                   QuestID                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsQuestStarted(const struct FGuid& QuestID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsQuestStarted");

	UConditionals_IsQuestStarted_Params params;
	params.QuestID = QuestID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsQuestMentioned
// ()
// Parameters:
// struct FGuid                   QuestID                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsQuestMentioned(const struct FGuid& QuestID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsQuestMentioned");

	UConditionals_IsQuestMentioned_Params params;
	params.QuestID = QuestID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsQuestionNodeOnResponseBranch
// (BlueprintCosmetic)
// Parameters:
// int                            QuestionNodeID                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            PlayerResponseNodeID           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsQuestionNodeOnResponseBranch(int QuestionNodeID, int PlayerResponseNodeID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsQuestionNodeOnResponseBranch");

	UConditionals_IsQuestionNodeOnResponseBranch_Params params;
	params.QuestionNodeID = QuestionNodeID;
	params.PlayerResponseNodeID = PlayerResponseNodeID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsQuestEventTriggered
// (BlueprintAuthorityOnly)
// Parameters:
// struct FGuid                   QuestID                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            QuestEventID                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsQuestEventTriggered(const struct FGuid& QuestID, int QuestEventID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsQuestEventTriggered");

	UConditionals_IsQuestEventTriggered_Params params;
	params.QuestID = QuestID;
	params.QuestEventID = QuestEventID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsQuestEndStateTriggered
// (BlueprintAuthorityOnly)
// Parameters:
// struct FGuid                   QuestID                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            EndStateID                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsQuestEndStateTriggered(const struct FGuid& QuestID, int EndStateID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsQuestEndStateTriggered");

	UConditionals_IsQuestEndStateTriggered_Params params;
	params.QuestID = QuestID;
	params.EndStateID = EndStateID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsQuestComplete
// ()
// Parameters:
// struct FGuid                   QuestID                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsQuestComplete(const struct FGuid& QuestID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsQuestComplete");

	UConditionals_IsQuestComplete_Params params;
	params.QuestID = QuestID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsQuestAddendumTriggered
// (BlueprintAuthorityOnly)
// Parameters:
// struct FGuid                   QuestID                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            AddendumID                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsQuestAddendumTriggered(const struct FGuid& QuestID, int AddendumID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsQuestAddendumTriggered");

	UConditionals_IsQuestAddendumTriggered_Params params;
	params.QuestID = QuestID;
	params.AddendumID = AddendumID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsQuestActive
// ()
// Parameters:
// struct FGuid                   QuestID                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsQuestActive(const struct FGuid& QuestID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsQuestActive");

	UConditionals_IsQuestActive_Params params;
	params.QuestID = QuestID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsPlayerTravelDestinationLocked
// ()
// Parameters:
// class FString                  TravelDestination              (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsPlayerTravelDestinationLocked(const class FString& TravelDestination)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsPlayerTravelDestinationLocked");

	UConditionals_IsPlayerTravelDestinationLocked_Params params;
	params.TravelDestination = TravelDestination;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsPlayerTravelDestinationHidden
// ()
// Parameters:
// class FString                  TravelDestination              (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsPlayerTravelDestinationHidden(const class FString& TravelDestination)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsPlayerTravelDestinationHidden");

	UConditionals_IsPlayerTravelDestinationHidden_Params params;
	params.TravelDestination = TravelDestination;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsPlayerSkillValue
// (RequiredAPI, BlueprintCosmetic)
// Parameters:
// ESkill                         Skill                          (Parm, ZeroConstructor, IsPlainOldData)
// EComparisonOperator            Operator                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            SkillValue                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUseCompanionInterjection      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bPermanentOnly                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsPlayerSkillValue(ESkill Skill, EComparisonOperator Operator, int SkillValue, bool bUseCompanionInterjection, bool bPermanentOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsPlayerSkillValue");

	UConditionals_IsPlayerSkillValue_Params params;
	params.Skill = Skill;
	params.Operator = Operator;
	params.SkillValue = SkillValue;
	params.bUseCompanionInterjection = bUseCompanionInterjection;
	params.bPermanentOnly = bPermanentOnly;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsPlayerSkillLevelScaled
// (Final, BlueprintCosmetic)
// Parameters:
// ESkill                         Skill                          (Parm, ZeroConstructor, IsPlainOldData)
// EComparisonOperator            Operator                       (Parm, ZeroConstructor, IsPlainOldData)
// ECharacterSkillRange           SkillRange                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            LevelOverride                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUseCompanionInterjection      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsPlayerSkillLevelScaled(ESkill Skill, EComparisonOperator Operator, ECharacterSkillRange SkillRange, int LevelOverride, bool bUseCompanionInterjection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsPlayerSkillLevelScaled");

	UConditionals_IsPlayerSkillLevelScaled_Params params;
	params.Skill = Skill;
	params.Operator = Operator;
	params.SkillRange = SkillRange;
	params.LevelOverride = LevelOverride;
	params.bUseCompanionInterjection = bUseCompanionInterjection;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsPlayerSkill
// (BlueprintAuthorityOnly)
// Parameters:
// ESkill                         Skill                          (Parm, ZeroConstructor, IsPlainOldData)
// EComparisonOperator            Operator                       (Parm, ZeroConstructor, IsPlainOldData)
// ECharacterSkillRange           SkillRange                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUseCompanionInterjection      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsPlayerSkill(ESkill Skill, EComparisonOperator Operator, ECharacterSkillRange SkillRange, bool bUseCompanionInterjection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsPlayerSkill");

	UConditionals_IsPlayerSkill_Params params;
	params.Skill = Skill;
	params.Operator = Operator;
	params.SkillRange = SkillRange;
	params.bUseCompanionInterjection = bUseCompanionInterjection;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsPlayerShipCurrentAt
// ()
// Parameters:
// class FString                  ShipDestination                (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsPlayerShipCurrentAt(const class FString& ShipDestination)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsPlayerShipCurrentAt");

	UConditionals_IsPlayerShipCurrentAt_Params params;
	params.ShipDestination = ShipDestination;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsPlayerInStealth
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsPlayerInStealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsPlayerInStealth");

	UConditionals_IsPlayerInStealth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsPlayerInCombat
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsPlayerInCombat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsPlayerInCombat");

	UConditionals_IsPlayerInCombat_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsPlayerDisguisedAs
// ()
// Parameters:
// class FString                  Faction                        (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsPlayerDisguisedAs(const class FString& Faction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsPlayerDisguisedAs");

	UConditionals_IsPlayerDisguisedAs_Params params;
	params.Faction = Faction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsPlayerAwareOfTravelDestination
// ()
// Parameters:
// class FString                  TravelDestination              (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsPlayerAwareOfTravelDestination(const class FString& TravelDestination)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsPlayerAwareOfTravelDestination");

	UConditionals_IsPlayerAwareOfTravelDestination_Params params;
	params.TravelDestination = TravelDestination;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsPlayerAwareOfRegion
// ()
// Parameters:
// class FString                  TravelRegion                   (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsPlayerAwareOfRegion(const class FString& TravelRegion)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsPlayerAwareOfRegion");

	UConditionals_IsPlayerAwareOfRegion_Params params;
	params.TravelRegion = TravelRegion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsPlayerAwareOfPointOfInterest
// ()
// Parameters:
// class FString                  PointOfInterestData            (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsPlayerAwareOfPointOfInterest(const class FString& PointOfInterestData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsPlayerAwareOfPointOfInterest");

	UConditionals_IsPlayerAwareOfPointOfInterest_Params params;
	params.PointOfInterestData = PointOfInterestData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsPlayerAttribute
// (Final, RequiredAPI)
// Parameters:
// EAttribute                     Attribute                      (Parm, ZeroConstructor, IsPlainOldData)
// EComparisonOperator            Operator                       (Parm, ZeroConstructor, IsPlainOldData)
// ECharacterAttributeRange       AttributeRange                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsPlayerAttribute(EAttribute Attribute, EComparisonOperator Operator, ECharacterAttributeRange AttributeRange)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsPlayerAttribute");

	UConditionals_IsPlayerAttribute_Params params;
	params.Attribute = Attribute;
	params.Operator = Operator;
	params.AttributeRange = AttributeRange;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsPhaseOfDay
// (Final)
// Parameters:
// EPhaseOfDay                    Phase                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsPhaseOfDay(EPhaseOfDay Phase)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsPhaseOfDay");

	UConditionals_IsPhaseOfDay_Params params;
	params.Phase = Phase;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsPartyFull
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsPartyFull()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsPartyFull");

	UConditionals_IsPartyFull_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsOCLStateEqual
// (Final)
// Parameters:
// struct FGuid                   OCLObjectID                    (Parm, ZeroConstructor, IsPlainOldData)
// EOCLState                      State                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsOCLStateEqual(const struct FGuid& OCLObjectID, EOCLState State)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsOCLStateEqual");

	UConditionals_IsOCLStateEqual_Params params;
	params.OCLObjectID = OCLObjectID;
	params.State = State;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsItemQuantity
// (BlueprintCosmetic)
// Parameters:
// class FString                  Item                           (Parm, ZeroConstructor)
// EComparisonOperator            Operator                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            Quantity                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsItemQuantity(const class FString& Item, EComparisonOperator Operator, int Quantity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsItemQuantity");

	UConditionals_IsItemQuantity_Params params;
	params.Item = Item;
	params.Operator = Operator;
	params.Quantity = Quantity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsInterrogationsPassedCount
// (BlueprintCosmetic)
// Parameters:
// EComparisonOperator            Operator                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsInterrogationsPassedCount(EComparisonOperator Operator, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsInterrogationsPassedCount");

	UConditionals_IsInterrogationsPassedCount_Params params;
	params.Operator = Operator;
	params.Count = Count;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsInterrogationInRestrictedArea
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsInterrogationInRestrictedArea()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsInterrogationInRestrictedArea");

	UConditionals_IsInterrogationInRestrictedArea_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsInterrogationDisguised
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsInterrogationDisguised()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsInterrogationDisguised");

	UConditionals_IsInterrogationDisguised_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsInterrogationCrime
// (Final)
// Parameters:
// ECrimeType                     Crime                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsInterrogationCrime(ECrimeType Crime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsInterrogationCrime");

	UConditionals_IsInterrogationCrime_Params params;
	params.Crime = Crime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsInMap
// ()
// Parameters:
// class FString                  MapID                          (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsInMap(const class FString& MapID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsInMap");

	UConditionals_IsInMap_Params params;
	params.MapID = MapID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsGlobalValue
// (BlueprintCosmetic)
// Parameters:
// class FString                  VariableName                   (ConstParm, Parm, ZeroConstructor)
// EComparisonOperator            Operator                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsGlobalValue(const class FString& VariableName, EComparisonOperator Operator, int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsGlobalValue");

	UConditionals_IsGlobalValue_Params params;
	params.VariableName = VariableName;
	params.Operator = Operator;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsFactionReputationRankType
// (RequiredAPI)
// Parameters:
// class FString                  Faction                        (Parm, ZeroConstructor)
// EReputationRankType            ReputationRankType             (Parm, ZeroConstructor, IsPlainOldData)
// EComparisonOperator            Operator                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsFactionReputationRankType(const class FString& Faction, EReputationRankType ReputationRankType, EComparisonOperator Operator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsFactionReputationRankType");

	UConditionals_IsFactionReputationRankType_Params params;
	params.Faction = Faction;
	params.ReputationRankType = ReputationRankType;
	params.Operator = Operator;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsFactionReputationRank
// (Final, BlueprintCosmetic)
// Parameters:
// class FString                  Faction                        (Parm, ZeroConstructor)
// EReputationRankType            ReputationRankType             (Parm, ZeroConstructor, IsPlainOldData)
// int                            Rank                           (Parm, ZeroConstructor, IsPlainOldData)
// EComparisonOperator            Operator                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsFactionReputationRank(const class FString& Faction, EReputationRankType ReputationRankType, int Rank, EComparisonOperator Operator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsFactionReputationRank");

	UConditionals_IsFactionReputationRank_Params params;
	params.Faction = Faction;
	params.ReputationRankType = ReputationRankType;
	params.Rank = Rank;
	params.Operator = Operator;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsFactionRelationship
// (Final)
// Parameters:
// class FString                  Faction                        (Parm, ZeroConstructor)
// TEnumAsByte<ETeamAttitude>     AttitudeType                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsFactionRelationship(const class FString& Faction, TEnumAsByte<ETeamAttitude> AttitudeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsFactionRelationship");

	UConditionals_IsFactionRelationship_Params params;
	params.Faction = Faction;
	params.AttitudeType = AttitudeType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsCurrentActiveCompanionAmount
// (BlueprintCosmetic)
// Parameters:
// EComparisonOperator            Operator                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            Quantity                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsCurrentActiveCompanionAmount(EComparisonOperator Operator, int Quantity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsCurrentActiveCompanionAmount");

	UConditionals_IsCurrentActiveCompanionAmount_Params params;
	params.Operator = Operator;
	params.Quantity = Quantity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsCompanionUnlocked
// (Final)
// Parameters:
// ESpecialObsidianID             CompanionID                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsCompanionUnlocked(ESpecialObsidianID CompanionID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsCompanionUnlocked");

	UConditionals_IsCompanionUnlocked_Params params;
	params.CompanionID = CompanionID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsCompanionMoral
// (BlueprintCosmetic)
// Parameters:
// ESpecialObsidianID             CompanionID                    (Parm, ZeroConstructor, IsPlainOldData)
// EComparisonOperator            Operator                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          MoralAmount                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsCompanionMoral(ESpecialObsidianID CompanionID, EComparisonOperator Operator, float MoralAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsCompanionMoral");

	UConditionals_IsCompanionMoral_Params params;
	params.CompanionID = CompanionID;
	params.Operator = Operator;
	params.MoralAmount = MoralAmount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsCompanionDismissed
// (Final)
// Parameters:
// ESpecialObsidianID             CompanionID                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsCompanionDismissed(ESpecialObsidianID CompanionID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsCompanionDismissed");

	UConditionals_IsCompanionDismissed_Params params;
	params.CompanionID = CompanionID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsCompanionActiveInParty
// ()
// Parameters:
// struct FGuid                   CompanionID                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsCompanionActiveInParty(const struct FGuid& CompanionID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsCompanionActiveInParty");

	UConditionals_IsCompanionActiveInParty_Params params;
	params.CompanionID = CompanionID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsCharacterGrouping
// (Final)
// Parameters:
// ECharacterGrouping             CharacterGrouping              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsCharacterGrouping(ECharacterGrouping CharacterGrouping)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsCharacterGrouping");

	UConditionals_IsCharacterGrouping_Params params;
	params.CharacterGrouping = CharacterGrouping;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsArmorEquipped
// (Final)
// Parameters:
// class FString                  ArmorItem                      (Parm, ZeroConstructor)
// bool                           bIncludeDerivedClasses         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsArmorEquipped(const class FString& ArmorItem, bool bIncludeDerivedClasses)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsArmorEquipped");

	UConditionals_IsArmorEquipped_Params params;
	params.ArmorItem = ArmorItem;
	params.bIncludeDerivedClasses = bIncludeDerivedClasses;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.IsAnyArmorEquipped
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::IsAnyArmorEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.IsAnyArmorEquipped");

	UConditionals_IsAnyArmorEquipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.HaveMinutesElapsedSinceNamedTimestamp
// (BlueprintAuthorityOnly)
// Parameters:
// class FString                  TimestampName                  (Parm, ZeroConstructor)
// int                            Minutes                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::HaveMinutesElapsedSinceNamedTimestamp(const class FString& TimestampName, int Minutes)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.HaveMinutesElapsedSinceNamedTimestamp");

	UConditionals_HaveMinutesElapsedSinceNamedTimestamp_Params params;
	params.TimestampName = TimestampName;
	params.Minutes = Minutes;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.HaveHoursElapsedSinceNamedTimestamp
// (BlueprintAuthorityOnly)
// Parameters:
// class FString                  TimestampName                  (Parm, ZeroConstructor)
// int                            Hours                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::HaveHoursElapsedSinceNamedTimestamp(const class FString& TimestampName, int Hours)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.HaveHoursElapsedSinceNamedTimestamp");

	UConditionals_HaveHoursElapsedSinceNamedTimestamp_Params params;
	params.TimestampName = TimestampName;
	params.Hours = Hours;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.HaveDaysElapsedSinceNamedTimestamp
// (BlueprintAuthorityOnly)
// Parameters:
// class FString                  TimestampName                  (Parm, ZeroConstructor)
// int                            Days                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::HaveDaysElapsedSinceNamedTimestamp(const class FString& TimestampName, int Days)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.HaveDaysElapsedSinceNamedTimestamp");

	UConditionals_HaveDaysElapsedSinceNamedTimestamp_Params params;
	params.TimestampName = TimestampName;
	params.Days = Days;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.HasQuestStateFailed
// (BlueprintAuthorityOnly)
// Parameters:
// struct FGuid                   QuestID                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            NodeID                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::HasQuestStateFailed(const struct FGuid& QuestID, int NodeID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.HasQuestStateFailed");

	UConditionals_HasQuestStateFailed_Params params;
	params.QuestID = QuestID;
	params.NodeID = NodeID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.HasQuestFailed
// ()
// Parameters:
// struct FGuid                   QuestID                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::HasQuestFailed(const struct FGuid& QuestID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.HasQuestFailed");

	UConditionals_HasQuestFailed_Params params;
	params.QuestID = QuestID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.HasPlayerVisitedTravelDestination
// ()
// Parameters:
// class FString                  TravelDestination              (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::HasPlayerVisitedTravelDestination(const class FString& TravelDestination)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.HasPlayerVisitedTravelDestination");

	UConditionals_HasPlayerVisitedTravelDestination_Params params;
	params.TravelDestination = TravelDestination;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.HasPlayerVisitedRegion
// ()
// Parameters:
// class FString                  TravelRegion                   (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::HasPlayerVisitedRegion(const class FString& TravelRegion)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.HasPlayerVisitedRegion");

	UConditionals_HasPlayerVisitedRegion_Params params;
	params.TravelRegion = TravelRegion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.HasPlayerOnlyHeardAboutPointOfInterest
// ()
// Parameters:
// class FString                  PointOfInterestData            (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::HasPlayerOnlyHeardAboutPointOfInterest(const class FString& PointOfInterestData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.HasPlayerOnlyHeardAboutPointOfInterest");

	UConditionals_HasPlayerOnlyHeardAboutPointOfInterest_Params params;
	params.PointOfInterestData = PointOfInterestData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.HasPlayerDiscoveredPointOfInterest
// ()
// Parameters:
// class FString                  PointOfInterestData            (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::HasPlayerDiscoveredPointOfInterest(const class FString& PointOfInterestData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.HasPlayerDiscoveredPointOfInterest");

	UConditionals_HasPlayerDiscoveredPointOfInterest_Params params;
	params.PointOfInterestData = PointOfInterestData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.HasItemValue
// ()
// Parameters:
// class FString                  VariableName                   (Parm, ZeroConstructor)
// class FString                  Item                           (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::HasItemValue(const class FString& VariableName, const class FString& Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.HasItemValue");

	UConditionals_HasItemValue_Params params;
	params.VariableName = VariableName;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.HasItemsByTag
// (BlueprintCosmetic)
// Parameters:
// class FString                  GameplayTag                    (Parm, ZeroConstructor)
// EComparisonOperator            Operator                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            Quantity                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::HasItemsByTag(const class FString& GameplayTag, EComparisonOperator Operator, int Quantity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.HasItemsByTag");

	UConditionals_HasItemsByTag_Params params;
	params.GameplayTag = GameplayTag;
	params.Operator = Operator;
	params.Quantity = Quantity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.HasItem
// ()
// Parameters:
// class FString                  Item                           (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::HasItem(const class FString& Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.HasItem");

	UConditionals_HasItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.HasDLC
// (Final)
// Parameters:
// EDownLoadableContent           DLC                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::HasDLC(EDownLoadableContent DLC)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.HasDLC");

	UConditionals_HasDLC_Params params;
	params.DLC = DLC;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.HasConversationNodeBeenVisited
// (BlueprintAuthorityOnly)
// Parameters:
// struct FGuid                   ConversationID                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            NodeID                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::HasConversationNodeBeenVisited(const struct FGuid& ConversationID, int NodeID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.HasConversationNodeBeenVisited");

	UConditionals_HasConversationNodeBeenVisited_Params params;
	params.ConversationID = ConversationID;
	params.NodeID = NodeID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.GetOCLState
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   OCLObjectID                    (Parm, ZeroConstructor, IsPlainOldData)
// EOCLState                      State                          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// EBoolResult                    Result                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UConditionals::STATIC_GetOCLState(const struct FGuid& OCLObjectID, EOCLState* State, EBoolResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.GetOCLState");

	UConditionals_GetOCLState_Params params;
	params.OCLObjectID = OCLObjectID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (State != nullptr)
		*State = params.State;
	if (Result != nullptr)
		*Result = params.Result;
}


// Function Indiana.Conditionals.GetGlobalValue
// ()
// Parameters:
// class FString                  VariableName                   (ConstParm, Parm, ZeroConstructor)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UConditionals::GetGlobalValue(const class FString& VariableName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.GetGlobalValue");

	UConditionals_GetGlobalValue_Params params;
	params.VariableName = VariableName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.DoesConversationNodePass
// (BlueprintAuthorityOnly)
// Parameters:
// struct FGuid                   ConversationID                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            NodeID                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::DoesConversationNodePass(const struct FGuid& ConversationID, int NodeID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.DoesConversationNodePass");

	UConditionals_DoesConversationNodePass_Params params;
	params.ConversationID = ConversationID;
	params.NodeID = NodeID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.CompareGlobals
// (BlueprintCosmetic)
// Parameters:
// class FString                  VariableName1                  (ConstParm, Parm, ZeroConstructor)
// EComparisonOperator            Operator                       (Parm, ZeroConstructor, IsPlainOldData)
// class FString                  VariableName2                  (ConstParm, Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::CompareGlobals(const class FString& VariableName1, EComparisonOperator Operator, const class FString& VariableName2)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.CompareGlobals");

	UConditionals_CompareGlobals_Params params;
	params.VariableName1 = VariableName1;
	params.Operator = Operator;
	params.VariableName2 = VariableName2;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.CompanionWantsToTalk
// (Final)
// Parameters:
// ESpecialObsidianID             CompanionID                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::CompanionWantsToTalk(ESpecialObsidianID CompanionID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.CompanionWantsToTalk");

	UConditionals_CompanionWantsToTalk_Params params;
	params.CompanionID = CompanionID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.CompanionHasPerk
// ()
// Parameters:
// struct FGuid                   CompanionID                    (Parm, ZeroConstructor, IsPlainOldData)
// class FString                  Perk                           (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::CompanionHasPerk(const struct FGuid& CompanionID, const class FString& Perk)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.CompanionHasPerk");

	UConditionals_CompanionHasPerk_Params params;
	params.CompanionID = CompanionID;
	params.Perk = Perk;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.CanPlayerSafelyTakePickup
// ()
// Parameters:
// struct FGuid                   PickupID                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::CanPlayerSafelyTakePickup(const struct FGuid& PickupID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.CanPlayerSafelyTakePickup");

	UConditionals_CanPlayerSafelyTakePickup_Params params;
	params.PickupID = PickupID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.CanPlayerSafelyTakeItemTypeInContainer
// ()
// Parameters:
// struct FGuid                   ContainerID                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class FString                  Item                           (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::CanPlayerSafelyTakeItemTypeInContainer(const struct FGuid& ContainerID, const class FString& Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.CanPlayerSafelyTakeItemTypeInContainer");

	UConditionals_CanPlayerSafelyTakeItemTypeInContainer_Params params;
	params.ContainerID = ContainerID;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.CanPlayerReadRedactions
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::CanPlayerReadRedactions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.CanPlayerReadRedactions");

	UConditionals_CanPlayerReadRedactions_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.CanPlayerDiscoverPointOfInterest
// ()
// Parameters:
// class FString                  PointOfInterestData            (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::CanPlayerDiscoverPointOfInterest(const class FString& PointOfInterestData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.CanPlayerDiscoverPointOfInterest");

	UConditionals_CanPlayerDiscoverPointOfInterest_Params params;
	params.PointOfInterestData = PointOfInterestData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.CanPlayerAccessTravelDestination
// ()
// Parameters:
// class FString                  TravelDestination              (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::CanPlayerAccessTravelDestination(const class FString& TravelDestination)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.CanPlayerAccessTravelDestination");

	UConditionals_CanPlayerAccessTravelDestination_Params params;
	params.TravelDestination = TravelDestination;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.CanBribe
// (BlueprintCosmetic)
// Parameters:
// class FString                  VariableName                   (Parm, ZeroConstructor)
// EBribeDifficulty               BribeDifficulty                (Parm, ZeroConstructor, IsPlainOldData)
// int                            LevelOverride                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::CanBribe(const class FString& VariableName, EBribeDifficulty BribeDifficulty, int LevelOverride)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.CanBribe");

	UConditionals_CanBribe_Params params;
	params.VariableName = VariableName;
	params.BribeDifficulty = BribeDifficulty;
	params.LevelOverride = LevelOverride;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.CallGlobalConditional
// ()
// Parameters:
// struct FGuid                   GlobalScriptID                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::CallGlobalConditional(const struct FGuid& GlobalScriptID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.CallGlobalConditional");

	UConditionals_CallGlobalConditional_Params params;
	params.GlobalScriptID = GlobalScriptID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Conditionals.AlwaysFalse
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConditionals::AlwaysFalse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Conditionals.AlwaysFalse");

	UConditionals_AlwaysFalse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ConsumableAmmoPool.GetNextConsumableClass
// ()
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UConsumableAmmoPool::GetNextConsumableClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConsumableAmmoPool.GetNextConsumableClass");

	UConsumableAmmoPool_GetNextConsumableClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ConsumableItem.OnStatUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class URpgStat*                Stat                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UConsumableItem::STATIC_OnStatUpdated(class URpgStat* Stat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConsumableItem.OnStatUpdated");

	UConsumableItem_OnStatUpdated_Params params;
	params.Stat = Stat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Container.IsLightEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AContainer::IsLightEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Container.IsLightEnabled");

	AContainer_IsLightEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Container.HandleItemRemoved
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)

void AContainer::STATIC_HandleItemRemoved(const struct FItemStack& ItemStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Container.HandleItemRemoved");

	AContainer_HandleItemRemoved_Params params;
	params.ItemStack = ItemStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Container.HandleItemCountChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)

void AContainer::STATIC_HandleItemCountChanged(const struct FItemStack& ItemStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Container.HandleItemCountChanged");

	AContainer_HandleItemCountChanged_Params params;
	params.ItemStack = ItemStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Container.HandleItemAdded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)

void AContainer::STATIC_HandleItemAdded(const struct FItemStack& ItemStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Container.HandleItemAdded");

	AContainer_HandleItemAdded_Params params;
	params.ItemStack = ItemStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Container.GetItemsInContainer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// TArray<class UItem*>           OutItems                       (Parm, OutParm, ZeroConstructor)

void AContainer::STATIC_GetItemsInContainer(TArray<class UItem*>* OutItems)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Container.GetItemsInContainer");

	AContainer_GetItemsInContainer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutItems != nullptr)
		*OutItems = params.OutItems;
}


// Function Indiana.ConversationActorInterface.GetSpeakerGameDataID
// ()
// Parameters:
// struct FGuid                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FGuid UConversationActorInterface::GetSpeakerGameDataID()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationActorInterface.GetSpeakerGameDataID");

	UConversationActorInterface_GetSpeakerGameDataID_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ConversationActorInterface.GetConversationDescription
// ()
// Parameters:
// struct FConversationDescription ReturnValue                    (Parm, OutParm, ReturnParm)

struct FConversationDescription UConversationActorInterface::GetConversationDescription()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationActorInterface.GetConversationDescription");

	UConversationActorInterface_GetConversationDescription_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ConversationBlueprintLibrary.StartSlideshow
// (BlueprintAuthorityOnly, BlueprintCosmetic)
// Parameters:
// class UConversationData*       Conversation                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            InstanceId                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConversationBlueprintLibrary::StartSlideshow(class UConversationData* Conversation, int* InstanceId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationBlueprintLibrary.StartSlideshow");

	UConversationBlueprintLibrary_StartSlideshow_Params params;
	params.Conversation = Conversation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (InstanceId != nullptr)
		*InstanceId = params.InstanceId;

	return params.ReturnValue;
}


// Function Indiana.ConversationBlueprintLibrary.StartPlayerControllerConversation
// (Final, BlueprintCosmetic)
// Parameters:
// ECheckBranches                 Branches                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// int                            InstanceId                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UConversationData*       ConversationData               (Parm, ZeroConstructor, IsPlainOldData)
// int                            StartNode                      (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FCharacterDescription> OverrideCharacters             (Parm, ZeroConstructor)
// bool                           bAllowedDuringCombat           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConversationBlueprintLibrary::StartPlayerControllerConversation(class UConversationData* ConversationData, int StartNode, TArray<struct FCharacterDescription> OverrideCharacters, bool bAllowedDuringCombat, ECheckBranches* Branches, int* InstanceId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationBlueprintLibrary.StartPlayerControllerConversation");

	UConversationBlueprintLibrary_StartPlayerControllerConversation_Params params;
	params.ConversationData = ConversationData;
	params.StartNode = StartNode;
	params.OverrideCharacters = OverrideCharacters;
	params.bAllowedDuringCombat = bAllowedDuringCombat;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Branches != nullptr)
		*Branches = params.Branches;
	if (InstanceId != nullptr)
		*InstanceId = params.InstanceId;

	return params.ReturnValue;
}


// Function Indiana.ConversationBlueprintLibrary.StartConversationWithActorInterface
// ()
// Parameters:
// ECheckBranches                 Branches                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// TScriptInterface<class UConversationActorInterface> Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            StartNode                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            InstanceId                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConversationBlueprintLibrary::StartConversationWithActorInterface(const TScriptInterface<class UConversationActorInterface>& Actor, int StartNode, ECheckBranches* Branches, int* InstanceId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationBlueprintLibrary.StartConversationWithActorInterface");

	UConversationBlueprintLibrary_StartConversationWithActorInterface_Params params;
	params.Actor = Actor;
	params.StartNode = StartNode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Branches != nullptr)
		*Branches = params.Branches;
	if (InstanceId != nullptr)
		*InstanceId = params.InstanceId;

	return params.ReturnValue;
}


// Function Indiana.ConversationBlueprintLibrary.StartConversationByDescriptionAtNode
// (BlueprintCosmetic, Exec)
// Parameters:
// ECheckBranches                 Branches                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FConversationDescription Description                    (Parm)
// int                            StartNode                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            InstanceId                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConversationBlueprintLibrary::StartConversationByDescriptionAtNode(const struct FConversationDescription& Description, int StartNode, ECheckBranches* Branches, int* InstanceId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationBlueprintLibrary.StartConversationByDescriptionAtNode");

	UConversationBlueprintLibrary_StartConversationByDescriptionAtNode_Params params;
	params.Description = Description;
	params.StartNode = StartNode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Branches != nullptr)
		*Branches = params.Branches;
	if (InstanceId != nullptr)
		*InstanceId = params.InstanceId;

	return params.ReturnValue;
}


// Function Indiana.ConversationBlueprintLibrary.StartConversationByDescription
// (BlueprintAuthorityOnly, Exec)
// Parameters:
// ECheckBranches                 Branches                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FConversationDescription Description                    (Parm)
// int                            InstanceId                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConversationBlueprintLibrary::StartConversationByDescription(const struct FConversationDescription& Description, ECheckBranches* Branches, int* InstanceId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationBlueprintLibrary.StartConversationByDescription");

	UConversationBlueprintLibrary_StartConversationByDescription_Params params;
	params.Description = Description;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Branches != nullptr)
		*Branches = params.Branches;
	if (InstanceId != nullptr)
		*InstanceId = params.InstanceId;

	return params.ReturnValue;
}


// Function Indiana.ConversationBlueprintLibrary.StartConversation
// (Final, BlueprintCosmetic)
// Parameters:
// ECheckBranches                 Branches                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// int                            InstanceId                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UConversationData*       Conversation                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            StartNode                      (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FCharacterDescription> OverrideCharacters             (Parm, ZeroConstructor)
// bool                           bAllowedDuringCombat           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConversationBlueprintLibrary::StartConversation(class UConversationData* Conversation, int StartNode, TArray<struct FCharacterDescription> OverrideCharacters, bool bAllowedDuringCombat, ECheckBranches* Branches, int* InstanceId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationBlueprintLibrary.StartConversation");

	UConversationBlueprintLibrary_StartConversation_Params params;
	params.Conversation = Conversation;
	params.StartNode = StartNode;
	params.OverrideCharacters = OverrideCharacters;
	params.bAllowedDuringCombat = bAllowedDuringCombat;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Branches != nullptr)
		*Branches = params.Branches;
	if (InstanceId != nullptr)
		*InstanceId = params.InstanceId;

	return params.ReturnValue;
}


// Function Indiana.ConversationBlueprintLibrary.MakeCharacterDescription
// (BlueprintCosmetic)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FCharacterDescription   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FCharacterDescription UConversationBlueprintLibrary::MakeCharacterDescription(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationBlueprintLibrary.MakeCharacterDescription");

	UConversationBlueprintLibrary_MakeCharacterDescription_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ConversationBlueprintLibrary.GetSpeakerGameDataReferences
// (BlueprintCosmetic)
// Parameters:
// class UConversationData*       ConversationData               (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FSpeakerGameDataReferenceID> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FSpeakerGameDataReferenceID> UConversationBlueprintLibrary::GetSpeakerGameDataReferences(class UConversationData* ConversationData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationBlueprintLibrary.GetSpeakerGameDataReferences");

	UConversationBlueprintLibrary_GetSpeakerGameDataReferences_Params params;
	params.ConversationData = ConversationData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ConversationBlueprintLibrary.EndConversation
// (BlueprintAuthorityOnly)
// Parameters:
// int                            ConversationInstanceID         (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UConversationBlueprintLibrary::EndConversation(int ConversationInstanceID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationBlueprintLibrary.EndConversation");

	UConversationBlueprintLibrary_EndConversation_Params params;
	params.ConversationInstanceID = ConversationInstanceID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ConversationBlueprintLibrary.CanStartConversationByDescription
// (Exec)
// Parameters:
// ECheckBranches                 Branches                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FConversationDescription Description                    (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConversationBlueprintLibrary::CanStartConversationByDescription(const struct FConversationDescription& Description, ECheckBranches* Branches)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationBlueprintLibrary.CanStartConversationByDescription");

	UConversationBlueprintLibrary_CanStartConversationByDescription_Params params;
	params.Description = Description;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Branches != nullptr)
		*Branches = params.Branches;

	return params.ReturnValue;
}


// Function Indiana.ConversationBlueprintLibrary.CanStartConversation
// (Final, BlueprintCosmetic)
// Parameters:
// ECheckBranches                 Branches                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UConversationData*       Conversation                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            StartNode                      (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FCharacterDescription> OverrideCharacters             (Parm, ZeroConstructor)
// bool                           bAllowedDuringCombat           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConversationBlueprintLibrary::CanStartConversation(class UConversationData* Conversation, int StartNode, TArray<struct FCharacterDescription> OverrideCharacters, bool bAllowedDuringCombat, ECheckBranches* Branches)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationBlueprintLibrary.CanStartConversation");

	UConversationBlueprintLibrary_CanStartConversation_Params params;
	params.Conversation = Conversation;
	params.StartNode = StartNode;
	params.OverrideCharacters = OverrideCharacters;
	params.bAllowedDuringCombat = bAllowedDuringCombat;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Branches != nullptr)
		*Branches = params.Branches;

	return params.ReturnValue;
}


// Function Indiana.ConversationBlueprintLibrary.AssignAllParticipantsAsOverrides
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FConversationDescription Description                    (Parm, OutParm, ReferenceParm)
// class AActor*                  OverrideActor                  (Parm, ZeroConstructor, IsPlainOldData)

void UConversationBlueprintLibrary::STATIC_AssignAllParticipantsAsOverrides(class AActor* OverrideActor, struct FConversationDescription* Description)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationBlueprintLibrary.AssignAllParticipantsAsOverrides");

	UConversationBlueprintLibrary_AssignAllParticipantsAsOverrides_Params params;
	params.OverrideActor = OverrideActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Description != nullptr)
		*Description = params.Description;
}


// Function Indiana.ConversationBlueprintLibrary.AddConversationEndedDelegate
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            InstanceId                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FScriptDelegate         Event                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UConversationBlueprintLibrary::STATIC_AddConversationEndedDelegate(int InstanceId, const struct FScriptDelegate& Event)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationBlueprintLibrary.AddConversationEndedDelegate");

	UConversationBlueprintLibrary_AddConversationEndedDelegate_Params params;
	params.InstanceId = InstanceId;
	params.Event = Event;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationInstance.OnParticipantEndPlay
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EEndPlayReason>    Reason                         (Parm, ZeroConstructor, IsPlainOldData)

void UConversationInstance::STATIC_OnParticipantEndPlay(class AActor* Actor, TEnumAsByte<EEndPlayReason> Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationInstance.OnParticipantEndPlay");

	UConversationInstance_OnParticipantEndPlay_Params params;
	params.Actor = Actor;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationInstance.OnCharacterDeath
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FCauseDamageInfo        CauseDamageInfo                (ConstParm, Parm, OutParm, ReferenceParm)

void UConversationInstance::STATIC_OnCharacterDeath(class AActor* Instigator, const struct FCauseDamageInfo& CauseDamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationInstance.OnCharacterDeath");

	UConversationInstance_OnCharacterDeath_Params params;
	params.Instigator = Instigator;
	params.CauseDamageInfo = CauseDamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationInstance.OnCharacterCombatStateChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bInCombat                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void UConversationInstance::STATIC_OnCharacterCombatStateChange(bool bInCombat, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationInstance.OnCharacterCombatStateChange");

	UConversationInstance_OnCharacterCombatStateChange_Params params;
	params.bInCombat = bInCombat;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationInstance.IsCurrentSpeakerGameDataReferenceID
// (BlueprintCosmetic)
// Parameters:
// struct FSpeakerGameDataReferenceID SpeakerGameData                (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConversationInstance::IsCurrentSpeakerGameDataReferenceID(const struct FSpeakerGameDataReferenceID& SpeakerGameData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationInstance.IsCurrentSpeakerGameDataReferenceID");

	UConversationInstance_IsCurrentSpeakerGameDataReferenceID_Params params;
	params.SpeakerGameData = SpeakerGameData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ConversationInstance.GetPayloadActorChecked
// (BlueprintCosmetic)
// Parameters:
// EPayloadID                     Key                            (Parm, ZeroConstructor, IsPlainOldData)
// ECheckBranches                 Branches                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UConversationInstance::GetPayloadActorChecked(EPayloadID Key, ECheckBranches* Branches)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationInstance.GetPayloadActorChecked");

	UConversationInstance_GetPayloadActorChecked_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Branches != nullptr)
		*Branches = params.Branches;

	return params.ReturnValue;
}


// Function Indiana.ConversationInstance.GetCurrentSpeakerGameDataReferenceID
// ()
// Parameters:
// struct FSpeakerGameDataReferenceID ReturnValue                    (Parm, OutParm, ReturnParm)

struct FSpeakerGameDataReferenceID UConversationInstance::GetCurrentSpeakerGameDataReferenceID()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationInstance.GetCurrentSpeakerGameDataReferenceID");

	UConversationInstance_GetCurrentSpeakerGameDataReferenceID_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ConversationInterface.ConversationStarted
// (BlueprintAuthorityOnly, BlueprintCosmetic)
// Parameters:
// class AActor*                  Speaker                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// int                            NodeID                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConversationInterface::ConversationStarted(class AActor* Speaker, const struct FGuid& Guid, int NodeID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationInterface.ConversationStarted");

	UConversationInterface_ConversationStarted_Params params;
	params.Speaker = Speaker;
	params.Guid = Guid;
	params.NodeID = NodeID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ConversationInterface.ConversationNodeChanged
// (BlueprintAuthorityOnly, BlueprintCosmetic)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Camera                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Audio                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            NodeID                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConversationInterface::ConversationNodeChanged(class AActor* Character, class AActor* Camera, class AActor* Audio, int NodeID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationInterface.ConversationNodeChanged");

	UConversationInterface_ConversationNodeChanged_Params params;
	params.Character = Character;
	params.Camera = Camera;
	params.Audio = Audio;
	params.NodeID = NodeID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ConversationInterface.ConversationEnded
// ()
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConversationInterface::ConversationEnded(const struct FGuid& Guid)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationInterface.ConversationEnded");

	UConversationInterface_ConversationEnded_Params params;
	params.Guid = Guid;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.SkillCheckInterruption.MontageFinished
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInterrupted                   (Parm, ZeroConstructor, IsPlainOldData)

void USkillCheckInterruption::STATIC_MontageFinished(class UAnimMontage* Montage, bool bInterrupted)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SkillCheckInterruption.MontageFinished");

	USkillCheckInterruption_MontageFinished_Params params;
	params.Montage = Montage;
	params.bInterrupted = bInterrupted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationManager.MarkConversationNodeAsRead
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UConversationData*       Conversation                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// int                            NodeID                         (Parm, ZeroConstructor, IsPlainOldData)

void UConversationManager::STATIC_MarkConversationNodeAsRead(class UConversationData* Conversation, int NodeID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationManager.MarkConversationNodeAsRead");

	UConversationManager_MarkConversationNodeAsRead_Params params;
	params.Conversation = Conversation;
	params.NodeID = NodeID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationManager.HasConversationNodeBeenVisited
// (Final, BlueprintAuthorityOnly, BlueprintCosmetic)
// Parameters:
// class UConversationData*       Conversation                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// int                            NodeID                         (Parm, ZeroConstructor, IsPlainOldData)
// ECheckBranches                 Branches                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConversationManager::HasConversationNodeBeenVisited(class UConversationData* Conversation, int NodeID, ECheckBranches* Branches)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationManager.HasConversationNodeBeenVisited");

	UConversationManager_HasConversationNodeBeenVisited_Params params;
	params.Conversation = Conversation;
	params.NodeID = NodeID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Branches != nullptr)
		*Branches = params.Branches;

	return params.ReturnValue;
}


// Function Indiana.ConversationManager.ClearConversationNodeAsRead
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UConversationData*       Conversation                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// int                            NodeID                         (Parm, ZeroConstructor, IsPlainOldData)

void UConversationManager::STATIC_ClearConversationNodeAsRead(class UConversationData* Conversation, int NodeID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationManager.ClearConversationNodeAsRead");

	UConversationManager_ClearConversationNodeAsRead_Params params;
	params.Conversation = Conversation;
	params.NodeID = NodeID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationMessageWidget.ContentLerpTick
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UConversationMessageWidget::STATIC_ContentLerpTick(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationMessageWidget.ContentLerpTick");

	UConversationMessageWidget_ContentLerpTick_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationRegisterComponent.StartConversationByComponent
// ()
// Parameters:
// ECheckBranches                 Branches                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ComponentOwner                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConversationRegisterComponent::StartConversationByComponent(class AActor* ComponentOwner, ECheckBranches* Branches)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationRegisterComponent.StartConversationByComponent");

	UConversationRegisterComponent_StartConversationByComponent_Params params;
	params.ComponentOwner = ComponentOwner;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Branches != nullptr)
		*Branches = params.Branches;

	return params.ReturnValue;
}


// Function Indiana.ConversationRegisterComponent.OnResumeConversationTimerComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UConversationRegisterComponent::STATIC_OnResumeConversationTimerComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationRegisterComponent.OnResumeConversationTimerComplete");

	UConversationRegisterComponent_OnResumeConversationTimerComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationRegisterComponent.OnNewStateOfBeing
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EStateOfBeing                  NewStateOfBeing                (Parm, ZeroConstructor, IsPlainOldData)
// EStateOfBeing                  OldStateOfBeing                (Parm, ZeroConstructor, IsPlainOldData)

void UConversationRegisterComponent::STATIC_OnNewStateOfBeing(EStateOfBeing NewStateOfBeing, EStateOfBeing OldStateOfBeing)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationRegisterComponent.OnNewStateOfBeing");

	UConversationRegisterComponent_OnNewStateOfBeing_Params params;
	params.NewStateOfBeing = NewStateOfBeing;
	params.OldStateOfBeing = OldStateOfBeing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationRegisterComponent.OnCombatStateChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bInCombat                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void UConversationRegisterComponent::STATIC_OnCombatStateChange(bool bInCombat, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationRegisterComponent.OnCombatStateChange");

	UConversationRegisterComponent_OnCombatStateChange_Params params;
	params.bInCombat = bInCombat;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationRegisterComponent.OnChatterComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UChatterPlayer*          ChatterPlayer                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UConversationRegisterComponent::STATIC_OnChatterComplete(class UChatterPlayer* ChatterPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationRegisterComponent.OnChatterComplete");

	UConversationRegisterComponent_OnChatterComplete_Params params;
	params.ChatterPlayer = ChatterPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationResponseWidget.OnSetSkillCheckRequiredCompanion
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bSelectable                    (Parm, ZeroConstructor, IsPlainOldData)

void UConversationResponseWidget::STATIC_OnSetSkillCheckRequiredCompanion(bool bSelectable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationResponseWidget.OnSetSkillCheckRequiredCompanion");

	UConversationResponseWidget_OnSetSkillCheckRequiredCompanion_Params params;
	params.bSelectable = bSelectable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationResponseWidget.OnSetSelectableOption
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bSelectable                    (Parm, ZeroConstructor, IsPlainOldData)

void UConversationResponseWidget::STATIC_OnSetSelectableOption(bool bSelectable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationResponseWidget.OnSetSelectableOption");

	UConversationResponseWidget_OnSetSelectableOption_Params params;
	params.bSelectable = bSelectable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationResponseWidget.OnResponseSkillsChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bContainsSkillCheck            (Parm, ZeroConstructor, IsPlainOldData)

void UConversationResponseWidget::STATIC_OnResponseSkillsChanged(bool bContainsSkillCheck)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationResponseWidget.OnResponseSkillsChanged");

	UConversationResponseWidget_OnResponseSkillsChanged_Params params;
	params.bContainsSkillCheck = bContainsSkillCheck;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationResponseWidget.IsSelectable
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConversationResponseWidget::IsSelectable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationResponseWidget.IsSelectable");

	UConversationResponseWidget_IsSelectable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ConversationWidget.ShouldShowResponseLine
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConversationWidget::ShouldShowResponseLine()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationWidget.ShouldShowResponseLine");

	UConversationWidget_ShouldShowResponseLine_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ConversationWidget.ShouldShowInputLabelLine
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UConversationWidget::ShouldShowInputLabelLine()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationWidget.ShouldShowInputLabelLine");

	UConversationWidget_ShouldShowInputLabelLine_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ConversationWidget.SetHistoryBackingFillRatio
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          DesiredHistoryHeight           (Parm, ZeroConstructor, IsPlainOldData)

void UConversationWidget::STATIC_SetHistoryBackingFillRatio(float DesiredHistoryHeight)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationWidget.SetHistoryBackingFillRatio");

	UConversationWidget_SetHistoryBackingFillRatio_Params params;
	params.DesiredHistoryHeight = DesiredHistoryHeight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationWidget.SetConversationBackingFillRatio
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          DesiredOverlayHeight           (Parm, ZeroConstructor, IsPlainOldData)

void UConversationWidget::STATIC_SetConversationBackingFillRatio(float DesiredOverlayHeight)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationWidget.SetConversationBackingFillRatio");

	UConversationWidget_SetConversationBackingFillRatio_Params params;
	params.DesiredOverlayHeight = DesiredOverlayHeight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationWidget.OnHistoryToggleInputAction
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UConversationWidget::STATIC_OnHistoryToggleInputAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationWidget.OnHistoryToggleInputAction");

	UConversationWidget_OnHistoryToggleInputAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationWidget.OnHistoryScroll
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          InputDelta                     (Parm, ZeroConstructor, IsPlainOldData)

void UConversationWidget::STATIC_OnHistoryScroll(float InputDelta)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationWidget.OnHistoryScroll");

	UConversationWidget_OnHistoryScroll_Params params;
	params.InputDelta = InputDelta;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ConversationWidget.OnConversationEnded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UConversationWidget::STATIC_OnConversationEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ConversationWidget.OnConversationEnded");

	UConversationWidget_OnConversationEnded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Corpse.HandleItemRemoved
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)

void ACorpse::STATIC_HandleItemRemoved(const struct FItemStack& ItemStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Corpse.HandleItemRemoved");

	ACorpse_HandleItemRemoved_Params params;
	params.ItemStack = ItemStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Corpse.HandleItemAdded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)

void ACorpse::STATIC_HandleItemAdded(const struct FItemStack& ItemStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Corpse.HandleItemAdded");

	ACorpse_HandleItemAdded_Params params;
	params.ItemStack = ItemStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Corpse.GetItemsOnCorpse
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// TArray<class UItem*>           OutItems                       (Parm, OutParm, ZeroConstructor)

void ACorpse::STATIC_GetItemsOnCorpse(TArray<class UItem*>* OutItems)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Corpse.GetItemsOnCorpse");

	ACorpse_GetItemsOnCorpse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutItems != nullptr)
		*OutItems = params.OutItems;
}


// Function Indiana.CustomEventEffect.CustomTrigger
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  TargetActor                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FEventEffectParams      Params                         (ConstParm, Parm, OutParm, ReferenceParm)

void UCustomEventEffect::STATIC_CustomTrigger(class AActor* TargetActor, const struct FEventEffectParams& Params)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CustomEventEffect.CustomTrigger");

	UCustomEventEffect_CustomTrigger_Params params;
	params.TargetActor = TargetActor;
	params.Params = Params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CustomEventEffect.CustomStop
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  TargetActor                    (Parm, ZeroConstructor, IsPlainOldData)

void UCustomEventEffect::STATIC_CustomStop(class AActor* TargetActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CustomEventEffect.CustomStop");

	UCustomEventEffect_CustomStop_Params params;
	params.TargetActor = TargetActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CustomHitReceiver.CustomOnHit
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ACustomHitReceiver::STATIC_CustomOnHit(const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CustomHitReceiver.CustomOnHit");

	ACustomHitReceiver_CustomOnHit_Params params;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CustomMaterialModVisual.CopyParamOverrides
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UMaterialInstanceDynamic* Source                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   DestinationSlotName            (Parm, ZeroConstructor, IsPlainOldData)

void UCustomMaterialModVisual::STATIC_CopyParamOverrides(class UMaterialInstanceDynamic* Source, const struct FName& DestinationSlotName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CustomMaterialModVisual.CopyParamOverrides");

	UCustomMaterialModVisual_CopyParamOverrides_Params params;
	params.Source = Source;
	params.DestinationSlotName = DestinationSlotName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CustomMaterialModVisual.ApplyVectorParamToAll
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   ParamName                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ParamValue                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   OnlyApplyIfParamSet            (Parm, ZeroConstructor, IsPlainOldData)

void UCustomMaterialModVisual::STATIC_ApplyVectorParamToAll(const struct FName& ParamName, const struct FLinearColor& ParamValue, const struct FName& OnlyApplyIfParamSet)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CustomMaterialModVisual.ApplyVectorParamToAll");

	UCustomMaterialModVisual_ApplyVectorParamToAll_Params params;
	params.ParamName = ParamName;
	params.ParamValue = ParamValue;
	params.OnlyApplyIfParamSet = OnlyApplyIfParamSet;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CustomMaterialModVisual.ApplyVectorParam
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   MaterialSlotName               (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ParamName                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ParamValue                     (Parm, ZeroConstructor, IsPlainOldData)

void UCustomMaterialModVisual::STATIC_ApplyVectorParam(const struct FName& MaterialSlotName, const struct FName& ParamName, const struct FLinearColor& ParamValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CustomMaterialModVisual.ApplyVectorParam");

	UCustomMaterialModVisual_ApplyVectorParam_Params params;
	params.MaterialSlotName = MaterialSlotName;
	params.ParamName = ParamName;
	params.ParamValue = ParamValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CustomMaterialModVisual.ApplyTextureParamToAll
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   ParamName                      (Parm, ZeroConstructor, IsPlainOldData)
// TSoftObjectPtr<class UTexture> ParamValue                     (Parm)
// struct FName                   OnlyApplyIfParamSet            (Parm, ZeroConstructor, IsPlainOldData)

void UCustomMaterialModVisual::STATIC_ApplyTextureParamToAll(const struct FName& ParamName, TSoftObjectPtr<class UTexture> ParamValue, const struct FName& OnlyApplyIfParamSet)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CustomMaterialModVisual.ApplyTextureParamToAll");

	UCustomMaterialModVisual_ApplyTextureParamToAll_Params params;
	params.ParamName = ParamName;
	params.ParamValue = ParamValue;
	params.OnlyApplyIfParamSet = OnlyApplyIfParamSet;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CustomMaterialModVisual.ApplyTextureParam
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   MaterialSlotName               (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ParamName                      (Parm, ZeroConstructor, IsPlainOldData)
// TSoftObjectPtr<class UTexture> ParamValue                     (Parm)

void UCustomMaterialModVisual::STATIC_ApplyTextureParam(const struct FName& MaterialSlotName, const struct FName& ParamName, TSoftObjectPtr<class UTexture> ParamValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CustomMaterialModVisual.ApplyTextureParam");

	UCustomMaterialModVisual_ApplyTextureParam_Params params;
	params.MaterialSlotName = MaterialSlotName;
	params.ParamName = ParamName;
	params.ParamValue = ParamValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CustomMaterialModVisual.ApplyScalarParamToAll
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   ParamName                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ParamValue                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   OnlyApplyIfParamSet            (Parm, ZeroConstructor, IsPlainOldData)

void UCustomMaterialModVisual::STATIC_ApplyScalarParamToAll(const struct FName& ParamName, float ParamValue, const struct FName& OnlyApplyIfParamSet)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CustomMaterialModVisual.ApplyScalarParamToAll");

	UCustomMaterialModVisual_ApplyScalarParamToAll_Params params;
	params.ParamName = ParamName;
	params.ParamValue = ParamValue;
	params.OnlyApplyIfParamSet = OnlyApplyIfParamSet;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CustomMaterialModVisual.ApplyScalarParam
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   MaterialSlotName               (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ParamName                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ParamValue                     (Parm, ZeroConstructor, IsPlainOldData)

void UCustomMaterialModVisual::STATIC_ApplyScalarParam(const struct FName& MaterialSlotName, const struct FName& ParamName, float ParamValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CustomMaterialModVisual.ApplyScalarParam");

	UCustomMaterialModVisual_ApplyScalarParam_Params params;
	params.MaterialSlotName = MaterialSlotName;
	params.ParamName = ParamName;
	params.ParamValue = ParamValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CustomMaterialModVisual.Apply
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCustomMaterialModVisual::STATIC_Apply()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CustomMaterialModVisual.Apply");

	UCustomMaterialModVisual_Apply_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CustomModVisual.RemoveVisualsTrigger
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UCustomModVisual::STATIC_RemoveVisualsTrigger()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CustomModVisual.RemoveVisualsTrigger");

	UCustomModVisual_RemoveVisualsTrigger_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CustomModVisual.PermanentlyApplyVisualsTrigger
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UObject*                 NewTargetObject                (Parm, ZeroConstructor, IsPlainOldData)
// class USkeletalMeshComponent*  NewParentComponent             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bShouldWeld                    (Parm, ZeroConstructor, IsPlainOldData)

void UCustomModVisual::STATIC_PermanentlyApplyVisualsTrigger(class UObject* NewTargetObject, class USkeletalMeshComponent* NewParentComponent, bool bShouldWeld)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CustomModVisual.PermanentlyApplyVisualsTrigger");

	UCustomModVisual_PermanentlyApplyVisualsTrigger_Params params;
	params.NewTargetObject = NewTargetObject;
	params.NewParentComponent = NewParentComponent;
	params.bShouldWeld = bShouldWeld;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CustomModVisual.NewMeshAddedBP
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class USkeletalMeshComponent*  TargetParentComponent          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UMeshComponent*          MeshComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UCustomModVisual::STATIC_NewMeshAddedBP(class USkeletalMeshComponent* TargetParentComponent, class UMeshComponent* MeshComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CustomModVisual.NewMeshAddedBP");

	UCustomModVisual_NewMeshAddedBP_Params params;
	params.TargetParentComponent = TargetParentComponent;
	params.MeshComponent = MeshComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CustomModVisual.ApplyVisualsTrigger
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UObject*                 NewTargetObject                (Parm, ZeroConstructor, IsPlainOldData)
// class USkeletalMeshComponent*  NewParentComponent             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UCustomModVisual::STATIC_ApplyVisualsTrigger(class UObject* NewTargetObject, class USkeletalMeshComponent* NewParentComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CustomModVisual.ApplyVisualsTrigger");

	UCustomModVisual_ApplyVisualsTrigger_Params params;
	params.NewTargetObject = NewTargetObject;
	params.NewParentComponent = NewParentComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CustomModVisual.ApplyToNewMeshTrigger
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UMeshComponent*          NewMesh                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UCustomModVisual::STATIC_ApplyToNewMeshTrigger(class UMeshComponent* NewMesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CustomModVisual.ApplyToNewMeshTrigger");

	UCustomModVisual_ApplyToNewMeshTrigger_Params params;
	params.NewMesh = NewMesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.CustomModVisual.ApplyToNewMeshPermanentlyTrigger
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UMeshComponent*          NewMesh                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UCustomModVisual::STATIC_ApplyToNewMeshPermanentlyTrigger(class UMeshComponent* NewMesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.CustomModVisual.ApplyToNewMeshPermanentlyTrigger");

	UCustomModVisual_ApplyToNewMeshPermanentlyTrigger_Params params;
	params.NewMesh = NewMesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DeathBehavior.GetTargetMesh
// ()
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USkeletalMeshComponent* UDeathBehavior::GetTargetMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DeathBehavior.GetTargetMesh");

	UDeathBehavior_GetTargetMesh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.DeathBehavior.CustomTrigger
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDeathBehavior::STATIC_CustomTrigger()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DeathBehavior.CustomTrigger");

	UDeathBehavior_CustomTrigger_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DeathBehavior.CustomTick
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDeathBehavior::STATIC_CustomTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DeathBehavior.CustomTick");

	UDeathBehavior_CustomTick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DeathBehavior.Complete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDeathBehavior::STATIC_Complete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DeathBehavior.Complete");

	UDeathBehavior_Complete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DeathMenuWidget.OnQueryLatestSaveFinished
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  LatestSaveName                 (Parm, ZeroConstructor)
// bool                           bHasSaves                      (Parm, ZeroConstructor, IsPlainOldData)

void UDeathMenuWidget::STATIC_OnQueryLatestSaveFinished(const class FString& LatestSaveName, bool bHasSaves)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DeathMenuWidget.OnQueryLatestSaveFinished");

	UDeathMenuWidget_OnQueryLatestSaveFinished_Params params;
	params.LatestSaveName = LatestSaveName;
	params.bHasSaves = bHasSaves;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DeathMenuWidget.OnLoadComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  Filename                       (Parm, ZeroConstructor)
// ELoadGameResult                Result                         (Parm, ZeroConstructor, IsPlainOldData)

void UDeathMenuWidget::STATIC_OnLoadComplete(const class FString& Filename, ELoadGameResult Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DeathMenuWidget.OnLoadComplete");

	UDeathMenuWidget_OnLoadComplete_Params params;
	params.Filename = Filename;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DecisionTree.RunSuperDecisionTree
// ()
// Parameters:
// class AIndianaAiCharacter*     Owner                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   EventType                      (Parm, ZeroConstructor, IsPlainOldData)
// class UAIEventInfo*            EventInfo                      (Parm, ZeroConstructor, IsPlainOldData)
// EDecisionTreeRequestPriority   OutPriority                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// TArray<class UDecisionTreeRequestData*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UDecisionTreeRequestData*> UDecisionTree::RunSuperDecisionTree(class AIndianaAiCharacter* Owner, const struct FName& EventType, class UAIEventInfo* EventInfo, EDecisionTreeRequestPriority* OutPriority)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DecisionTree.RunSuperDecisionTree");

	UDecisionTree_RunSuperDecisionTree_Params params;
	params.Owner = Owner;
	params.EventType = EventType;
	params.EventInfo = EventInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutPriority != nullptr)
		*OutPriority = params.OutPriority;

	return params.ReturnValue;
}


// Function Indiana.DecisionTree.RunMetaDecisionTree
// (BlueprintCosmetic)
// Parameters:
// class UClass*                  DecisionTree                   (Parm, ZeroConstructor, IsPlainOldData)
// class AIndianaAiCharacter*     Owner                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   EventType                      (Parm, ZeroConstructor, IsPlainOldData)
// class UAIEventInfo*            EventInfo                      (Parm, ZeroConstructor, IsPlainOldData)
// EDecisionTreeRequestPriority   OutPriority                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// TArray<class UDecisionTreeRequestData*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UDecisionTreeRequestData*> UDecisionTree::RunMetaDecisionTree(class UClass* DecisionTree, class AIndianaAiCharacter* Owner, const struct FName& EventType, class UAIEventInfo* EventInfo, EDecisionTreeRequestPriority* OutPriority)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DecisionTree.RunMetaDecisionTree");

	UDecisionTree_RunMetaDecisionTree_Params params;
	params.DecisionTree = DecisionTree;
	params.Owner = Owner;
	params.EventType = EventType;
	params.EventInfo = EventInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutPriority != nullptr)
		*OutPriority = params.OutPriority;

	return params.ReturnValue;
}


// Function Indiana.DecisionTree.RunDecisionTree
// ()
// Parameters:
// class AIndianaAiCharacter*     Owner                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   EventType                      (Parm, ZeroConstructor, IsPlainOldData)
// class UAIEventInfo*            EventInfo                      (Parm, ZeroConstructor, IsPlainOldData)
// EDecisionTreeRequestPriority   OutPriority                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// TArray<class UDecisionTreeRequestData*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UDecisionTreeRequestData*> UDecisionTree::RunDecisionTree(class AIndianaAiCharacter* Owner, const struct FName& EventType, class UAIEventInfo* EventInfo, EDecisionTreeRequestPriority* OutPriority)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DecisionTree.RunDecisionTree");

	UDecisionTree_RunDecisionTree_Params params;
	params.Owner = Owner;
	params.EventType = EventType;
	params.EventInfo = EventInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutPriority != nullptr)
		*OutPriority = params.OutPriority;

	return params.ReturnValue;
}


// Function Indiana.DecisionTreeComponent.OnWeaponPreferenceChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EWeaponPreference              NewWeaponPreference            (Parm, ZeroConstructor, IsPlainOldData)
// EWeaponPreference              OldWeaponPreference            (Parm, ZeroConstructor, IsPlainOldData)

void UDecisionTreeComponent::STATIC_OnWeaponPreferenceChange(EWeaponPreference NewWeaponPreference, EWeaponPreference OldWeaponPreference)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DecisionTreeComponent.OnWeaponPreferenceChange");

	UDecisionTreeComponent_OnWeaponPreferenceChange_Params params;
	params.NewWeaponPreference = NewWeaponPreference;
	params.OldWeaponPreference = OldWeaponPreference;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DecisionTreeComponent.OnTether
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bCanceled                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 TetherReturnLocation           (Parm, ZeroConstructor, IsPlainOldData)

void UDecisionTreeComponent::STATIC_OnTether(bool bCanceled, const struct FVector& TetherReturnLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DecisionTreeComponent.OnTether");

	UDecisionTreeComponent_OnTether_Params params;
	params.bCanceled = bCanceled;
	params.TetherReturnLocation = TetherReturnLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DecisionTreeComponent.OnStatusEffectAdded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UStatusEffectManagerComponent* Sender                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UStatusEffect*           StatusEffect                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UDecisionTreeComponent::STATIC_OnStatusEffectAdded(class UStatusEffectManagerComponent* Sender, class UStatusEffect* StatusEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DecisionTreeComponent.OnStatusEffectAdded");

	UDecisionTreeComponent_OnStatusEffectAdded_Params params;
	params.Sender = Sender;
	params.StatusEffect = StatusEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DecisionTreeComponent.OnStateOfBeingChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EStateOfBeing                  NewStateOfBeing                (Parm, ZeroConstructor, IsPlainOldData)
// EStateOfBeing                  OldStateOfBeing                (Parm, ZeroConstructor, IsPlainOldData)

void UDecisionTreeComponent::STATIC_OnStateOfBeingChange(EStateOfBeing NewStateOfBeing, EStateOfBeing OldStateOfBeing)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DecisionTreeComponent.OnStateOfBeingChange");

	UDecisionTreeComponent_OnStateOfBeingChange_Params params;
	params.NewStateOfBeing = NewStateOfBeing;
	params.OldStateOfBeing = OldStateOfBeing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DecisionTreeComponent.OnStartTraverse
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ETraverseType                  TraverseType                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            NavLinkDirection               (Parm, ZeroConstructor, IsPlainOldData)
// class AReservableNavLink*      ReservableNavLink              (Parm, ZeroConstructor, IsPlainOldData)
// class ALadder*                 ClimbLadder                    (Parm, ZeroConstructor, IsPlainOldData)

void UDecisionTreeComponent::STATIC_OnStartTraverse(ETraverseType TraverseType, int NavLinkDirection, class AReservableNavLink* ReservableNavLink, class ALadder* ClimbLadder)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DecisionTreeComponent.OnStartTraverse");

	UDecisionTreeComponent_OnStartTraverse_Params params;
	params.TraverseType = TraverseType;
	params.NavLinkDirection = NavLinkDirection;
	params.ReservableNavLink = ReservableNavLink;
	params.ClimbLadder = ClimbLadder;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DecisionTreeComponent.OnScriptedBehaviorCall
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UAISettings_Behavior*    ScriptedBehavior               (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bInterruptible                 (Parm, ZeroConstructor, IsPlainOldData)

void UDecisionTreeComponent::STATIC_OnScriptedBehaviorCall(class UAISettings_Behavior* ScriptedBehavior, bool bInterruptible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DecisionTreeComponent.OnScriptedBehaviorCall");

	UDecisionTreeComponent_OnScriptedBehaviorCall_Params params;
	params.ScriptedBehavior = ScriptedBehavior;
	params.bInterruptible = bInterruptible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DecisionTreeComponent.OnReactiveRangeAction
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDecisionTreeComponent::STATIC_OnReactiveRangeAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DecisionTreeComponent.OnReactiveRangeAction");

	UDecisionTreeComponent_OnReactiveRangeAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DecisionTreeComponent.OnPlayerProximityChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bEnteredProximity              (Parm, ZeroConstructor, IsPlainOldData)

void UDecisionTreeComponent::STATIC_OnPlayerProximityChange(bool bEnteredProximity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DecisionTreeComponent.OnPlayerProximityChange");

	UDecisionTreeComponent_OnPlayerProximityChange_Params params;
	params.bEnteredProximity = bEnteredProximity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DecisionTreeComponent.OnPlayerConversationProximityChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bInProximity                   (Parm, ZeroConstructor, IsPlainOldData)

void UDecisionTreeComponent::STATIC_OnPlayerConversationProximityChange(bool bInProximity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DecisionTreeComponent.OnPlayerConversationProximityChange");

	UDecisionTreeComponent_OnPlayerConversationProximityChange_Params params;
	params.bInProximity = bInProximity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DecisionTreeComponent.OnPlayerConversationChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UConversationInstance*   Instance                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           bEntered                       (Parm, ZeroConstructor, IsPlainOldData)

void UDecisionTreeComponent::STATIC_OnPlayerConversationChange(class UConversationInstance* Instance, bool bEntered)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DecisionTreeComponent.OnPlayerConversationChange");

	UDecisionTreeComponent_OnPlayerConversationChange_Params params;
	params.Instance = Instance;
	params.bEntered = bEntered;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DecisionTreeComponent.OnNewTarget
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDecisionTreeComponent::STATIC_OnNewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DecisionTreeComponent.OnNewTarget");

	UDecisionTreeComponent_OnNewTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DecisionTreeComponent.OnNearbyInterestPoint
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UFurnitureComponent*     InterestPoint                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UDecisionTreeComponent::STATIC_OnNearbyInterestPoint(class UFurnitureComponent* InterestPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DecisionTreeComponent.OnNearbyInterestPoint");

	UDecisionTreeComponent_OnNearbyInterestPoint_Params params;
	params.InterestPoint = InterestPoint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DecisionTreeComponent.OnDefaultBehaviorChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UAISettings_Behavior*    NewDefaultBehavior             (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bFullReset                     (Parm, ZeroConstructor, IsPlainOldData)

void UDecisionTreeComponent::STATIC_OnDefaultBehaviorChange(class UAISettings_Behavior* NewDefaultBehavior, bool bFullReset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DecisionTreeComponent.OnDefaultBehaviorChange");

	UDecisionTreeComponent_OnDefaultBehaviorChange_Params params;
	params.NewDefaultBehavior = NewDefaultBehavior;
	params.bFullReset = bFullReset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DecisionTreeComponent.OnCombatStateChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bIsInCombat                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void UDecisionTreeComponent::STATIC_OnCombatStateChange(bool bIsInCombat, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DecisionTreeComponent.OnCombatStateChange");

	UDecisionTreeComponent_OnCombatStateChange_Params params;
	params.bIsInCombat = bIsInCombat;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DecisionTreeComponent.OnBehaviorPhaseChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            NewBehaviorPhase               (Parm, ZeroConstructor, IsPlainOldData)

void UDecisionTreeComponent::STATIC_OnBehaviorPhaseChange(int NewBehaviorPhase)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DecisionTreeComponent.OnBehaviorPhaseChange");

	UDecisionTreeComponent_OnBehaviorPhaseChange_Params params;
	params.NewBehaviorPhase = NewBehaviorPhase;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DecisionTreeComponent.OnAlertStateChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  TargetActor                    (Parm, ZeroConstructor, IsPlainOldData)
// EAlertState                    PreviousAlertState             (Parm, ZeroConstructor, IsPlainOldData)
// EAlertState                    TargetAlertState               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void UDecisionTreeComponent::STATIC_OnAlertStateChange(class AActor* TargetActor, EAlertState PreviousAlertState, EAlertState TargetAlertState, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DecisionTreeComponent.OnAlertStateChange");

	UDecisionTreeComponent_OnAlertStateChange_Params params;
	params.TargetActor = TargetActor;
	params.PreviousAlertState = PreviousAlertState;
	params.TargetAlertState = TargetAlertState;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DecisionTreeComponent.OnActionToggled
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ETogglableAction               Action                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bToggled                       (Parm, ZeroConstructor, IsPlainOldData)

void UDecisionTreeComponent::STATIC_OnActionToggled(ETogglableAction Action, bool bToggled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DecisionTreeComponent.OnActionToggled");

	UDecisionTreeComponent_OnActionToggled_Params params;
	params.Action = Action;
	params.bToggled = bToggled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DestructibleAudioComponent.Stop
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EDestructibleEventType         Type                           (Parm, ZeroConstructor, IsPlainOldData)

void UDestructibleAudioComponent::STATIC_Stop(EDestructibleEventType Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DestructibleAudioComponent.Stop");

	UDestructibleAudioComponent_Stop_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DestructibleAudioComponent.Play
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EDestructibleEventType         Type                           (Parm, ZeroConstructor, IsPlainOldData)

void UDestructibleAudioComponent::STATIC_Play(EDestructibleEventType Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DestructibleAudioComponent.Play");

	UDestructibleAudioComponent_Play_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DestructibleShoutComponent.OnDestructibleDestroyed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)

void UDestructibleShoutComponent::STATIC_OnDestructibleDestroyed(class AActor* Instigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DestructibleShoutComponent.OnDestructibleDestroyed");

	UDestructibleShoutComponent_OnDestructibleDestroyed_Params params;
	params.Instigator = Instigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DevelopmentFunctionality.ToggleTempVO
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDevelopmentFunctionality::STATIC_ToggleTempVO()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DevelopmentFunctionality.ToggleTempVO");

	UDevelopmentFunctionality_ToggleTempVO_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DevelopmentFunctionality.Task
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDevelopmentFunctionality::STATIC_Task()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DevelopmentFunctionality.Task");

	UDevelopmentFunctionality_Task_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DevelopmentFunctionality.StartInfoTracking
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          TrackRate                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bTrackStats                    (Parm, ZeroConstructor, IsPlainOldData)

void UDevelopmentFunctionality::STATIC_StartInfoTracking(float TrackRate, bool bTrackStats)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DevelopmentFunctionality.StartInfoTracking");

	UDevelopmentFunctionality_StartInfoTracking_Params params;
	params.TrackRate = TrackRate;
	params.bTrackStats = bTrackStats;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DevelopmentFunctionality.FlushLevelStreaming
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDevelopmentFunctionality::STATIC_FlushLevelStreaming()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DevelopmentFunctionality.FlushLevelStreaming");

	UDevelopmentFunctionality_FlushLevelStreaming_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DevelopmentFunctionality.FlushAsyncLoading
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDevelopmentFunctionality::STATIC_FlushAsyncLoading()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DevelopmentFunctionality.FlushAsyncLoading");

	UDevelopmentFunctionality_FlushAsyncLoading_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DevelopmentFunctionality.EndInfoTracking
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDevelopmentFunctionality::STATIC_EndInfoTracking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DevelopmentFunctionality.EndInfoTracking");

	UDevelopmentFunctionality_EndInfoTracking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DevelopmentFunctionality.DumpNameTable
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDevelopmentFunctionality::STATIC_DumpNameTable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DevelopmentFunctionality.DumpNameTable");

	UDevelopmentFunctionality_DumpNameTable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DevelopmentFunctionality.DebugDrawLightmapNamesSummary
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            LightmapTextureIndex           (Parm, ZeroConstructor, IsPlainOldData)
// float                          VolumeThreshold                (Parm, ZeroConstructor, IsPlainOldData)

void UDevelopmentFunctionality::STATIC_DebugDrawLightmapNamesSummary(float Duration, int LightmapTextureIndex, float VolumeThreshold)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DevelopmentFunctionality.DebugDrawLightmapNamesSummary");

	UDevelopmentFunctionality_DebugDrawLightmapNamesSummary_Params params;
	params.Duration = Duration;
	params.LightmapTextureIndex = LightmapTextureIndex;
	params.VolumeThreshold = VolumeThreshold;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DevelopmentFunctionality.DebugDrawLightmapNamesPerComponent
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            LightmapTextureIndex           (Parm, ZeroConstructor, IsPlainOldData)

void UDevelopmentFunctionality::STATIC_DebugDrawLightmapNamesPerComponent(float Duration, int LightmapTextureIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DevelopmentFunctionality.DebugDrawLightmapNamesPerComponent");

	UDevelopmentFunctionality_DebugDrawLightmapNamesPerComponent_Params params;
	params.Duration = Duration;
	params.LightmapTextureIndex = LightmapTextureIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DevelopmentFunctionality.DebugDrawLightmapInfo
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  LightmapName                   (Parm, ZeroConstructor)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void UDevelopmentFunctionality::STATIC_DebugDrawLightmapInfo(const class FString& LightmapName, float Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DevelopmentFunctionality.DebugDrawLightmapInfo");

	UDevelopmentFunctionality_DebugDrawLightmapInfo_Params params;
	params.LightmapName = LightmapName;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DevelopmentFunctionality.Crash
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDevelopmentFunctionality::STATIC_Crash()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DevelopmentFunctionality.Crash");

	UDevelopmentFunctionality_Crash_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DevelopmentFunctionality.CharacterMemReport
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDevelopmentFunctionality::STATIC_CharacterMemReport()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DevelopmentFunctionality.CharacterMemReport");

	UDevelopmentFunctionality_CharacterMemReport_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DevelopmentFunctionality.Bug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDevelopmentFunctionality::STATIC_Bug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DevelopmentFunctionality.Bug");

	UDevelopmentFunctionality_Bug_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DialogBoxWidget.SetNewBackingMaterialHeight
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          NewHeight                      (Parm, ZeroConstructor, IsPlainOldData)

void UDialogBoxWidget::STATIC_SetNewBackingMaterialHeight(float NewHeight)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DialogBoxWidget.SetNewBackingMaterialHeight");

	UDialogBoxWidget_SetNewBackingMaterialHeight_Params params;
	params.NewHeight = NewHeight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DialogBoxWidget.OnInputConfirm
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDialogBoxWidget::STATIC_OnInputConfirm()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DialogBoxWidget.OnInputConfirm");

	UDialogBoxWidget_OnInputConfirm_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DialogBoxWidget.OnInputBack
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDialogBoxWidget::STATIC_OnInputBack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DialogBoxWidget.OnInputBack");

	UDialogBoxWidget_OnInputBack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DialogBoxWidget.OnInputAbort
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDialogBoxWidget::STATIC_OnInputAbort()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DialogBoxWidget.OnInputAbort");

	UDialogBoxWidget_OnInputAbort_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DialogWarningBoxWidget.OnInputConfirm
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDialogWarningBoxWidget::STATIC_OnInputConfirm()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DialogWarningBoxWidget.OnInputConfirm");

	UDialogWarningBoxWidget_OnInputConfirm_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DialogWarningBoxWidget.OnInputBack
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDialogWarningBoxWidget::STATIC_OnInputBack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DialogWarningBoxWidget.OnInputBack");

	UDialogWarningBoxWidget_OnInputBack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DifficultyManager.SetSurvivalMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           IsSurvivalMode                 (Parm, ZeroConstructor, IsPlainOldData)

void UDifficultyManager::STATIC_SetSurvivalMode(bool IsSurvivalMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DifficultyManager.SetSurvivalMode");

	UDifficultyManager_SetSurvivalMode_Params params;
	params.IsSurvivalMode = IsSurvivalMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DifficultyManager.SetDifficulty
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EGameDifficulty                NewDifficulty                  (Parm, ZeroConstructor, IsPlainOldData)

void UDifficultyManager::STATIC_SetDifficulty(EGameDifficulty NewDifficulty)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DifficultyManager.SetDifficulty");

	UDifficultyManager_SetDifficulty_Params params;
	params.NewDifficulty = NewDifficulty;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DifficultyManager.GetGameDifficulty
// ()
// Parameters:
// EGameDifficulty                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EGameDifficulty UDifficultyManager::GetGameDifficulty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DifficultyManager.GetGameDifficulty");

	UDifficultyManager_GetGameDifficulty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.DifficultySelectWidget.ValueChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UUserSetting*            UserSetting                    (Parm, ZeroConstructor, IsPlainOldData)

void UDifficultySelectWidget::STATIC_ValueChanged(class UUserSetting* UserSetting)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DifficultySelectWidget.ValueChanged");

	UDifficultySelectWidget_ValueChanged_Params params;
	params.UserSetting = UserSetting;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DifficultySelectWidget.TrasitionToSubtitleComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDifficultySelectWidget::STATIC_TrasitionToSubtitleComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DifficultySelectWidget.TrasitionToSubtitleComplete");

	UDifficultySelectWidget_TrasitionToSubtitleComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DifficultySelectWidget.TransitionToDifficultyComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDifficultySelectWidget::STATIC_TransitionToDifficultyComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DifficultySelectWidget.TransitionToDifficultyComplete");

	UDifficultySelectWidget_TransitionToDifficultyComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DifficultySelectWidget.StartTransitionToSubtitleFromDifficulty
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDifficultySelectWidget::STATIC_StartTransitionToSubtitleFromDifficulty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DifficultySelectWidget.StartTransitionToSubtitleFromDifficulty");

	UDifficultySelectWidget_StartTransitionToSubtitleFromDifficulty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DifficultySelectWidget.StartTransitionToDifficultyFromSubtitle
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDifficultySelectWidget::STATIC_StartTransitionToDifficultyFromSubtitle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DifficultySelectWidget.StartTransitionToDifficultyFromSubtitle");

	UDifficultySelectWidget_StartTransitionToDifficultyFromSubtitle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DisguiseMeterWidget.UpdateDisguiseMeterInnerAnim
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            CurrentFrame                   (Parm, ZeroConstructor, IsPlainOldData)

void UDisguiseMeterWidget::STATIC_UpdateDisguiseMeterInnerAnim(int CurrentFrame)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DisguiseMeterWidget.UpdateDisguiseMeterInnerAnim");

	UDisguiseMeterWidget_UpdateDisguiseMeterInnerAnim_Params params;
	params.CurrentFrame = CurrentFrame;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DisguiseMeterWidget.UpdateDisguiseMeterFill
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          NewValue                       (Parm, ZeroConstructor, IsPlainOldData)

void UDisguiseMeterWidget::STATIC_UpdateDisguiseMeterFill(float NewValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DisguiseMeterWidget.UpdateDisguiseMeterFill");

	UDisguiseMeterWidget_UpdateDisguiseMeterFill_Params params;
	params.NewValue = NewValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DisguiseMeterWidget.ShowDisguiseMeterTip
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          StartTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UDisguiseMeterWidget::STATIC_ShowDisguiseMeterTip(float StartTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DisguiseMeterWidget.ShowDisguiseMeterTip");

	UDisguiseMeterWidget_ShowDisguiseMeterTip_Params params;
	params.StartTime = StartTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DisguiseMeterWidget.OnRestrictedAreaExited
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class ARestrictedArea*         RestrictedArea                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UDisguiseMeterWidget::STATIC_OnRestrictedAreaExited(class ARestrictedArea* RestrictedArea)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DisguiseMeterWidget.OnRestrictedAreaExited");

	UDisguiseMeterWidget_OnRestrictedAreaExited_Params params;
	params.RestrictedArea = RestrictedArea;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DisguiseMeterWidget.OnHUDVisibilityChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void UDisguiseMeterWidget::STATIC_OnHUDVisibilityChanged(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DisguiseMeterWidget.OnHUDVisibilityChanged");

	UDisguiseMeterWidget_OnHUDVisibilityChanged_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DisguiseMeterWidget.OnEnterRestrictedAreaWithoutDisguise
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UDisguiseData*           Disguise                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           bMissingShroud                 (Parm, ZeroConstructor, IsPlainOldData)

void UDisguiseMeterWidget::STATIC_OnEnterRestrictedAreaWithoutDisguise(class UDisguiseData* Disguise, bool bMissingShroud)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DisguiseMeterWidget.OnEnterRestrictedAreaWithoutDisguise");

	UDisguiseMeterWidget_OnEnterRestrictedAreaWithoutDisguise_Params params;
	params.Disguise = Disguise;
	params.bMissingShroud = bMissingShroud;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DisguiseMeterWidget.OnDisguiseUnequipped
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDisguiseMeterWidget::STATIC_OnDisguiseUnequipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DisguiseMeterWidget.OnDisguiseUnequipped");

	UDisguiseMeterWidget_OnDisguiseUnequipped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DisguiseMeterWidget.OnDisguiseRefilled
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDisguiseMeterWidget::STATIC_OnDisguiseRefilled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DisguiseMeterWidget.OnDisguiseRefilled");

	UDisguiseMeterWidget_OnDisguiseRefilled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DisguiseMeterWidget.OnDisguiseMeterVisibilityChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void UDisguiseMeterWidget::STATIC_OnDisguiseMeterVisibilityChanged(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DisguiseMeterWidget.OnDisguiseMeterVisibilityChanged");

	UDisguiseMeterWidget_OnDisguiseMeterVisibilityChanged_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DisguiseMeterWidget.OnDisguiseMeterChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          NewValue                       (Parm, ZeroConstructor, IsPlainOldData)

void UDisguiseMeterWidget::STATIC_OnDisguiseMeterChanged(float NewValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DisguiseMeterWidget.OnDisguiseMeterChanged");

	UDisguiseMeterWidget_OnDisguiseMeterChanged_Params params;
	params.NewValue = NewValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DisguiseMeterWidget.OnDisguiseImageLoaded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDisguiseMeterWidget::STATIC_OnDisguiseImageLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DisguiseMeterWidget.OnDisguiseImageLoaded");

	UDisguiseMeterWidget_OnDisguiseImageLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DisguiseMeterWidget.OnDisguiseFailure
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDisguiseMeterWidget::STATIC_OnDisguiseFailure()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DisguiseMeterWidget.OnDisguiseFailure");

	UDisguiseMeterWidget_OnDisguiseFailure_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DisguiseMeterWidget.OnDisguiseEquipped
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UDisguiseData*           Disguise                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UDisguiseMeterWidget::STATIC_OnDisguiseEquipped(class UDisguiseData* Disguise)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DisguiseMeterWidget.OnDisguiseEquipped");

	UDisguiseMeterWidget_OnDisguiseEquipped_Params params;
	params.Disguise = Disguise;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DisguiseMeterWidget.OnDisguiseEnd
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDisguiseMeterWidget::STATIC_OnDisguiseEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DisguiseMeterWidget.OnDisguiseEnd");

	UDisguiseMeterWidget_OnDisguiseEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DisguiseMeterWidget.OnDisguiseBegin
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UDisguiseMeterWidget::STATIC_OnDisguiseBegin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DisguiseMeterWidget.OnDisguiseBegin");

	UDisguiseMeterWidget_OnDisguiseBegin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DisguiseMeterWidget.HideDisguiseMeterTip
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          StartTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UDisguiseMeterWidget::STATIC_HideDisguiseMeterTip(float StartTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DisguiseMeterWidget.HideDisguiseMeterTip");

	UDisguiseMeterWidget_HideDisguiseMeterTip_Params params;
	params.StartTime = StartTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DLCManager.OnGlobalVarChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  VariableName                   (Parm, ZeroConstructor)
// int                            NewValue                       (Parm, ZeroConstructor, IsPlainOldData)

void UDLCManager::STATIC_OnGlobalVarChanged(const class FString& VariableName, int NewValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DLCManager.OnGlobalVarChanged");

	UDLCManager_OnGlobalVarChanged_Params params;
	params.VariableName = VariableName;
	params.NewValue = NewValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DLCManager.IsINX2Installed
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDLCManager::IsINX2Installed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DLCManager.IsINX2Installed");

	UDLCManager_IsINX2Installed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.DLCManager.IsINX1Installed
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDLCManager::IsINX1Installed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DLCManager.IsINX1Installed");

	UDLCManager_IsINX1Installed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Door.TriggersTravel
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADoor::TriggersTravel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Door.TriggersTravel");

	ADoor_TriggersTravel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Door.OnOCLStateChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EOCLState                      PreviousState                  (Parm, ZeroConstructor, IsPlainOldData)
// EOCLState                      CurrentState                   (Parm, ZeroConstructor, IsPlainOldData)

void ADoor::STATIC_OnOCLStateChange(EOCLState PreviousState, EOCLState CurrentState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Door.OnOCLStateChange");

	ADoor_OnOCLStateChange_Params params;
	params.PreviousState = PreviousState;
	params.CurrentState = CurrentState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DragContainerWidget.OnOperationDrop
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UDragDropOperation*      Operation                      (Parm, ZeroConstructor, IsPlainOldData)

void UDragContainerWidget::STATIC_OnOperationDrop(class UDragDropOperation* Operation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DragContainerWidget.OnOperationDrop");

	UDragContainerWidget_OnOperationDrop_Params params;
	params.Operation = Operation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DragContainerWidget.OnOperationDragCancelled
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UDragDropOperation*      Operation                      (Parm, ZeroConstructor, IsPlainOldData)

void UDragContainerWidget::STATIC_OnOperationDragCancelled(class UDragDropOperation* Operation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DragContainerWidget.OnOperationDragCancelled");

	UDragContainerWidget_OnOperationDragCancelled_Params params;
	params.Operation = Operation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DragContainerWidget.OnDragStarted
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UIndianaDragDropOperation* Operation                      (Parm, ZeroConstructor, IsPlainOldData)

void UDragContainerWidget::STATIC_OnDragStarted(class UIndianaDragDropOperation* Operation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DragContainerWidget.OnDragStarted");

	UDragContainerWidget_OnDragStarted_Params params;
	params.Operation = Operation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DragContainerWidget.OnDragGroupStarted
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UIndianaDragDropOperation* Operation                      (Parm, ZeroConstructor, IsPlainOldData)

void UDragContainerWidget::STATIC_OnDragGroupStarted(class UIndianaDragDropOperation* Operation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DragContainerWidget.OnDragGroupStarted");

	UDragContainerWidget_OnDragGroupStarted_Params params;
	params.Operation = Operation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DragContainerWidget.OnDragGroupDrop
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UIndianaDragDropOperation* Operation                      (Parm, ZeroConstructor, IsPlainOldData)

void UDragContainerWidget::STATIC_OnDragGroupDrop(class UIndianaDragDropOperation* Operation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DragContainerWidget.OnDragGroupDrop");

	UDragContainerWidget_OnDragGroupDrop_Params params;
	params.Operation = Operation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DragContainerWidget.OnDragGroupCancelled
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UIndianaDragDropOperation* Operation                      (Parm, ZeroConstructor, IsPlainOldData)

void UDragContainerWidget::STATIC_OnDragGroupCancelled(class UIndianaDragDropOperation* Operation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DragContainerWidget.OnDragGroupCancelled");

	UDragContainerWidget_OnDragGroupCancelled_Params params;
	params.Operation = Operation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DragContainerWidget.OnDragConfirmDrop
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UIndianaDragDropOperation* Operation                      (Parm, ZeroConstructor, IsPlainOldData)

void UDragContainerWidget::STATIC_OnDragConfirmDrop(class UIndianaDragDropOperation* Operation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DragContainerWidget.OnDragConfirmDrop");

	UDragContainerWidget_OnDragConfirmDrop_Params params;
	params.Operation = Operation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DynamicTOD.WeatherTimelineUpdateReverse
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          CurrentWeatherAmount           (Parm, ZeroConstructor, IsPlainOldData)
// float                          CurrentMaterialWetness         (Parm, ZeroConstructor, IsPlainOldData)

void ADynamicTOD::STATIC_WeatherTimelineUpdateReverse(float CurrentWeatherAmount, float CurrentMaterialWetness)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DynamicTOD.WeatherTimelineUpdateReverse");

	ADynamicTOD_WeatherTimelineUpdateReverse_Params params;
	params.CurrentWeatherAmount = CurrentWeatherAmount;
	params.CurrentMaterialWetness = CurrentMaterialWetness;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DynamicTOD.WeatherTimelineUpdateForward
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          CurrentWeatherAmount           (Parm, ZeroConstructor, IsPlainOldData)
// float                          CurrentMaterialWetness         (Parm, ZeroConstructor, IsPlainOldData)

void ADynamicTOD::STATIC_WeatherTimelineUpdateForward(float CurrentWeatherAmount, float CurrentMaterialWetness)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DynamicTOD.WeatherTimelineUpdateForward");

	ADynamicTOD_WeatherTimelineUpdateForward_Params params;
	params.CurrentWeatherAmount = CurrentWeatherAmount;
	params.CurrentMaterialWetness = CurrentMaterialWetness;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.DynamicTOD.GetWeatherWwiseStateName
// ()
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName ADynamicTOD::GetWeatherWwiseStateName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DynamicTOD.GetWeatherWwiseStateName");

	ADynamicTOD_GetWeatherWwiseStateName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.DynamicTOD.GetWeatherParticleSystem
// ()
// Parameters:
// class UParticleSystem*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UParticleSystem* ADynamicTOD::GetWeatherParticleSystem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DynamicTOD.GetWeatherParticleSystem");

	ADynamicTOD_GetWeatherParticleSystem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.DynamicTOD.ForceUpdate
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void ADynamicTOD::STATIC_ForceUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.DynamicTOD.ForceUpdate");

	ADynamicTOD_ForceUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Elevator.SetCurrentFloor
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            FloorIndex                     (Parm, ZeroConstructor, IsPlainOldData)

void AElevator::STATIC_SetCurrentFloor(int FloorIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Elevator.SetCurrentFloor");

	AElevator_SetCurrentFloor_Params params;
	params.FloorIndex = FloorIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Elevator.OnStartMoveExternalDoors
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            DestinationFloor               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromStationary                (Parm, ZeroConstructor, IsPlainOldData)

void AElevator::STATIC_OnStartMoveExternalDoors(int DestinationFloor, bool bFromStationary)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Elevator.OnStartMoveExternalDoors");

	AElevator_OnStartMoveExternalDoors_Params params;
	params.DestinationFloor = DestinationFloor;
	params.bFromStationary = bFromStationary;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Elevator.OnEndMoveExternalDoors
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            DestinationFloor               (Parm, ZeroConstructor, IsPlainOldData)

void AElevator::STATIC_OnEndMoveExternalDoors(int DestinationFloor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Elevator.OnEndMoveExternalDoors");

	AElevator_OnEndMoveExternalDoors_Params params;
	params.DestinationFloor = DestinationFloor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Elevator.IsStationary
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AElevator::IsStationary()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Elevator.IsStationary");

	AElevator_IsStationary_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Elevator.IsMoving
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AElevator::IsMoving()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Elevator.IsMoving");

	AElevator_IsMoving_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Elevator.GetTargetFloor
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AElevator::GetTargetFloor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Elevator.GetTargetFloor");

	AElevator_GetTargetFloor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Elevator.GetCurrentFloor
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AElevator::GetCurrentFloor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Elevator.GetCurrentFloor");

	AElevator_GetCurrentFloor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ElevatorAudioComponent.Stop
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EElevatorEventType             Type                           (Parm, ZeroConstructor, IsPlainOldData)

void UElevatorAudioComponent::STATIC_Stop(EElevatorEventType Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ElevatorAudioComponent.Stop");

	UElevatorAudioComponent_Stop_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ElevatorAudioComponent.Play
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EElevatorEventType             Type                           (Parm, ZeroConstructor, IsPlainOldData)

void UElevatorAudioComponent::STATIC_Play(EElevatorEventType Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ElevatorAudioComponent.Play");

	UElevatorAudioComponent_Play_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ElevatorDisableStatusEffect.OnElevatorMoveEnd
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            DestinationFloor               (Parm, ZeroConstructor, IsPlainOldData)

void UElevatorDisableStatusEffect::STATIC_OnElevatorMoveEnd(int DestinationFloor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ElevatorDisableStatusEffect.OnElevatorMoveEnd");

	UElevatorDisableStatusEffect_OnElevatorMoveEnd_Params params;
	params.DestinationFloor = DestinationFloor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Encounter.SetEncounterEnabled
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void AEncounter::STATIC_SetEncounterEnabled(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Encounter.SetEncounterEnabled");

	AEncounter_SetEncounterEnabled_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Encounter.ResetActivationFailed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AEncounter::STATIC_ResetActivationFailed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Encounter.ResetActivationFailed");

	AEncounter_ResetActivationFailed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Encounter.RefreshEncounter
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AEncounter::STATIC_RefreshEncounter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Encounter.RefreshEncounter");

	AEncounter_RefreshEncounter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Encounter.OnNodeBeginSpawning
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class ASpawnNodeBase*          Node                           (Parm, ZeroConstructor, IsPlainOldData)

void AEncounter::STATIC_OnNodeBeginSpawning(class ASpawnNodeBase* Node)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Encounter.OnNodeBeginSpawning");

	AEncounter_OnNodeBeginSpawning_Params params;
	params.Node = Node;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Encounter.OnNodeActorSpawned
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class ASpawnNodeBase*          Node                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDamageable                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFirstSpawn                    (Parm, ZeroConstructor, IsPlainOldData)

void AEncounter::STATIC_OnNodeActorSpawned(class ASpawnNodeBase* Node, bool bDamageable, bool bFirstSpawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Encounter.OnNodeActorSpawned");

	AEncounter_OnNodeActorSpawned_Params params;
	params.Node = Node;
	params.bDamageable = bDamageable;
	params.bFirstSpawn = bFirstSpawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Encounter.OnNodeActorKilled
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class ASpawnNodeBase*          Node                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFirstKill                     (Parm, ZeroConstructor, IsPlainOldData)

void AEncounter::STATIC_OnNodeActorKilled(class ASpawnNodeBase* Node, bool bFirstKill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Encounter.OnNodeActorKilled");

	AEncounter_OnNodeActorKilled_Params params;
	params.Node = Node;
	params.bFirstKill = bFirstKill;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Encounter.OnNodeActorDespawned
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class ASpawnNodeBase*          Node                           (Parm, ZeroConstructor, IsPlainOldData)

void AEncounter::STATIC_OnNodeActorDespawned(class ASpawnNodeBase* Node)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Encounter.OnNodeActorDespawned");

	AEncounter_OnNodeActorDespawned_Params params;
	params.Node = Node;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Encounter.OnNodeActorDamaged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class ASpawnNodeBase*          Node                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FCauseDamageInfo        CauseDamageInfo                (ConstParm, Parm, OutParm, ReferenceParm)

void AEncounter::STATIC_OnNodeActorDamaged(class ASpawnNodeBase* Node, const struct FCauseDamageInfo& CauseDamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Encounter.OnNodeActorDamaged");

	AEncounter_OnNodeActorDamaged_Params params;
	params.Node = Node;
	params.CauseDamageInfo = CauseDamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Encounter.OnNodeActorCombatState
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class ASpawnNodeBase*          Node                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInCombat                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void AEncounter::STATIC_OnNodeActorCombatState(class ASpawnNodeBase* Node, bool bInCombat, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Encounter.OnNodeActorCombatState");

	AEncounter_OnNodeActorCombatState_Params params;
	params.Node = Node;
	params.bInCombat = bInCombat;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Encounter.OnNodeActorAwareOfPlayer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class ASpawnNodeBase*          Node                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void AEncounter::STATIC_OnNodeActorAwareOfPlayer(class ASpawnNodeBase* Node, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Encounter.OnNodeActorAwareOfPlayer");

	AEncounter_OnNodeActorAwareOfPlayer_Params params;
	params.Node = Node;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Encounter.OnNodeActorAlertState
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class ASpawnNodeBase*          Node                           (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  TargetActor                    (Parm, ZeroConstructor, IsPlainOldData)
// EAlertState                    State                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void AEncounter::STATIC_OnNodeActorAlertState(class ASpawnNodeBase* Node, class AActor* TargetActor, EAlertState State, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Encounter.OnNodeActorAlertState");

	AEncounter_OnNodeActorAlertState_Params params;
	params.Node = Node;
	params.TargetActor = TargetActor;
	params.State = State;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Encounter.OnActivationEndOverlap
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  OverlappedActor                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)

void AEncounter::STATIC_OnActivationEndOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Encounter.OnActivationEndOverlap");

	AEncounter_OnActivationEndOverlap_Params params;
	params.OverlappedActor = OverlappedActor;
	params.OtherActor = OtherActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Encounter.OnActivationBeginOverlap
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  OverlappedActor                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)

void AEncounter::STATIC_OnActivationBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Encounter.OnActivationBeginOverlap");

	AEncounter_OnActivationBeginOverlap_Params params;
	params.OverlappedActor = OverlappedActor;
	params.OtherActor = OtherActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Encounter.IterateThroughSpawnedActors
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FScriptDelegate         GenericFunctionCall            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void AEncounter::STATIC_IterateThroughSpawnedActors(const struct FScriptDelegate& GenericFunctionCall)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Encounter.IterateThroughSpawnedActors");

	AEncounter_IterateThroughSpawnedActors_Params params;
	params.GenericFunctionCall = GenericFunctionCall;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Encounter.IsEncounterActive
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AEncounter::IsEncounterActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Encounter.IsEncounterActive");

	AEncounter_IsEncounterActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Encounter.HasEncounterCompleted
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AEncounter::HasEncounterCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Encounter.HasEncounterCompleted");

	AEncounter_HasEncounterCompleted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Encounter.ForceDeactivateEncounter
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AEncounter::STATIC_ForceDeactivateEncounter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Encounter.ForceDeactivateEncounter");

	AEncounter_ForceDeactivateEncounter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Encounter.DeactivateEncounter
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AEncounter::STATIC_DeactivateEncounter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Encounter.DeactivateEncounter");

	AEncounter_DeactivateEncounter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Encounter.ActivateEncounter
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AEncounter::STATIC_ActivateEncounter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Encounter.ActivateEncounter");

	AEncounter_ActivateEncounter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EnemyScannerComponent.TimeDilationStart
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UEnemyScannerComponent::STATIC_TimeDilationStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EnemyScannerComponent.TimeDilationStart");

	UEnemyScannerComponent_TimeDilationStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EnemyScannerComponent.TimeDilationEnd
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void UEnemyScannerComponent::STATIC_TimeDilationEnd(float Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EnemyScannerComponent.TimeDilationEnd");

	UEnemyScannerComponent_TimeDilationEnd_Params params;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EnemyScannerWidget.ScanEnded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UEnemyScannerWidget::STATIC_ScanEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EnemyScannerWidget.ScanEnded");

	UEnemyScannerWidget_ScanEnded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EnemyScannerWidget.ScanCompleted
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UEnemyScannerWidget::STATIC_ScanCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EnemyScannerWidget.ScanCompleted");

	UEnemyScannerWidget_ScanCompleted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.WeaponAdvanceLevelDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            NumLevels                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIgnoreCost                    (Parm, ZeroConstructor, IsPlainOldData)

void UEquipmentComponent::STATIC_WeaponAdvanceLevelDebug(int NumLevels, bool bIgnoreCost)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.WeaponAdvanceLevelDebug");

	UEquipmentComponent_WeaponAdvanceLevelDebug_Params params;
	params.NumLevels = NumLevels;
	params.bIgnoreCost = bIgnoreCost;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.UnholsterWeapon
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EHolsterRequestSource          InSource                       (Parm, ZeroConstructor, IsPlainOldData)

void UEquipmentComponent::STATIC_UnholsterWeapon(EHolsterRequestSource InSource)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.UnholsterWeapon");

	UEquipmentComponent_UnholsterWeapon_Params params;
	params.InSource = InSource;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.UnequipAllModsDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UEquipmentComponent::STATIC_UnequipAllModsDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.UnequipAllModsDebug");

	UEquipmentComponent_UnequipAllModsDebug_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.SetWeaponLevel
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            Level                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bOverrideWeaponLevels          (Parm, ZeroConstructor, IsPlainOldData)

void UEquipmentComponent::STATIC_SetWeaponLevel(int Level, bool bOverrideWeaponLevels)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.SetWeaponLevel");

	UEquipmentComponent_SetWeaponLevel_Params params;
	params.Level = Level;
	params.bOverrideWeaponLevels = bOverrideWeaponLevels;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.SetCalledShotWeaponLevel
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            Level                          (Parm, ZeroConstructor, IsPlainOldData)

void UEquipmentComponent::STATIC_SetCalledShotWeaponLevel(int Level)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.SetCalledShotWeaponLevel");

	UEquipmentComponent_SetCalledShotWeaponLevel_Params params;
	params.Level = Level;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.SetArmorLevel
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            Level                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bOverrideArmorLevels           (Parm, ZeroConstructor, IsPlainOldData)

void UEquipmentComponent::STATIC_SetArmorLevel(int Level, bool bOverrideArmorLevels)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.SetArmorLevel");

	UEquipmentComponent_SetArmorLevel_Params params;
	params.Level = Level;
	params.bOverrideArmorLevels = bOverrideArmorLevels;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.OnUnlockAbilityChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EUnlockAbility                 Ability                        (Parm, ZeroConstructor, IsPlainOldData)

void UEquipmentComponent::STATIC_OnUnlockAbilityChanged(EUnlockAbility Ability)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.OnUnlockAbilityChanged");

	UEquipmentComponent_OnUnlockAbilityChanged_Params params;
	params.Ability = Ability;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.OnUnequipDisguise
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UEquipmentComponent::STATIC_OnUnequipDisguise()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.OnUnequipDisguise");

	UEquipmentComponent_OnUnequipDisguise_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.OnStopClimb
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UEquipmentComponent::STATIC_OnStopClimb()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.OnStopClimb");

	UEquipmentComponent_OnStopClimb_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.OnStatUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class URpgStat*                Stat                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UEquipmentComponent::STATIC_OnStatUpdated(class URpgStat* Stat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.OnStatUpdated");

	UEquipmentComponent_OnStatUpdated_Params params;
	params.Stat = Stat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.OnStartUnholsterWeapon
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UEquipmentComponent::STATIC_OnStartUnholsterWeapon(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.OnStartUnholsterWeapon");

	UEquipmentComponent_OnStartUnholsterWeapon_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.OnStartUnequipWeapon
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UEquipmentComponent::STATIC_OnStartUnequipWeapon(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.OnStartUnequipWeapon");

	UEquipmentComponent_OnStartUnequipWeapon_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.OnStartReloadWeapon
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UEquipmentComponent::STATIC_OnStartReloadWeapon(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.OnStartReloadWeapon");

	UEquipmentComponent_OnStartReloadWeapon_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.OnStartHolsterWeapon
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UEquipmentComponent::STATIC_OnStartHolsterWeapon(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.OnStartHolsterWeapon");

	UEquipmentComponent_OnStartHolsterWeapon_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.OnStartEquipWeapon
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UEquipmentComponent::STATIC_OnStartEquipWeapon(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.OnStartEquipWeapon");

	UEquipmentComponent_OnStartEquipWeapon_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.OnStartClimb
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UEquipmentComponent::STATIC_OnStartClimb()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.OnStartClimb");

	UEquipmentComponent_OnStartClimb_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.OnMedKitUsed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            ConsumeablesUsed               (Parm, ZeroConstructor, IsPlainOldData)

void UEquipmentComponent::STATIC_OnMedKitUsed(int ConsumeablesUsed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.OnMedKitUsed");

	UEquipmentComponent_OnMedKitUsed_Params params;
	params.ConsumeablesUsed = ConsumeablesUsed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.OnItemRemovedFromInventory
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)

void UEquipmentComponent::STATIC_OnItemRemovedFromInventory(const struct FItemStack& ItemStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.OnItemRemovedFromInventory");

	UEquipmentComponent_OnItemRemovedFromInventory_Params params;
	params.ItemStack = ItemStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.OnItemAddedToInventory
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)

void UEquipmentComponent::STATIC_OnItemAddedToInventory(const struct FItemStack& ItemStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.OnItemAddedToInventory");

	UEquipmentComponent_OnItemAddedToInventory_Params params;
	params.ItemStack = ItemStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.OnEquipDisguise
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UDisguiseData*           Disguise                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UEquipmentComponent::STATIC_OnEquipDisguise(class UDisguiseData* Disguise)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.OnEquipDisguise");

	UEquipmentComponent_OnEquipDisguise_Params params;
	params.Disguise = Disguise;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.OnEndUnholsterWeapon
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UEquipmentComponent::STATIC_OnEndUnholsterWeapon(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.OnEndUnholsterWeapon");

	UEquipmentComponent_OnEndUnholsterWeapon_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.OnEndUnequipWeapon
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UEquipmentComponent::STATIC_OnEndUnequipWeapon(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.OnEndUnequipWeapon");

	UEquipmentComponent_OnEndUnequipWeapon_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.OnEndReloadWeapon
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UEquipmentComponent::STATIC_OnEndReloadWeapon(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.OnEndReloadWeapon");

	UEquipmentComponent_OnEndReloadWeapon_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.OnEndHolsterWeapon
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UEquipmentComponent::STATIC_OnEndHolsterWeapon(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.OnEndHolsterWeapon");

	UEquipmentComponent_OnEndHolsterWeapon_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.OnEndEquipWeapon
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UEquipmentComponent::STATIC_OnEndEquipWeapon(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.OnEndEquipWeapon");

	UEquipmentComponent_OnEndEquipWeapon_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.LoadAmmoDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   AmmoName                       (Parm, ZeroConstructor, IsPlainOldData)

void UEquipmentComponent::STATIC_LoadAmmoDebug(const struct FName& AmmoName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.LoadAmmoDebug");

	UEquipmentComponent_LoadAmmoDebug_Params params;
	params.AmmoName = AmmoName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.HolsterWeapon
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EHolsterRequestSource          InSource                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInstantHolster                (Parm, ZeroConstructor, IsPlainOldData)

void UEquipmentComponent::STATIC_HolsterWeapon(EHolsterRequestSource InSource, bool bInstantHolster)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.HolsterWeapon");

	UEquipmentComponent_HolsterWeapon_Params params;
	params.InSource = InSource;
	params.bInstantHolster = bInstantHolster;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.GetEquippedWeapon
// ()
// Parameters:
// class UWeapon*                 ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWeapon* UEquipmentComponent::GetEquippedWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.GetEquippedWeapon");

	UEquipmentComponent_GetEquippedWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.EquipmentComponent.EquipWeaponMicroModDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   MicroModName                   (Parm, ZeroConstructor, IsPlainOldData)

void UEquipmentComponent::STATIC_EquipWeaponMicroModDebug(const struct FName& MicroModName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.EquipWeaponMicroModDebug");

	UEquipmentComponent_EquipWeaponMicroModDebug_Params params;
	params.MicroModName = MicroModName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.EquipWeaponFromSlot
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// uint32_t                       SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInstantEquip                  (Parm, ZeroConstructor, IsPlainOldData)

void UEquipmentComponent::STATIC_EquipWeaponFromSlot(uint32_t SlotIndex, bool bInstantEquip)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.EquipWeaponFromSlot");

	UEquipmentComponent_EquipWeaponFromSlot_Params params;
	params.SlotIndex = SlotIndex;
	params.bInstantEquip = bInstantEquip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.EquipWeaponDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   WeaponName                     (Parm, ZeroConstructor, IsPlainOldData)

void UEquipmentComponent::STATIC_EquipWeaponDebug(const struct FName& WeaponName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.EquipWeaponDebug");

	UEquipmentComponent_EquipWeaponDebug_Params params;
	params.WeaponName = WeaponName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.EquipWeapon
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeapon*                 WeaponToEquip                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bInstantEquip                  (Parm, ZeroConstructor, IsPlainOldData)

void UEquipmentComponent::STATIC_EquipWeapon(class UWeapon* WeaponToEquip, bool bInstantEquip)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.EquipWeapon");

	UEquipmentComponent_EquipWeapon_Params params;
	params.WeaponToEquip = WeaponToEquip;
	params.bInstantEquip = bInstantEquip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.EquipPreviousWeapon
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UEquipmentComponent::STATIC_EquipPreviousWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.EquipPreviousWeapon");

	UEquipmentComponent_EquipPreviousWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.EquipModDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   ModName                        (Parm, ZeroConstructor, IsPlainOldData)

void UEquipmentComponent::STATIC_EquipModDebug(const struct FName& ModName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.EquipModDebug");

	UEquipmentComponent_EquipModDebug_Params params;
	params.ModName = ModName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.EquipDefaultWeapon
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UEquipmentComponent::STATIC_EquipDefaultWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.EquipDefaultWeapon");

	UEquipmentComponent_EquipDefaultWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.EquipArmorSetMicroModDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   MicroModName                   (Parm, ZeroConstructor, IsPlainOldData)

void UEquipmentComponent::STATIC_EquipArmorSetMicroModDebug(const struct FName& MicroModName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.EquipArmorSetMicroModDebug");

	UEquipmentComponent_EquipArmorSetMicroModDebug_Params params;
	params.MicroModName = MicroModName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.EquipArmorModByClassDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EArmorModSlot                  ArmorModSlot                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ArmorModItem                   (Parm, ZeroConstructor, IsPlainOldData)

void UEquipmentComponent::STATIC_EquipArmorModByClassDebug(EArmorModSlot ArmorModSlot, class UClass* ArmorModItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.EquipArmorModByClassDebug");

	UEquipmentComponent_EquipArmorModByClassDebug_Params params;
	params.ArmorModSlot = ArmorModSlot;
	params.ArmorModItem = ArmorModItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.EquipArmorDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   ArmorName                      (Parm, ZeroConstructor, IsPlainOldData)

void UEquipmentComponent::STATIC_EquipArmorDebug(const struct FName& ArmorName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.EquipArmorDebug");

	UEquipmentComponent_EquipArmorDebug_Params params;
	params.ArmorName = ArmorName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EquipmentComponent.EquipArmorByClassDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EArmorSlot                     ArmorSlot                      (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ArmorItem                      (Parm, ZeroConstructor, IsPlainOldData)

void UEquipmentComponent::STATIC_EquipArmorByClassDebug(EArmorSlot ArmorSlot, class UClass* ArmorItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EquipmentComponent.EquipArmorByClassDebug");

	UEquipmentComponent_EquipArmorByClassDebug_Params params;
	params.ArmorSlot = ArmorSlot;
	params.ArmorItem = ArmorItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnKillListener.OnKill
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Victim                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FCauseDamageInfo        CauseDamageInfo                (ConstParm, Parm, OutParm, ReferenceParm)

void UOnKillListener::STATIC_OnKill(class AActor* Victim, const struct FCauseDamageInfo& CauseDamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnKillListener.OnKill");

	UOnKillListener_OnKill_Params params;
	params.Victim = Victim;
	params.CauseDamageInfo = CauseDamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnCompanionKillListener.OnKill
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Victim                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FCauseDamageInfo        CauseDamageInfo                (ConstParm, Parm, OutParm, ReferenceParm)

void UOnCompanionKillListener::STATIC_OnKill(class AActor* Victim, const struct FCauseDamageInfo& CauseDamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnCompanionKillListener.OnKill");

	UOnCompanionKillListener_OnKill_Params params;
	params.Victim = Victim;
	params.CauseDamageInfo = CauseDamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnKillTurnToAshListener.OnKill
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Victim                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DmgType                        (Parm, ZeroConstructor, IsPlainOldData)

void UOnKillTurnToAshListener::STATIC_OnKill(class AActor* Victim, class UClass* DmgType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnKillTurnToAshListener.OnKill");

	UOnKillTurnToAshListener_OnKill_Params params;
	params.Victim = Victim;
	params.DmgType = DmgType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnCompanionRegistrationChanged.OnCompanionRegistrationChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnCompanionRegistrationChanged::STATIC_OnCompanionRegistrationChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnCompanionRegistrationChanged.OnCompanionRegistrationChanged");

	UOnCompanionRegistrationChanged_OnCompanionRegistrationChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnCompanionRegistrationAdded.OnCompanionRegistrationAdded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnCompanionRegistrationAdded::STATIC_OnCompanionRegistrationAdded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnCompanionRegistrationAdded.OnCompanionRegistrationAdded");

	UOnCompanionRegistrationAdded_OnCompanionRegistrationAdded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnAttackComplete.OnAttackComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            AttackID                       (Parm, ZeroConstructor, IsPlainOldData)

void UOnAttackComplete::STATIC_OnAttackComplete(int AttackID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnAttackComplete.OnAttackComplete");

	UOnAttackComplete_OnAttackComplete_Params params;
	params.AttackID = AttackID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnCausedDamage.OnCauseDamage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FCauseDamageInfo        CauseDamageInfo                (ConstParm, Parm, OutParm, ReferenceParm)

void UOnCausedDamage::STATIC_OnCauseDamage(const struct FCauseDamageInfo& CauseDamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnCausedDamage.OnCauseDamage");

	UOnCausedDamage_OnCauseDamage_Params params;
	params.CauseDamageInfo = CauseDamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnReceiveDamage.OnDamageEvent
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FCauseDamageInfo        CauseDamageInfo                (ConstParm, Parm, OutParm, ReferenceParm)

void UOnReceiveDamage::STATIC_OnDamageEvent(const struct FCauseDamageInfo& CauseDamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnReceiveDamage.OnDamageEvent");

	UOnReceiveDamage_OnDamageEvent_Params params;
	params.CauseDamageInfo = CauseDamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnReceiveFallingDamage.OnFallingDamage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)

void UOnReceiveFallingDamage::STATIC_OnFallingDamage(float Damage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnReceiveFallingDamage.OnFallingDamage");

	UOnReceiveFallingDamage_OnFallingDamage_Params params;
	params.Damage = Damage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnMeleeHit.OnMeleeHit
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// TArray<class AActor*>          HitActors                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)

void UOnMeleeHit::STATIC_OnMeleeHit(TArray<class AActor*> HitActors, class UWeapon* Weapon, float Damage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnMeleeHit.OnMeleeHit");

	UOnMeleeHit_OnMeleeHit_Params params;
	params.HitActors = HitActors;
	params.Weapon = Weapon;
	params.Damage = Damage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnMeleeActionStart.OnMeleeActionStart
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EMeleeAction                   ActionStarted                  (Parm, ZeroConstructor, IsPlainOldData)

void UOnMeleeActionStart::STATIC_OnMeleeActionStart(EMeleeAction ActionStarted)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnMeleeActionStart.OnMeleeActionStart");

	UOnMeleeActionStart_OnMeleeActionStart_Params params;
	params.ActionStarted = ActionStarted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnMeleeActionEnd.OnMeleeActionEnd
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EMeleeAction                   ActionEnded                    (Parm, ZeroConstructor, IsPlainOldData)

void UOnMeleeActionEnd::STATIC_OnMeleeActionEnd(EMeleeAction ActionEnded)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnMeleeActionEnd.OnMeleeActionEnd");

	UOnMeleeActionEnd_OnMeleeActionEnd_Params params;
	params.ActionEnded = ActionEnded;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnSpellCast.OnSpellCast
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UClass*                  Spell                          (Parm, ZeroConstructor, IsPlainOldData)

void UOnSpellCast::STATIC_OnSpellCast(class UClass* Spell)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnSpellCast.OnSpellCast");

	UOnSpellCast_OnSpellCast_Params params;
	params.Spell = Spell;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnSpellRemoved.OnSpellRemoved
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UClass*                  RemovedSpell                   (Parm, ZeroConstructor, IsPlainOldData)

void UOnSpellRemoved::STATIC_OnSpellRemoved(class UClass* RemovedSpell)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnSpellRemoved.OnSpellRemoved");

	UOnSpellRemoved_OnSpellRemoved_Params params;
	params.RemovedSpell = RemovedSpell;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnBlockStart.OnBlockStart
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnBlockStart::STATIC_OnBlockStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnBlockStart.OnBlockStart");

	UOnBlockStart_OnBlockStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnBlockEnd.OnBlockEnd
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnBlockEnd::STATIC_OnBlockEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnBlockEnd.OnBlockEnd");

	UOnBlockEnd_OnBlockEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnPerfectBlock.OnPerfectBlockEvent
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaCharacter*       Attacker                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)

void UOnPerfectBlock::STATIC_OnPerfectBlockEvent(class AIndianaCharacter* Attacker, float Damage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnPerfectBlock.OnPerfectBlockEvent");

	UOnPerfectBlock_OnPerfectBlockEvent_Params params;
	params.Attacker = Attacker;
	params.Damage = Damage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnBlockedHit.OnBlockedHitEvent
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bIsMeleeHit                    (Parm, ZeroConstructor, IsPlainOldData)

void UOnBlockedHit::STATIC_OnBlockedHitEvent(bool bIsMeleeHit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnBlockedHit.OnBlockedHitEvent");

	UOnBlockedHit_OnBlockedHitEvent_Params params;
	params.bIsMeleeHit = bIsMeleeHit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnDetected.OnDetectedEvent
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Detector                       (Parm, ZeroConstructor, IsPlainOldData)

void UOnDetected::STATIC_OnDetectedEvent(class AActor* Detector)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnDetected.OnDetectedEvent");

	UOnDetected_OnDetectedEvent_Params params;
	params.Detector = Detector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnIndividualDetected.OnIndividualUnDetectedEvent
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaAiCharacter*     Detector                       (Parm, ZeroConstructor, IsPlainOldData)

void UOnIndividualDetected::STATIC_OnIndividualUnDetectedEvent(class AIndianaAiCharacter* Detector)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnIndividualDetected.OnIndividualUnDetectedEvent");

	UOnIndividualDetected_OnIndividualUnDetectedEvent_Params params;
	params.Detector = Detector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnIndividualDetected.OnIndividualDetectedEvent
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaAiCharacter*     Detector                       (Parm, ZeroConstructor, IsPlainOldData)

void UOnIndividualDetected::STATIC_OnIndividualDetectedEvent(class AIndianaAiCharacter* Detector)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnIndividualDetected.OnIndividualDetectedEvent");

	UOnIndividualDetected_OnIndividualDetectedEvent_Params params;
	params.Detector = Detector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnPlayerMoveStart.OnPlayerMoveStart
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnPlayerMoveStart::STATIC_OnPlayerMoveStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnPlayerMoveStart.OnPlayerMoveStart");

	UOnPlayerMoveStart_OnPlayerMoveStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnPlayerMoveEnd.OnPlayerMoveEnd
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnPlayerMoveEnd::STATIC_OnPlayerMoveEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnPlayerMoveEnd.OnPlayerMoveEnd");

	UOnPlayerMoveEnd_OnPlayerMoveEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnDodgeEvent.OnDodge
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EDodgeDirection                Direction                      (Parm, ZeroConstructor, IsPlainOldData)

void UOnDodgeEvent::STATIC_OnDodge(EDodgeDirection Direction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnDodgeEvent.OnDodge");

	UOnDodgeEvent_OnDodge_Params params;
	params.Direction = Direction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnStatusEffectAddedEvent.OnAddStatusEffect
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UStatusEffectManagerComponent* Sender                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UStatusEffect*           StatusEffectAdded              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UOnStatusEffectAddedEvent::STATIC_OnAddStatusEffect(class UStatusEffectManagerComponent* Sender, class UStatusEffect* StatusEffectAdded)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnStatusEffectAddedEvent.OnAddStatusEffect");

	UOnStatusEffectAddedEvent_OnAddStatusEffect_Params params;
	params.Sender = Sender;
	params.StatusEffectAdded = StatusEffectAdded;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnStatusEffectRemovedEvent.OnStatusEffectRemoved
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UStatusEffectManagerComponent* Sender                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UStatusEffect*           StatusEffectRemoved            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UOnStatusEffectRemovedEvent::STATIC_OnStatusEffectRemoved(class UStatusEffectManagerComponent* Sender, class UStatusEffect* StatusEffectRemoved)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnStatusEffectRemovedEvent.OnStatusEffectRemoved");

	UOnStatusEffectRemovedEvent_OnStatusEffectRemoved_Params params;
	params.Sender = Sender;
	params.StatusEffectRemoved = StatusEffectRemoved;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnNumHostileStatusEffects.OnStatusEffectRemoved
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UStatusEffectManagerComponent* Sender                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UStatusEffect*           StatusEffectRemoved            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UOnNumHostileStatusEffects::STATIC_OnStatusEffectRemoved(class UStatusEffectManagerComponent* Sender, class UStatusEffect* StatusEffectRemoved)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnNumHostileStatusEffects.OnStatusEffectRemoved");

	UOnNumHostileStatusEffects_OnStatusEffectRemoved_Params params;
	params.Sender = Sender;
	params.StatusEffectRemoved = StatusEffectRemoved;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnNumHostileStatusEffects.OnStatusEffectAdded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UStatusEffectManagerComponent* Sender                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UStatusEffect*           StatusEffectAdded              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UOnNumHostileStatusEffects::STATIC_OnStatusEffectAdded(class UStatusEffectManagerComponent* Sender, class UStatusEffect* StatusEffectAdded)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnNumHostileStatusEffects.OnStatusEffectAdded");

	UOnNumHostileStatusEffects_OnStatusEffectAdded_Params params;
	params.Sender = Sender;
	params.StatusEffectAdded = StatusEffectAdded;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.HasStatusEffectsEvent.OnAddStatusEffect
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UStatusEffectManagerComponent* Sender                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UStatusEffect*           StatusEffectAdded              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UHasStatusEffectsEvent::STATIC_OnAddStatusEffect(class UStatusEffectManagerComponent* Sender, class UStatusEffect* StatusEffectAdded)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HasStatusEffectsEvent.OnAddStatusEffect");

	UHasStatusEffectsEvent_OnAddStatusEffect_Params params;
	params.Sender = Sender;
	params.StatusEffectAdded = StatusEffectAdded;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnSkillUsedEvent.OnSkillUsed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ESkill                         SkillUsed                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)

void UOnSkillUsedEvent::STATIC_OnSkillUsed(ESkill SkillUsed, class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnSkillUsedEvent.OnSkillUsed");

	UOnSkillUsedEvent_OnSkillUsed_Params params;
	params.SkillUsed = SkillUsed;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnSkillEndedEvent.OnSkillEnded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ESkill                         SkillUsed                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)

void UOnSkillEndedEvent::STATIC_OnSkillEnded(ESkill SkillUsed, class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnSkillEndedEvent.OnSkillEnded");

	UOnSkillEndedEvent_OnSkillEnded_Params params;
	params.SkillUsed = SkillUsed;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnSkillCheckSuccess.OnSkillCheckSuccess
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EXPGainReason                  Reason                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            XPEarned                       (Parm, ZeroConstructor, IsPlainOldData)
// ESkill                         SkillUsed                      (Parm, ZeroConstructor, IsPlainOldData)

void UOnSkillCheckSuccess::STATIC_OnSkillCheckSuccess(EXPGainReason Reason, int XPEarned, ESkill SkillUsed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnSkillCheckSuccess.OnSkillCheckSuccess");

	UOnSkillCheckSuccess_OnSkillCheckSuccess_Params params;
	params.Reason = Reason;
	params.XPEarned = XPEarned;
	params.SkillUsed = SkillUsed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnItemConsumed.OnItemConsumed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)

void UOnItemConsumed::STATIC_OnItemConsumed(const struct FItemStack& ItemStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnItemConsumed.OnItemConsumed");

	UOnItemConsumed_OnItemConsumed_Params params;
	params.ItemStack = ItemStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnSpendMoney.OnMoneySpent
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            Money                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bVendorInteraction             (Parm, ZeroConstructor, IsPlainOldData)

void UOnSpendMoney::STATIC_OnMoneySpent(int Money, bool bVendorInteraction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnSpendMoney.OnMoneySpent");

	UOnSpendMoney_OnMoneySpent_Params params;
	params.Money = Money;
	params.bVendorInteraction = bVendorInteraction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnPickPocket.OnPickPocket
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)

void UOnPickPocket::STATIC_OnPickPocket(class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnPickPocket.OnPickPocket");

	UOnPickPocket_OnPickPocket_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnPickPocketStart.OnPickPocket
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)

void UOnPickPocketStart::STATIC_OnPickPocket(class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnPickPocketStart.OnPickPocket");

	UOnPickPocketStart_OnPickPocket_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnPickPocketEnd.OnPickPocket
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)

void UOnPickPocketEnd::STATIC_OnPickPocket(class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnPickPocketEnd.OnPickPocket");

	UOnPickPocketEnd_OnPickPocket_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ReputationListener.OnReputationChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UFactionData*            FactionData                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// EReputationType                InReputationType               (Parm, ZeroConstructor, IsPlainOldData)
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData)
// class UReputationData*         ReputationBefore               (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UReputationData*         ReputationAfter                (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UReputationListener::STATIC_OnReputationChange(class UFactionData* FactionData, EReputationType InReputationType, int Amount, class UReputationData* ReputationBefore, class UReputationData* ReputationAfter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ReputationListener.OnReputationChange");

	UReputationListener_OnReputationChange_Params params;
	params.FactionData = FactionData;
	params.InReputationType = InReputationType;
	params.Amount = Amount;
	params.ReputationBefore = ReputationBefore;
	params.ReputationAfter = ReputationAfter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnPartyChange.OnPartyChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaAiCharacter*     Companion                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAdded                         (Parm, ZeroConstructor, IsPlainOldData)

void UOnPartyChange::STATIC_OnPartyChanged(class AIndianaAiCharacter* Companion, bool bAdded)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnPartyChange.OnPartyChanged");

	UOnPartyChange_OnPartyChanged_Params params;
	params.Companion = Companion;
	params.bAdded = bAdded;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnPerfectDodge.OnPerfectDodge
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Attacker                       (Parm, ZeroConstructor, IsPlainOldData)

void UOnPerfectDodge::STATIC_OnPerfectDodge(class AActor* Attacker)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnPerfectDodge.OnPerfectDodge");

	UOnPerfectDodge_OnPerfectDodge_Params params;
	params.Attacker = Attacker;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnBehaviorStateChange.OnBehaviorStateEvent
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EBehaviorState                 InBehaviorState                (Parm, ZeroConstructor, IsPlainOldData)
// EBehaviorStateEventType        InEventType                    (Parm, ZeroConstructor, IsPlainOldData)

void UOnBehaviorStateChange::STATIC_OnBehaviorStateEvent(EBehaviorState InBehaviorState, EBehaviorStateEventType InEventType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnBehaviorStateChange.OnBehaviorStateEvent");

	UOnBehaviorStateChange_OnBehaviorStateEvent_Params params;
	params.InBehaviorState = InBehaviorState;
	params.InEventType = InEventType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnCalledShotCameraChange.OnCameraStepEvent
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ECalledShotCameraStep          CameraStep                     (Parm, ZeroConstructor, IsPlainOldData)

void UOnCalledShotCameraChange::STATIC_OnCameraStepEvent(ECalledShotCameraStep CameraStep)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnCalledShotCameraChange.OnCameraStepEvent");

	UOnCalledShotCameraChange_OnCameraStepEvent_Params params;
	params.CameraStep = CameraStep;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnHealthPercentage.OnHealthChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          HealthChange                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)

void UOnHealthPercentage::STATIC_OnHealthChanged(float HealthChange, class AActor* Instigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnHealthPercentage.OnHealthChanged");

	UOnHealthPercentage_OnHealthChanged_Params params;
	params.HealthChange = HealthChange;
	params.Instigator = Instigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnCompanionKilled.OnCompanionKilled
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Companion                      (Parm, ZeroConstructor, IsPlainOldData)

void UOnCompanionKilled::STATIC_OnCompanionKilled(class AActor* Companion)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnCompanionKilled.OnCompanionKilled");

	UOnCompanionKilled_OnCompanionKilled_Params params;
	params.Companion = Companion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnCinematicModeChange.OnCinematicModeChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bCinematicMode                 (Parm, ZeroConstructor, IsPlainOldData)

void UOnCinematicModeChange::STATIC_OnCinematicModeChange(bool bCinematicMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnCinematicModeChange.OnCinematicModeChange");

	UOnCinematicModeChange_OnCinematicModeChange_Params params;
	params.bCinematicMode = bCinematicMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnMedKitUsed.OnMedKitUsed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            ConsumablesUsed                (Parm, ZeroConstructor, IsPlainOldData)

void UOnMedKitUsed::STATIC_OnMedKitUsed(int ConsumablesUsed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnMedKitUsed.OnMedKitUsed");

	UOnMedKitUsed_OnMedKitUsed_Params params;
	params.ConsumablesUsed = ConsumablesUsed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnRestrictedAreaEntered.OnRestrictedAreaEntered
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class ARestrictedArea*         RestrictedArea                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UOnRestrictedAreaEntered::STATIC_OnRestrictedAreaEntered(class ARestrictedArea* RestrictedArea)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnRestrictedAreaEntered.OnRestrictedAreaEntered");

	UOnRestrictedAreaEntered_OnRestrictedAreaEntered_Params params;
	params.RestrictedArea = RestrictedArea;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnRestrictedAreaExited.OnRestrictedAreaExited
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class ARestrictedArea*         RestrictedArea                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UOnRestrictedAreaExited::STATIC_OnRestrictedAreaExited(class ARestrictedArea* RestrictedArea)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnRestrictedAreaExited.OnRestrictedAreaExited");

	UOnRestrictedAreaExited_OnRestrictedAreaExited_Params params;
	params.RestrictedArea = RestrictedArea;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnAcrophobiaEnabled.OnAcrophobiaChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bNowEnabled                    (Parm, ZeroConstructor, IsPlainOldData)

void UOnAcrophobiaEnabled::STATIC_OnAcrophobiaChanged(bool bNowEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnAcrophobiaEnabled.OnAcrophobiaChanged");

	UOnAcrophobiaEnabled_OnAcrophobiaChanged_Params params;
	params.bNowEnabled = bNowEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnTactialTimeDialationStart.OnTacticalTimeDilationStart
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnTactialTimeDialationStart::STATIC_OnTacticalTimeDilationStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnTactialTimeDialationStart.OnTacticalTimeDilationStart");

	UOnTactialTimeDialationStart_OnTacticalTimeDilationStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnTactialTimeDialationEnd.OnTacticalTimeDilationEnd
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void UOnTactialTimeDialationEnd::STATIC_OnTacticalTimeDilationEnd(float Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnTactialTimeDialationEnd.OnTacticalTimeDilationEnd");

	UOnTactialTimeDialationEnd_OnTacticalTimeDilationEnd_Params params;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnResurrect.OnNewStateOfBeing
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EStateOfBeing                  NewStateOfBeing                (Parm, ZeroConstructor, IsPlainOldData)
// EStateOfBeing                  OldStateOfBeing                (Parm, ZeroConstructor, IsPlainOldData)

void UOnResurrect::STATIC_OnNewStateOfBeing(EStateOfBeing NewStateOfBeing, EStateOfBeing OldStateOfBeing)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnResurrect.OnNewStateOfBeing");

	UOnResurrect_OnNewStateOfBeing_Params params;
	params.NewStateOfBeing = NewStateOfBeing;
	params.OldStateOfBeing = OldStateOfBeing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnRest.OnRest
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnRest::STATIC_OnRest()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnRest.OnRest");

	UOnRest_OnRest_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnInteractableSelectionChanged.OnInteractableSelectionChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FInteractionDescription Description                    (ConstParm, Parm, OutParm, ReferenceParm)

void UOnInteractableSelectionChanged::STATIC_OnInteractableSelectionChanged(const struct FInteractionDescription& Description)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnInteractableSelectionChanged.OnInteractableSelectionChanged");

	UOnInteractableSelectionChanged_OnInteractableSelectionChanged_Params params;
	params.Description = Description;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnStatUpdated.OnStatUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class URpgStat*                Stat                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UOnStatUpdated::STATIC_OnStatUpdated(class URpgStat* Stat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnStatUpdated.OnStatUpdated");

	UOnStatUpdated_OnStatUpdated_Params params;
	params.Stat = Stat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnSkillUpdated.OnSkillUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ESkill                         Skill                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            NewValue                       (Parm, ZeroConstructor, IsPlainOldData)

void UOnSkillUpdated::STATIC_OnSkillUpdated(ESkill Skill, int NewValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnSkillUpdated.OnSkillUpdated");

	UOnSkillUpdated_OnSkillUpdated_Params params;
	params.Skill = Skill;
	params.NewValue = NewValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnOccupiedElevatorMove.OnOccupiedElevatorMove
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AElevator*               Elevator                       (Parm, ZeroConstructor, IsPlainOldData)

void UOnOccupiedElevatorMove::STATIC_OnOccupiedElevatorMove(class AElevator* Elevator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnOccupiedElevatorMove.OnOccupiedElevatorMove");

	UOnOccupiedElevatorMove_OnOccupiedElevatorMove_Params params;
	params.Elevator = Elevator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnAnimationSpellTrigger.OnAnimationTriggered
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGameplayTag            TriggerType                    (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UOnAnimationSpellTrigger::STATIC_OnAnimationTriggered(const struct FGameplayTag& TriggerType, bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnAnimationSpellTrigger.OnAnimationTriggered");

	UOnAnimationSpellTrigger_OnAnimationTriggered_Params params;
	params.TriggerType = TriggerType;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnJump.OnJump
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnJump::STATIC_OnJump()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnJump.OnJump");

	UOnJump_OnJump_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnLanded.OnLanded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          FallDistance                   (Parm, ZeroConstructor, IsPlainOldData)

void UOnLanded::STATIC_OnLanded(float FallDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnLanded.OnLanded");

	UOnLanded_OnLanded_Params params;
	params.FallDistance = FallDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnTTDMeterPercentage.OnTTDMeterChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UOnTTDMeterPercentage::STATIC_OnTTDMeterChanged(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnTTDMeterPercentage.OnTTDMeterChanged");

	UOnTTDMeterPercentage_OnTTDMeterChanged_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnSprintStart.OnSprintStarted
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnSprintStart::STATIC_OnSprintStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnSprintStart.OnSprintStarted");

	UOnSprintStart_OnSprintStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnSprintEnd.OnSprintEnded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnSprintEnd::STATIC_OnSprintEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnSprintEnd.OnSprintEnded");

	UOnSprintEnd_OnSprintEnded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnPlayerFirstAttacked.OnFirstAttacked
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Attacker                       (Parm, ZeroConstructor, IsPlainOldData)

void UOnPlayerFirstAttacked::STATIC_OnFirstAttacked(class AActor* Attacker)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnPlayerFirstAttacked.OnFirstAttacked");

	UOnPlayerFirstAttacked_OnFirstAttacked_Params params;
	params.Attacker = Attacker;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnPlayerFirstAttack.OnFirstAttack
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)

void UOnPlayerFirstAttack::STATIC_OnFirstAttack(class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnPlayerFirstAttack.OnFirstAttack");

	UOnPlayerFirstAttack_OnFirstAttack_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnStateOfBeingChanged.OnStateOfBeingChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EStateOfBeing                  NewStateOfBeing                (Parm, ZeroConstructor, IsPlainOldData)
// EStateOfBeing                  OldStateOfBeing                (Parm, ZeroConstructor, IsPlainOldData)

void UOnStateOfBeingChanged::STATIC_OnStateOfBeingChanged(EStateOfBeing NewStateOfBeing, EStateOfBeing OldStateOfBeing)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnStateOfBeingChanged.OnStateOfBeingChanged");

	UOnStateOfBeingChanged_OnStateOfBeingChanged_Params params;
	params.NewStateOfBeing = NewStateOfBeing;
	params.OldStateOfBeing = OldStateOfBeing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnObjectBumped.OnBumped
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  SelfActor                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UOnObjectBumped::STATIC_OnBumped(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnObjectBumped.OnBumped");

	UOnObjectBumped_OnBumped_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnCombatStateChange.OnCombatStateChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bInCombat                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void UOnCombatStateChange::STATIC_OnCombatStateChange(bool bInCombat, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnCombatStateChange.OnCombatStateChange");

	UOnCombatStateChange_OnCombatStateChange_Params params;
	params.bInCombat = bInCombat;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnGetUp.OnGetUp
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bInBegan                       (Parm, ZeroConstructor, IsPlainOldData)

void UOnGetUp::STATIC_OnGetUp(bool bInBegan)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnGetUp.OnGetUp");

	UOnGetUp_OnGetUp_Params params;
	params.bInBegan = bInBegan;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnPlayerConversationChange.OnPlayerConversationChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UConversationInstance*   Instance                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInEntered                     (Parm, ZeroConstructor, IsPlainOldData)

void UOnPlayerConversationChange::STATIC_OnPlayerConversationChange(class UConversationInstance* Instance, bool bInEntered)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnPlayerConversationChange.OnPlayerConversationChange");

	UOnPlayerConversationChange_OnPlayerConversationChange_Params params;
	params.Instance = Instance;
	params.bInEntered = bInEntered;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnAddictionTimerEntersMaxed.OnAddictionTimerEntersMaxed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGameplayTag            TimerTag                       (Parm)

void UOnAddictionTimerEntersMaxed::STATIC_OnAddictionTimerEntersMaxed(const struct FGameplayTag& TimerTag)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnAddictionTimerEntersMaxed.OnAddictionTimerEntersMaxed");

	UOnAddictionTimerEntersMaxed_OnAddictionTimerEntersMaxed_Params params;
	params.TimerTag = TimerTag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnAddictionTimerLeavesMaxed.OnAddictionTimerLeavesMaxed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGameplayTag            TimerTag                       (Parm)

void UOnAddictionTimerLeavesMaxed::STATIC_OnAddictionTimerLeavesMaxed(const struct FGameplayTag& TimerTag)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnAddictionTimerLeavesMaxed.OnAddictionTimerLeavesMaxed");

	UOnAddictionTimerLeavesMaxed_OnAddictionTimerLeavesMaxed_Params params;
	params.TimerTag = TimerTag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnSellItemNumBits.OnVectorTransaction
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            BuyingBalance                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            SellingBalance                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            RepairingBalance               (Parm, ZeroConstructor, IsPlainOldData)
// struct FItemStackSplit         ItemStackSplit                 (Parm, OutParm)

void UOnSellItemNumBits::STATIC_OnVectorTransaction(int BuyingBalance, int SellingBalance, int RepairingBalance, struct FItemStackSplit* ItemStackSplit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnSellItemNumBits.OnVectorTransaction");

	UOnSellItemNumBits_OnVectorTransaction_Params params;
	params.BuyingBalance = BuyingBalance;
	params.SellingBalance = SellingBalance;
	params.RepairingBalance = RepairingBalance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (ItemStackSplit != nullptr)
		*ItemStackSplit = params.ItemStackSplit;
}


// Function Indiana.OnFlawAccepted.OnFlawAccepted
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UClass*                  Flaw                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void UOnFlawAccepted::STATIC_OnFlawAccepted(class UClass* Flaw, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnFlawAccepted.OnFlawAccepted");

	UOnFlawAccepted_OnFlawAccepted_Params params;
	params.Flaw = Flaw;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnLevelChangedListener.OnLevelChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            Level                          (Parm, ZeroConstructor, IsPlainOldData)

void UOnLevelChangedListener::STATIC_OnLevelChanged(int Level)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnLevelChangedListener.OnLevelChanged");

	UOnLevelChangedListener_OnLevelChanged_Params params;
	params.Level = Level;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnItemTinkered.OnItemTinkered
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnItemTinkered::STATIC_OnItemTinkered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnItemTinkered.OnItemTinkered");

	UOnItemTinkered_OnItemTinkered_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnEncumberedChange.OnEncumberedChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bInEncumbered                  (Parm, ZeroConstructor, IsPlainOldData)

void UOnEncumberedChange::STATIC_OnEncumberedChange(bool bInEncumbered)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnEncumberedChange.OnEncumberedChange");

	UOnEncumberedChange_OnEncumberedChange_Params params;
	params.bInEncumbered = bInEncumbered;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnStartCrouch.OnCrouch
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnStartCrouch::STATIC_OnCrouch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnStartCrouch.OnCrouch");

	UOnStartCrouch_OnCrouch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnStopCrouch.OnStopCrouch
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnStopCrouch::STATIC_OnStopCrouch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnStopCrouch.OnStopCrouch");

	UOnStopCrouch_OnStopCrouch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnInterrogateStartEvent.OnStartInterrogation
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnInterrogateStartEvent::STATIC_OnStartInterrogation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnInterrogateStartEvent.OnStartInterrogation");

	UOnInterrogateStartEvent_OnStartInterrogation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnGroinHit.OnGroinHit
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnGroinHit::STATIC_OnGroinHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnGroinHit.OnGroinHit");

	UOnGroinHit_OnGroinHit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnPatientNKill.OnPatientNKill
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnPatientNKill::STATIC_OnPatientNKill()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnPatientNKill.OnPatientNKill");

	UOnPatientNKill_OnPatientNKill_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnMadScientistKill.OnMadScientistKill
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnMadScientistKill::STATIC_OnMadScientistKill()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnMadScientistKill.OnMadScientistKill");

	UOnMadScientistKill_OnMadScientistKill_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnBrandsMatch.OnBrandsMatch
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnBrandsMatch::STATIC_OnBrandsMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnBrandsMatch.OnBrandsMatch");

	UOnBrandsMatch_OnBrandsMatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnSharpDressed.OnSharpDressed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnSharpDressed::STATIC_OnSharpDressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnSharpDressed.OnSharpDressed");

	UOnSharpDressed_OnSharpDressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnSpecialPETBenefits.OnSpecialPETBenefits
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnSpecialPETBenefits::STATIC_OnSpecialPETBenefits()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnSpecialPETBenefits.OnSpecialPETBenefits");

	UOnSpecialPETBenefits_OnSpecialPETBenefits_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnUdderGatlingNeedler.OnUdderGatlingNeedler
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnUdderGatlingNeedler::STATIC_OnUdderGatlingNeedler()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnUdderGatlingNeedler.OnUdderGatlingNeedler");

	UOnUdderGatlingNeedler_OnUdderGatlingNeedler_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnElementalMaelstrom.OnElementalMaelstrom
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnElementalMaelstrom::STATIC_OnElementalMaelstrom()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnElementalMaelstrom.OnElementalMaelstrom");

	UOnElementalMaelstrom_OnElementalMaelstrom_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnInterrogateEndEvent.OnEndInterrogation
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EInterrogationResult           InterrogationResult            (Parm, ZeroConstructor, IsPlainOldData)
// class AIndianaAiCharacter*     Interrogator                   (Parm, ZeroConstructor, IsPlainOldData)
// ECrimeType                     InCrime                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInDisguised                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            InDisguiseInterrogationsPassed (Parm, ZeroConstructor, IsPlainOldData)

void UOnInterrogateEndEvent::STATIC_OnEndInterrogation(EInterrogationResult InterrogationResult, class AIndianaAiCharacter* Interrogator, ECrimeType InCrime, bool bInDisguised, int InDisguiseInterrogationsPassed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnInterrogateEndEvent.OnEndInterrogation");

	UOnInterrogateEndEvent_OnEndInterrogation_Params params;
	params.InterrogationResult = InterrogationResult;
	params.Interrogator = Interrogator;
	params.InCrime = InCrime;
	params.bInDisguised = bInDisguised;
	params.InDisguiseInterrogationsPassed = InDisguiseInterrogationsPassed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnMaxPositiveFactions.OnMaxPositiveFactions
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnMaxPositiveFactions::STATIC_OnMaxPositiveFactions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnMaxPositiveFactions.OnMaxPositiveFactions");

	UOnMaxPositiveFactions_OnMaxPositiveFactions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnMaxNegativeFactions.OnMaxNegativeFactions
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnMaxNegativeFactions::STATIC_OnMaxNegativeFactions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnMaxNegativeFactions.OnMaxNegativeFactions");

	UOnMaxNegativeFactions_OnMaxNegativeFactions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnKillingBlowListener.OnKillingBlow
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnKillingBlowListener::STATIC_OnKillingBlow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnKillingBlowListener.OnKillingBlow");

	UOnKillingBlowListener_OnKillingBlow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnQuestCompleteListener.OnQuestComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   QuestID                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UOnQuestCompleteListener::STATIC_OnQuestComplete(const struct FGuid& QuestID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnQuestCompleteListener.OnQuestComplete");

	UOnQuestCompleteListener_OnQuestComplete_Params params;
	params.QuestID = QuestID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnModInstalledListener.OnModInstalled
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnModInstalledListener::STATIC_OnModInstalled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnModInstalledListener.OnModInstalled");

	UOnModInstalledListener_OnModInstalled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnWeaponEquipped.OnWeaponEquipped
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UOnWeaponEquipped::STATIC_OnWeaponEquipped(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnWeaponEquipped.OnWeaponEquipped");

	UOnWeaponEquipped_OnWeaponEquipped_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnWeaponHolstered.OnWeaponHolstered
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UOnWeaponHolstered::STATIC_OnWeaponHolstered(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnWeaponHolstered.OnWeaponHolstered");

	UOnWeaponHolstered_OnWeaponHolstered_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnWeaponUnholstered.OnWeaponUnholstered
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UOnWeaponUnholstered::STATIC_OnWeaponUnholstered(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnWeaponUnholstered.OnWeaponUnholstered");

	UOnWeaponUnholstered_OnWeaponUnholstered_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnWithinRoboRange.OnRoboWithinRangeStateChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnWithinRoboRange::STATIC_OnRoboWithinRangeStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnWithinRoboRange.OnRoboWithinRangeStateChanged");

	UOnWithinRoboRange_OnRoboWithinRangeStateChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnPlayerBeginPlay.OnPlayerBeginPlay
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnPlayerBeginPlay::STATIC_OnPlayerBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnPlayerBeginPlay.OnPlayerBeginPlay");

	UOnPlayerBeginPlay_OnPlayerBeginPlay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnFastTravelInitiated.OnFastTravelInitiated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UTravelDestinationData*  TravelData                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          TimePassed                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bTravelFromMapLedger           (Parm, ZeroConstructor, IsPlainOldData)

void UOnFastTravelInitiated::STATIC_OnFastTravelInitiated(class UTravelDestinationData* TravelData, float TimePassed, bool bTravelFromMapLedger)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnFastTravelInitiated.OnFastTravelInitiated");

	UOnFastTravelInitiated_OnFastTravelInitiated_Params params;
	params.TravelData = TravelData;
	params.TimePassed = TimePassed;
	params.bTravelFromMapLedger = bTravelFromMapLedger;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnRespec.OnRespec
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnRespec::STATIC_OnRespec()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnRespec.OnRespec");

	UOnRespec_OnRespec_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnCarryWeightChange.OnCarryWeightChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOnCarryWeightChange::STATIC_OnCarryWeightChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnCarryWeightChange.OnCarryWeightChange");

	UOnCarryWeightChange_OnCarryWeightChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnGlobalVarChanged.OnGlobalVarChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  VariableName                   (Parm, ZeroConstructor)
// int                            NewValue                       (Parm, ZeroConstructor, IsPlainOldData)

void UOnGlobalVarChanged::STATIC_OnGlobalVarChanged(const class FString& VariableName, int NewValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnGlobalVarChanged.OnGlobalVarChanged");

	UOnGlobalVarChanged_OnGlobalVarChanged_Params params;
	params.VariableName = VariableName;
	params.NewValue = NewValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnPickupAudioLog.OnPickupAudioLog
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UAudioLogDataAsset*      AudioLogDataAsset              (Parm, ZeroConstructor, IsPlainOldData)

void UOnPickupAudioLog::STATIC_OnPickupAudioLog(class UAudioLogDataAsset* AudioLogDataAsset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnPickupAudioLog.OnPickupAudioLog");

	UOnPickupAudioLog_OnPickupAudioLog_Params params;
	params.AudioLogDataAsset = AudioLogDataAsset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EvidenceActor.RefreshHasItemEquipped
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AEvidenceActor::STATIC_RefreshHasItemEquipped(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EvidenceActor.RefreshHasItemEquipped");

	AEvidenceActor_RefreshHasItemEquipped_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EvidenceActor.RefreshHasItem
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AEvidenceActor::STATIC_RefreshHasItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EvidenceActor.RefreshHasItem");

	AEvidenceActor_RefreshHasItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EvidenceActor.PlayerExitedProximity
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AEvidenceActor::STATIC_PlayerExitedProximity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EvidenceActor.PlayerExitedProximity");

	AEvidenceActor_PlayerExitedProximity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EvidenceActor.PlayerEnteredProximity
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AEvidenceActor::STATIC_PlayerEnteredProximity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EvidenceActor.PlayerEnteredProximity");

	AEvidenceActor_PlayerEnteredProximity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EvidenceActor.OnVisibilityStateChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AEvidenceActor::STATIC_OnVisibilityStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EvidenceActor.OnVisibilityStateChanged");

	AEvidenceActor_OnVisibilityStateChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EvidenceActor.OnConversationStarted
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UConversationInstance*   Instance                       (Parm, ZeroConstructor, IsPlainOldData)

void AEvidenceActor::STATIC_OnConversationStarted(class UConversationInstance* Instance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EvidenceActor.OnConversationStarted");

	AEvidenceActor_OnConversationStarted_Params params;
	params.Instance = Instance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EvidenceActor.OnConversationEnded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UConversationInstance*   Instance                       (Parm, ZeroConstructor, IsPlainOldData)

void AEvidenceActor::STATIC_OnConversationEnded(class UConversationInstance* Instance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EvidenceActor.OnConversationEnded");

	AEvidenceActor_OnConversationEnded_Params params;
	params.Instance = Instance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EvidenceActor.OnCombatStateChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bCombatIn                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void AEvidenceActor::STATIC_OnCombatStateChanged(bool bCombatIn, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EvidenceActor.OnCombatStateChanged");

	AEvidenceActor_OnCombatStateChanged_Params params;
	params.bCombatIn = bCombatIn;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EvidenceActor.OnActivated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bActivated                     (Parm, ZeroConstructor, IsPlainOldData)

void AEvidenceActor::STATIC_OnActivated(bool bActivated)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EvidenceActor.OnActivated");

	AEvidenceActor_OnActivated_Params params;
	params.bActivated = bActivated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.EvidenceActor.IsVisible
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AEvidenceActor::IsVisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EvidenceActor.IsVisible");

	AEvidenceActor_IsVisible_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.EvidenceActor.IsInDAConversation
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AEvidenceActor::IsInDAConversation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EvidenceActor.IsInDAConversation");

	AEvidenceActor_IsInDAConversation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.EvidenceActor.HasBeenScanned
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AEvidenceActor::HasBeenScanned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.EvidenceActor.HasBeenScanned");

	AEvidenceActor_HasBeenScanned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ExpandableAreaBase.SetIsExpanded_Animated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           IsExpanded                     (Parm, ZeroConstructor, IsPlainOldData)

void UExpandableAreaBase::STATIC_SetIsExpanded_Animated(bool IsExpanded)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ExpandableAreaBase.SetIsExpanded_Animated");

	UExpandableAreaBase_SetIsExpanded_Animated_Params params;
	params.IsExpanded = IsExpanded;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ExpandableAreaBase.SetIsExpanded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           IsExpanded                     (Parm, ZeroConstructor, IsPlainOldData)

void UExpandableAreaBase::STATIC_SetIsExpanded(bool IsExpanded)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ExpandableAreaBase.SetIsExpanded");

	UExpandableAreaBase_SetIsExpanded_Params params;
	params.IsExpanded = IsExpanded;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ExpandableAreaBase.GetIsExpanded
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UExpandableAreaBase::GetIsExpanded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ExpandableAreaBase.GetIsExpanded");

	UExpandableAreaBase_GetIsExpanded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.FactionManager.SetRandomReputations_Debug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UFactionManager::STATIC_SetRandomReputations_Debug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.FactionManager.SetRandomReputations_Debug");

	UFactionManager_SetRandomReputations_Debug_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.FactionManager.SetPositiveReputation_Debug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  FactionName                    (Parm, ZeroConstructor)
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UFactionManager::STATIC_SetPositiveReputation_Debug(const class FString& FactionName, int Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.FactionManager.SetPositiveReputation_Debug");

	UFactionManager_SetPositiveReputation_Debug_Params params;
	params.FactionName = FactionName;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.FactionManager.SetNegativeReputation_Debug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  FactionName                    (Parm, ZeroConstructor)
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UFactionManager::STATIC_SetNegativeReputation_Debug(const class FString& FactionName, int Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.FactionManager.SetNegativeReputation_Debug");

	UFactionManager_SetNegativeReputation_Debug_Params params;
	params.FactionName = FactionName;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.FactionManager.SetFactionEncountered_BP
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UClass*                  FactionData                    (Parm, ZeroConstructor, IsPlainOldData)

void UFactionManager::STATIC_SetFactionEncountered_BP(class UClass* FactionData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.FactionManager.SetFactionEncountered_BP");

	UFactionManager_SetFactionEncountered_BP_Params params;
	params.FactionData = FactionData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.FactionManager.IsReputationRankType_BP
// (RequiredAPI, BlueprintCosmetic)
// Parameters:
// class UClass*                  FactionData                    (Parm, ZeroConstructor, IsPlainOldData)
// EReputationRankType            InRankType                     (Parm, ZeroConstructor, IsPlainOldData)
// EComparisonOperator            Operator                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFactionManager::IsReputationRankType_BP(class UClass* FactionData, EReputationRankType InRankType, EComparisonOperator Operator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.FactionManager.IsReputationRankType_BP");

	UFactionManager_IsReputationRankType_BP_Params params;
	params.FactionData = FactionData;
	params.InRankType = InRankType;
	params.Operator = Operator;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.FactionManager.IsReputationRank_BP
// (Final)
// Parameters:
// class UClass*                  FactionData                    (Parm, ZeroConstructor, IsPlainOldData)
// EReputationRankType            InRankType                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            InRank                         (Parm, ZeroConstructor, IsPlainOldData)
// EComparisonOperator            Operator                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFactionManager::IsReputationRank_BP(class UClass* FactionData, EReputationRankType InRankType, int InRank, EComparisonOperator Operator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.FactionManager.IsReputationRank_BP");

	UFactionManager_IsReputationRank_BP_Params params;
	params.FactionData = FactionData;
	params.InRankType = InRankType;
	params.InRank = InRank;
	params.Operator = Operator;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.FactionManager.GetReputation_BP
// (BlueprintCosmetic)
// Parameters:
// class UClass*                  FactionData                    (Parm, ZeroConstructor, IsPlainOldData)
// class UReputationData*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UReputationData* UFactionManager::GetReputation_BP(class UClass* FactionData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.FactionManager.GetReputation_BP");

	UFactionManager_GetReputation_BP_Params params;
	params.FactionData = FactionData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.FactionManager.ClearFactionRecentHostilityToPlayer_BP
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UClass*                  FactionData                    (Parm, ZeroConstructor, IsPlainOldData)

void UFactionManager::STATIC_ClearFactionRecentHostilityToPlayer_BP(class UClass* FactionData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.FactionManager.ClearFactionRecentHostilityToPlayer_BP");

	UFactionManager_ClearFactionRecentHostilityToPlayer_BP_Params params;
	params.FactionData = FactionData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.FactionManager.AddReputation_BP
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UClass*                  FactionData                    (Parm, ZeroConstructor, IsPlainOldData)
// EReputationType                ReputationType                 (Parm, ZeroConstructor, IsPlainOldData)
// EReputationIncrementType       IncrementType                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            CustomAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// EReputationActionType          ReputationAction               (Parm, ZeroConstructor, IsPlainOldData)

void UFactionManager::STATIC_AddReputation_BP(class UClass* FactionData, EReputationType ReputationType, EReputationIncrementType IncrementType, int CustomAmount, EReputationActionType ReputationAction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.FactionManager.AddReputation_BP");

	UFactionManager_AddReputation_BP_Params params;
	params.FactionData = FactionData;
	params.ReputationType = ReputationType;
	params.IncrementType = IncrementType;
	params.CustomAmount = CustomAmount;
	params.ReputationAction = ReputationAction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.FactionManager.AddPositiveReputation_Debug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  FactionName                    (Parm, ZeroConstructor)
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UFactionManager::STATIC_AddPositiveReputation_Debug(const class FString& FactionName, int Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.FactionManager.AddPositiveReputation_Debug");

	UFactionManager_AddPositiveReputation_Debug_Params params;
	params.FactionName = FactionName;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.FactionManager.AddNegativeReputation_Debug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  FactionName                    (Parm, ZeroConstructor)
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UFactionManager::STATIC_AddNegativeReputation_Debug(const class FString& FactionName, int Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.FactionManager.AddNegativeReputation_Debug");

	UFactionManager_AddNegativeReputation_Debug_Params params;
	params.FactionName = FactionName;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.FireMode.UsesCharge
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFireMode::UsesCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.FireMode.UsesCharge");

	UFireMode_UsesCharge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.FireMode.ResetCharge
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UFireMode::STATIC_ResetCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.FireMode.ResetCharge");

	UFireMode_ResetCharge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.FireMode.OnTimeDilationUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UFireMode::STATIC_OnTimeDilationUpdated(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.FireMode.OnTimeDilationUpdated");

	UFireMode_OnTimeDilationUpdated_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.FireMode.OnStatUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class URpgStat*                Stat                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFireMode::STATIC_OnStatUpdated(class URpgStat* Stat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.FireMode.OnStatUpdated");

	UFireMode_OnStatUpdated_Params params;
	params.Stat = Stat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.FireMode.IsSpinUp
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFireMode::IsSpinUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.FireMode.IsSpinUp");

	UFireMode_IsSpinUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.FireMode.IsSemiAutomatic
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFireMode::IsSemiAutomatic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.FireMode.IsSemiAutomatic");

	UFireMode_IsSemiAutomatic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.FireMode.IsProjectileCharge
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFireMode::IsProjectileCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.FireMode.IsProjectileCharge");

	UFireMode_IsProjectileCharge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.FireMode.IsBurst
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFireMode::IsBurst()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.FireMode.IsBurst");

	UFireMode_IsBurst_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.FireMode.GetChargeProgress
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFireMode::GetChargeProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.FireMode.GetChargeProgress");

	UFireMode_GetChargeProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.FireMode.CanCharge
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFireMode::CanCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.FireMode.CanCharge");

	UFireMode_CanCharge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.SpawnNodeBase.OnActorTookDamage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FCauseDamageInfo        CauseDamageInfo                (ConstParm, Parm, OutParm, ReferenceParm)

void ASpawnNodeBase::STATIC_OnActorTookDamage(const struct FCauseDamageInfo& CauseDamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SpawnNodeBase.OnActorTookDamage");

	ASpawnNodeBase_OnActorTookDamage_Params params;
	params.CauseDamageInfo = CauseDamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SpawnNodeBase.OnActorNewStateOfBeing
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EStateOfBeing                  NewStateOfBeing                (Parm, ZeroConstructor, IsPlainOldData)
// EStateOfBeing                  OldStateOfBeing                (Parm, ZeroConstructor, IsPlainOldData)

void ASpawnNodeBase::STATIC_OnActorNewStateOfBeing(EStateOfBeing NewStateOfBeing, EStateOfBeing OldStateOfBeing)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SpawnNodeBase.OnActorNewStateOfBeing");

	ASpawnNodeBase_OnActorNewStateOfBeing_Params params;
	params.NewStateOfBeing = NewStateOfBeing;
	params.OldStateOfBeing = OldStateOfBeing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SpawnNodeBase.OnActorDespawned
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void ASpawnNodeBase::STATIC_OnActorDespawned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SpawnNodeBase.OnActorDespawned");

	ASpawnNodeBase_OnActorDespawned_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SpawnNodeBase.OnActorCombatStateChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bInCombat                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void ASpawnNodeBase::STATIC_OnActorCombatStateChanged(bool bInCombat, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SpawnNodeBase.OnActorCombatStateChanged");

	ASpawnNodeBase_OnActorCombatStateChanged_Params params;
	params.bInCombat = bInCombat;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SpawnNodeBase.OnActorAwareOfPlayer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void ASpawnNodeBase::STATIC_OnActorAwareOfPlayer(bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SpawnNodeBase.OnActorAwareOfPlayer");

	ASpawnNodeBase_OnActorAwareOfPlayer_Params params;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SpawnNodeBase.OnActorAlertStateChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  TargetActor                    (Parm, ZeroConstructor, IsPlainOldData)
// EAlertState                    PreviousAlertState             (Parm, ZeroConstructor, IsPlainOldData)
// EAlertState                    TargetAlertState               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void ASpawnNodeBase::STATIC_OnActorAlertStateChanged(class AActor* TargetActor, EAlertState PreviousAlertState, EAlertState TargetAlertState, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SpawnNodeBase.OnActorAlertStateChanged");

	ASpawnNodeBase_OnActorAlertStateChanged_Params params;
	params.TargetActor = TargetActor;
	params.PreviousAlertState = PreviousAlertState;
	params.TargetAlertState = TargetAlertState;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.FlipbookWidget.IsPlaying
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFlipbookWidget::IsPlaying()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.FlipbookWidget.IsPlaying");

	UFlipbookWidget_IsPlaying_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.FlipbookWidget.EndPlay
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UFlipbookWidget::STATIC_EndPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.FlipbookWidget.EndPlay");

	UFlipbookWidget_EndPlay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.FlipbookWidget.BeginPlay
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bInShouldLoop                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            PlayFromFrame                  (Parm, ZeroConstructor, IsPlainOldData)

void UFlipbookWidget::STATIC_BeginPlay(bool bInShouldLoop, int PlayFromFrame)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.FlipbookWidget.BeginPlay");

	UFlipbookWidget_BeginPlay_Params params;
	params.bInShouldLoop = bInShouldLoop;
	params.PlayFromFrame = PlayFromFrame;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ForcedAnimationComponent.PlayEquippedWeaponInspectionAnimation
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UForcedAnimationComponent::STATIC_PlayEquippedWeaponInspectionAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ForcedAnimationComponent.PlayEquippedWeaponInspectionAnimation");

	UForcedAnimationComponent_PlayEquippedWeaponInspectionAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ForcedAnimationComponent.OnWeaponEquipped
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UForcedAnimationComponent::STATIC_OnWeaponEquipped(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ForcedAnimationComponent.OnWeaponEquipped");

	UForcedAnimationComponent_OnWeaponEquipped_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.FPVAnimInstance.OnHeadbobbingChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bShouldHeadbob                 (Parm, ZeroConstructor, IsPlainOldData)

void UFPVAnimInstance::STATIC_OnHeadbobbingChanged(bool bShouldHeadbob)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.FPVAnimInstance.OnHeadbobbingChanged");

	UFPVAnimInstance_OnHeadbobbingChanged_Params params;
	params.bShouldHeadbob = bShouldHeadbob;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.FPVAnimInstance.IsAimTransitioning
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFPVAnimInstance::IsAimTransitioning()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.FPVAnimInstance.IsAimTransitioning");

	UFPVAnimInstance_IsAimTransitioning_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.FPVAnimInstance.GetHeadbobWeight
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFPVAnimInstance::GetHeadbobWeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.FPVAnimInstance.GetHeadbobWeight");

	UFPVAnimInstance_GetHeadbobWeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.FPVCameraComponent.OnFieldOfViewSettingChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          NewFOV                         (Parm, ZeroConstructor, IsPlainOldData)

void UFPVCameraComponent::STATIC_OnFieldOfViewSettingChanged(float NewFOV)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.FPVCameraComponent.OnFieldOfViewSettingChanged");

	UFPVCameraComponent_OnFieldOfViewSettingChanged_Params params;
	params.NewFOV = NewFOV;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GameCalendar.RequestUnpauseTime
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   RequestContext                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UGameCalendar::STATIC_RequestUnpauseTime(const struct FName& RequestContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GameCalendar.RequestUnpauseTime");

	UGameCalendar_RequestUnpauseTime_Params params;
	params.RequestContext = RequestContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GameCalendar.RequestPauseTime
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   RequestContext                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UGameCalendar::STATIC_RequestPauseTime(const struct FName& RequestContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GameCalendar.RequestPauseTime");

	UGameCalendar_RequestPauseTime_Params params;
	params.RequestContext = RequestContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GameCalendar.LockCalendar
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           Block                          (Parm, ZeroConstructor, IsPlainOldData)

void UGameCalendar::STATIC_LockCalendar(bool Block)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GameCalendar.LockCalendar");

	UGameCalendar_LockCalendar_Params params;
	params.Block = Block;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GameCalendar.K2_SetupDelayedCallback
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FScriptDelegate         EventToDelay                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// float                          SecondsToDelay                 (Parm, ZeroConstructor, IsPlainOldData)

void UGameCalendar::STATIC_K2_SetupDelayedCallback(class UObject* WorldContextObject, const struct FScriptDelegate& EventToDelay, float SecondsToDelay)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GameCalendar.K2_SetupDelayedCallback");

	UGameCalendar_K2_SetupDelayedCallback_Params params;
	params.WorldContextObject = WorldContextObject;
	params.EventToDelay = EventToDelay;
	params.SecondsToDelay = SecondsToDelay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GameCalendar.K2_RegisterNamedTimestamp
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  TimestampName                  (Parm, ZeroConstructor)

void UGameCalendar::STATIC_K2_RegisterNamedTimestamp(const class FString& TimestampName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GameCalendar.K2_RegisterNamedTimestamp");

	UGameCalendar_K2_RegisterNamedTimestamp_Params params;
	params.TimestampName = TimestampName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GameCalendar.K2_IsTimeSlice
// (BlueprintCosmetic)
// Parameters:
// int                            StartHour                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            EndHour                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UGameCalendar::K2_IsTimeSlice(int StartHour, int EndHour)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GameCalendar.K2_IsTimeSlice");

	UGameCalendar_K2_IsTimeSlice_Params params;
	params.StartHour = StartHour;
	params.EndHour = EndHour;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.GameCalendar.K2_IsPhaseOfDay
// (Final)
// Parameters:
// EPhaseOfDay                    Phase                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UGameCalendar::K2_IsPhaseOfDay(EPhaseOfDay Phase)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GameCalendar.K2_IsPhaseOfDay");

	UGameCalendar_K2_IsPhaseOfDay_Params params;
	params.Phase = Phase;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.GameCalendar.K2_HaveMinutesElapsedSinceNamedTimestamp
// (BlueprintAuthorityOnly)
// Parameters:
// class FString                  TimestampName                  (Parm, ZeroConstructor)
// int                            Minutes                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UGameCalendar::K2_HaveMinutesElapsedSinceNamedTimestamp(const class FString& TimestampName, int Minutes)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GameCalendar.K2_HaveMinutesElapsedSinceNamedTimestamp");

	UGameCalendar_K2_HaveMinutesElapsedSinceNamedTimestamp_Params params;
	params.TimestampName = TimestampName;
	params.Minutes = Minutes;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.GameCalendar.K2_HaveHoursElapsedSinceNamedTimestamp
// (BlueprintAuthorityOnly)
// Parameters:
// class FString                  TimestampName                  (Parm, ZeroConstructor)
// int                            Hours                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UGameCalendar::K2_HaveHoursElapsedSinceNamedTimestamp(const class FString& TimestampName, int Hours)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GameCalendar.K2_HaveHoursElapsedSinceNamedTimestamp");

	UGameCalendar_K2_HaveHoursElapsedSinceNamedTimestamp_Params params;
	params.TimestampName = TimestampName;
	params.Hours = Hours;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.GameCalendar.K2_HaveDaysElapsedSinceNamedTimestamp
// (BlueprintAuthorityOnly)
// Parameters:
// class FString                  TimestampName                  (Parm, ZeroConstructor)
// int                            Days                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UGameCalendar::K2_HaveDaysElapsedSinceNamedTimestamp(const class FString& TimestampName, int Days)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GameCalendar.K2_HaveDaysElapsedSinceNamedTimestamp");

	UGameCalendar_K2_HaveDaysElapsedSinceNamedTimestamp_Params params;
	params.TimestampName = TimestampName;
	params.Days = Days;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.GameCalendar.K2_GetRawHour
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UGameCalendar::K2_GetRawHour()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GameCalendar.K2_GetRawHour");

	UGameCalendar_K2_GetRawHour_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.GameCalendar.K2_GetNormalizedTime
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UGameCalendar::K2_GetNormalizedTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GameCalendar.K2_GetNormalizedTime");

	UGameCalendar_K2_GetNormalizedTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.GameCalendar.K2_ClearNamedTimestamp
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  TimestampName                  (Parm, ZeroConstructor)

void UGameCalendar::STATIC_K2_ClearNamedTimestamp(const class FString& TimestampName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GameCalendar.K2_ClearNamedTimestamp");

	UGameCalendar_K2_ClearNamedTimestamp_Params params;
	params.TimestampName = TimestampName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GameCalendar.K2_AdvanceToHour
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            TargetHour                     (Parm, ZeroConstructor, IsPlainOldData)

void UGameCalendar::STATIC_K2_AdvanceToHour(int TargetHour)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GameCalendar.K2_AdvanceToHour");

	UGameCalendar_K2_AdvanceToHour_Params params;
	params.TargetHour = TargetHour;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GameCalendar.K2_AdvanceTime
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Days                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          Hours                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          Minutes                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          Seconds                        (Parm, ZeroConstructor, IsPlainOldData)

void UGameCalendar::STATIC_K2_AdvanceTime(float Days, float Hours, float Minutes, float Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GameCalendar.K2_AdvanceTime");

	UGameCalendar_K2_AdvanceTime_Params params;
	params.Days = Days;
	params.Hours = Hours;
	params.Minutes = Minutes;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GameCalendar.K2_AdvanceSeconds
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Seconds                        (Parm, ZeroConstructor, IsPlainOldData)

void UGameCalendar::STATIC_K2_AdvanceSeconds(float Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GameCalendar.K2_AdvanceSeconds");

	UGameCalendar_K2_AdvanceSeconds_Params params;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GameCalendar.K2_AdvanceMinutes
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Minutes                        (Parm, ZeroConstructor, IsPlainOldData)

void UGameCalendar::STATIC_K2_AdvanceMinutes(float Minutes)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GameCalendar.K2_AdvanceMinutes");

	UGameCalendar_K2_AdvanceMinutes_Params params;
	params.Minutes = Minutes;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GameCalendar.K2_AdvanceHours
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Hours                          (Parm, ZeroConstructor, IsPlainOldData)

void UGameCalendar::STATIC_K2_AdvanceHours(float Hours)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GameCalendar.K2_AdvanceHours");

	UGameCalendar_K2_AdvanceHours_Params params;
	params.Hours = Hours;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GameCalendar.K2_AdvanceDays
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Days                           (Parm, ZeroConstructor, IsPlainOldData)

void UGameCalendar::STATIC_K2_AdvanceDays(float Days)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GameCalendar.K2_AdvanceDays");

	UGameCalendar_K2_AdvanceDays_Params params;
	params.Days = Days;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GameCalendar.ForceWeatherStart
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UGameCalendar::STATIC_ForceWeatherStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GameCalendar.ForceWeatherStart");

	UGameCalendar_ForceWeatherStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GameCalendar.ForceWeatherEnd
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UGameCalendar::STATIC_ForceWeatherEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GameCalendar.ForceWeatherEnd");

	UGameCalendar_ForceWeatherEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GameCalendar.AdvanceToHour
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          TargetHour                     (Parm, ZeroConstructor, IsPlainOldData)

void UGameCalendar::STATIC_AdvanceToHour(float TargetHour)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GameCalendar.AdvanceToHour");

	UGameCalendar_AdvanceToHour_Params params;
	params.TargetHour = TargetHour;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GameCalendar.AdvanceTime
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Days                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          Hours                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          Minutes                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          Seconds                        (Parm, ZeroConstructor, IsPlainOldData)

void UGameCalendar::STATIC_AdvanceTime(float Days, float Hours, float Minutes, float Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GameCalendar.AdvanceTime");

	UGameCalendar_AdvanceTime_Params params;
	params.Days = Days;
	params.Hours = Hours;
	params.Minutes = Minutes;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GameCalendar.AdvanceSeconds
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Seconds                        (Parm, ZeroConstructor, IsPlainOldData)

void UGameCalendar::STATIC_AdvanceSeconds(float Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GameCalendar.AdvanceSeconds");

	UGameCalendar_AdvanceSeconds_Params params;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GameCalendar.AdvanceMinutes
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Minutes                        (Parm, ZeroConstructor, IsPlainOldData)

void UGameCalendar::STATIC_AdvanceMinutes(float Minutes)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GameCalendar.AdvanceMinutes");

	UGameCalendar_AdvanceMinutes_Params params;
	params.Minutes = Minutes;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GameCalendar.AdvanceHours
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Hours                          (Parm, ZeroConstructor, IsPlainOldData)

void UGameCalendar::STATIC_AdvanceHours(float Hours)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GameCalendar.AdvanceHours");

	UGameCalendar_AdvanceHours_Params params;
	params.Hours = Hours;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GameCalendar.AdvanceDays
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Days                           (Parm, ZeroConstructor, IsPlainOldData)

void UGameCalendar::STATIC_AdvanceDays(float Days)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GameCalendar.AdvanceDays");

	UGameCalendar_AdvanceDays_Params params;
	params.Days = Days;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GammaSelectionWidget.OnRestoreDefaults
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UGammaSelectionWidget::STATIC_OnRestoreDefaults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GammaSelectionWidget.OnRestoreDefaults");

	UGammaSelectionWidget_OnRestoreDefaults_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GammaSelectionWidget.OnLocStringChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UGammaSelectionWidget::STATIC_OnLocStringChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GammaSelectionWidget.OnLocStringChanged");

	UGammaSelectionWidget_OnLocStringChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GammaSelectionWidget.OnGammaChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FSliderEvent            Event                          (ConstParm, Parm, OutParm, ReferenceParm)

void UGammaSelectionWidget::STATIC_OnGammaChanged(const struct FSliderEvent& Event)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GammaSelectionWidget.OnGammaChanged");

	UGammaSelectionWidget_OnGammaChanged_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GammaSelectionWidget.OnGammaAccepted
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UGammaSelectionWidget::STATIC_OnGammaAccepted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GammaSelectionWidget.OnGammaAccepted");

	UGammaSelectionWidget_OnGammaAccepted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GammaSelectionWidget.ApplyDefaults
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UGammaSelectionWidget::STATIC_ApplyDefaults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GammaSelectionWidget.ApplyDefaults");

	UGammaSelectionWidget_ApplyDefaults_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GenericNotificationEntryWidget.PrepareNextMessage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UGenericNotificationEntryWidget::STATIC_PrepareNextMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GenericNotificationEntryWidget.PrepareNextMessage");

	UGenericNotificationEntryWidget_PrepareNextMessage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GenericNotificationEntryWidget.PrepareNewMessage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UGenericNotificationEntryWidget::STATIC_PrepareNewMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GenericNotificationEntryWidget.PrepareNewMessage");

	UGenericNotificationEntryWidget_PrepareNewMessage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GenericNotificationEntryWidget.OnStickLayoutChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            NewValue                       (Parm, ZeroConstructor, IsPlainOldData)

void UGenericNotificationEntryWidget::STATIC_OnStickLayoutChanged(int NewValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GenericNotificationEntryWidget.OnStickLayoutChanged");

	UGenericNotificationEntryWidget_OnStickLayoutChanged_Params params;
	params.NewValue = NewValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GenericNotificationEntryWidget.OnFadeOutComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UGenericNotificationEntryWidget::STATIC_OnFadeOutComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GenericNotificationEntryWidget.OnFadeOutComplete");

	UGenericNotificationEntryWidget_OnFadeOutComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GenericNotificationEntryWidget.OnFadeInComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UGenericNotificationEntryWidget::STATIC_OnFadeInComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GenericNotificationEntryWidget.OnFadeInComplete");

	UGenericNotificationEntryWidget_OnFadeInComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GenericNotificationWidget.TriggerFadeOut
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UGenericNotificationWidget::STATIC_TriggerFadeOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GenericNotificationWidget.TriggerFadeOut");

	UGenericNotificationWidget_TriggerFadeOut_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GenericNotificationWidget.TriggerFadeIn
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UGenericNotificationWidget::STATIC_TriggerFadeIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GenericNotificationWidget.TriggerFadeIn");

	UGenericNotificationWidget_TriggerFadeIn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GenericNotificationWidget.SetBackingMaterialHeight
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          NewHeight                      (Parm, ZeroConstructor, IsPlainOldData)

void UGenericNotificationWidget::STATIC_SetBackingMaterialHeight(float NewHeight)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GenericNotificationWidget.SetBackingMaterialHeight");

	UGenericNotificationWidget_SetBackingMaterialHeight_Params params;
	params.NewHeight = NewHeight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GenericNotificationWidget.OnSaveGameComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ESaveGameResult                SaveResult                     (Parm, ZeroConstructor, IsPlainOldData)
// ESaveGameType                  SaveGameType                   (Parm, ZeroConstructor, IsPlainOldData)

void UGenericNotificationWidget::STATIC_OnSaveGameComplete(ESaveGameResult SaveResult, ESaveGameType SaveGameType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GenericNotificationWidget.OnSaveGameComplete");

	UGenericNotificationWidget_OnSaveGameComplete_Params params;
	params.SaveResult = SaveResult;
	params.SaveGameType = SaveGameType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GenericNotificationWidget.OnNotificationDurationChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          NotificationTime               (Parm, ZeroConstructor, IsPlainOldData)

void UGenericNotificationWidget::STATIC_OnNotificationDurationChanged(float NotificationTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GenericNotificationWidget.OnNotificationDurationChanged");

	UGenericNotificationWidget_OnNotificationDurationChanged_Params params;
	params.NotificationTime = NotificationTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GenericNotificationWidget.OnHUDVisibilityChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void UGenericNotificationWidget::STATIC_OnHUDVisibilityChanged(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GenericNotificationWidget.OnHUDVisibilityChanged");

	UGenericNotificationWidget_OnHUDVisibilityChanged_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GenericNotificationWidget.OnFadeOutComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UGenericNotificationWidget::STATIC_OnFadeOutComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GenericNotificationWidget.OnFadeOutComplete");

	UGenericNotificationWidget_OnFadeOutComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.GravManger.SetLowGravAmbientAudioEnabled
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void AGravManger::STATIC_SetLowGravAmbientAudioEnabled(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.GravManger.SetLowGravAmbientAudioEnabled");

	AGravManger_SetLowGravAmbientAudioEnabled_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ButtonGroup.OnButtonUnFocused
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UButtonBase*             Button                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UButtonGroup::STATIC_OnButtonUnFocused(class UButtonBase* Button)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonGroup.OnButtonUnFocused");

	UButtonGroup_OnButtonUnFocused_Params params;
	params.Button = Button;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ButtonGroup.OnButtonFocused
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UButtonBase*             Button                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UButtonGroup::STATIC_OnButtonFocused(class UButtonBase* Button)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonGroup.OnButtonFocused");

	UButtonGroup_OnButtonFocused_Params params;
	params.Button = Button;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ButtonGroup.CyclePreviousButton
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UButtonGroup::STATIC_CyclePreviousButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonGroup.CyclePreviousButton");

	UButtonGroup_CyclePreviousButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ButtonGroup.CycleNextButton
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UButtonGroup::STATIC_CycleNextButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ButtonGroup.CycleNextButton");

	UButtonGroup_CycleNextButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ScrollingWidgetGroup.OnScrollingComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UScrollingWidgetGroup::STATIC_OnScrollingComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ScrollingWidgetGroup.OnScrollingComplete");

	UScrollingWidgetGroup_OnScrollingComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Hazard.OnActorExited
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void AHazard::STATIC_OnActorExited(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Hazard.OnActorExited");

	AHazard_OnActorExited_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Hazard.OnActorEntered
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AHazard::STATIC_OnActorEntered(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Hazard.OnActorEntered");

	AHazard_OnActorEntered_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Hazard.ForceSetEnabled
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bNewEnabled                    (Parm, ZeroConstructor, IsPlainOldData)

void AHazard::STATIC_ForceSetEnabled(bool bNewEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Hazard.ForceSetEnabled");

	AHazard_ForceSetEnabled_Params params;
	params.bNewEnabled = bNewEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Hazard.CustomUpdate
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AHazard::STATIC_CustomUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Hazard.CustomUpdate");

	AHazard_CustomUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Hazard.AttemptEnableHazard
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void AHazard::STATIC_AttemptEnableHazard(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Hazard.AttemptEnableHazard");

	AHazard_AttemptEnableHazard_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.HazardAudioComponent.Stop
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EHazardEventType               Type                           (Parm, ZeroConstructor, IsPlainOldData)

void UHazardAudioComponent::STATIC_Stop(EHazardEventType Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HazardAudioComponent.Stop");

	UHazardAudioComponent_Stop_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.HazardAudioComponent.Play
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EHazardEventType               Type                           (Parm, ZeroConstructor, IsPlainOldData)

void UHazardAudioComponent::STATIC_Play(EHazardEventType Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HazardAudioComponent.Play");

	UHazardAudioComponent_Play_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.HeadAndBodyTrackingComponent.OnOccupiedElevatorChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AElevator*               Elevator                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bOccupied                      (Parm, ZeroConstructor, IsPlainOldData)

void UHeadAndBodyTrackingComponent::STATIC_OnOccupiedElevatorChange(class AElevator* Elevator, bool bOccupied)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HeadAndBodyTrackingComponent.OnOccupiedElevatorChange");

	UHeadAndBodyTrackingComponent_OnOccupiedElevatorChange_Params params;
	params.Elevator = Elevator;
	params.bOccupied = bOccupied;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.HealthComponent.Suicide
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UHealthComponent::STATIC_Suicide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HealthComponent.Suicide");

	UHealthComponent_Suicide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.HealthComponent.SetPseudoGod
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void UHealthComponent::STATIC_SetPseudoGod(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HealthComponent.SetPseudoGod");

	UHealthComponent_SetPseudoGod_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.HealthComponent.SetHealthPercentNPC
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Percent                        (Parm, ZeroConstructor, IsPlainOldData)

void UHealthComponent::STATIC_SetHealthPercentNPC(float Percent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HealthComponent.SetHealthPercentNPC");

	UHealthComponent_SetHealthPercentNPC_Params params;
	params.Percent = Percent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.HealthComponent.SetHealthPercent
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Percent                        (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)

void UHealthComponent::STATIC_SetHealthPercent(float Percent, class AActor* Instigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HealthComponent.SetHealthPercent");

	UHealthComponent_SetHealthPercent_Params params;
	params.Percent = Percent;
	params.Instigator = Instigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.HealthComponent.SetGod
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void UHealthComponent::STATIC_SetGod(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HealthComponent.SetGod");

	UHealthComponent_SetGod_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.HealthComponent.PseudoGod
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UHealthComponent::STATIC_PseudoGod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HealthComponent.PseudoGod");

	UHealthComponent_PseudoGod_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.HealthComponent.OnStatUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class URpgStat*                Stat                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UHealthComponent::STATIC_OnStatUpdated(class URpgStat* Stat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HealthComponent.OnStatUpdated");

	UHealthComponent_OnStatUpdated_Params params;
	params.Stat = Stat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.HealthComponent.OnAttributeUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EAttribute                     Attribute                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            NewValue                       (Parm, ZeroConstructor, IsPlainOldData)

void UHealthComponent::STATIC_OnAttributeUpdated(EAttribute Attribute, int NewValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HealthComponent.OnAttributeUpdated");

	UHealthComponent_OnAttributeUpdated_Params params;
	params.Attribute = Attribute;
	params.NewValue = NewValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.HealthComponent.LevelChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            Level                          (Parm, ZeroConstructor, IsPlainOldData)

void UHealthComponent::STATIC_LevelChanged(int Level)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HealthComponent.LevelChanged");

	UHealthComponent_LevelChanged_Params params;
	params.Level = Level;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.HealthComponent.KillNPC
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaAiCharacter*     Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UHealthComponent::STATIC_KillNPC(class AIndianaAiCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HealthComponent.KillNPC");

	UHealthComponent_KillNPC_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.HealthComponent.HealthFill
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UHealthComponent::STATIC_HealthFill()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HealthComponent.HealthFill");

	UHealthComponent_HealthFill_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.HealthComponent.GodCompanions
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UHealthComponent::STATIC_GodCompanions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HealthComponent.GodCompanions");

	UHealthComponent_GodCompanions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.HealthComponent.God
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UHealthComponent::STATIC_God()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HealthComponent.God");

	UHealthComponent_God_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.HealthComponent.GetStateOfBeing
// ()
// Parameters:
// EStateOfBeing                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EStateOfBeing UHealthComponent::GetStateOfBeing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HealthComponent.GetStateOfBeing");

	UHealthComponent_GetStateOfBeing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.HealthComponent.GetRegenRatePoints
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UHealthComponent::GetRegenRatePoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HealthComponent.GetRegenRatePoints");

	UHealthComponent_GetRegenRatePoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.HealthComponent.GetRegenRate
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UHealthComponent::GetRegenRate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HealthComponent.GetRegenRate");

	UHealthComponent_GetRegenRate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.HealthComponent.GetNormalizedHealth
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UHealthComponent::GetNormalizedHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HealthComponent.GetNormalizedHealth");

	UHealthComponent_GetNormalizedHealth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.HealthComponent.GetMaxHealth
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UHealthComponent::GetMaxHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HealthComponent.GetMaxHealth");

	UHealthComponent_GetMaxHealth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.HealthComponent.GetHealth
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UHealthComponent::GetHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HealthComponent.GetHealth");

	UHealthComponent_GetHealth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.HealthComponent.DeathComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  DeadActor                      (Parm, ZeroConstructor, IsPlainOldData)

void UHealthComponent::STATIC_DeathComplete(class AActor* DeadActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HealthComponent.DeathComplete");

	UHealthComponent_DeathComplete_Params params;
	params.DeadActor = DeadActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.HealthKitTooltipWidget.FontSizeChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            NewModifier                    (Parm, ZeroConstructor, IsPlainOldData)

void UHealthKitTooltipWidget::STATIC_FontSizeChanged(int NewModifier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HealthKitTooltipWidget.FontSizeChanged");

	UHealthKitTooltipWidget_FontSizeChanged_Params params;
	params.NewModifier = NewModifier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.HitEffectIndicatorComponent.OnTakeDamage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AController*             InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void UHitEffectIndicatorComponent::STATIC_OnTakeDamage(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HitEffectIndicatorComponent.OnTakeDamage");

	UHitEffectIndicatorComponent_OnTakeDamage_Params params;
	params.DamagedActor = DamagedActor;
	params.Damage = Damage;
	params.DamageType = DamageType;
	params.InstigatedBy = InstigatedBy;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.HitEffectIndicatorComponent.OnHit
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          NormalizedAmount               (Parm, ZeroConstructor, IsPlainOldData)
// float                          IncidentAngleRelativeToCameraDegrees (Parm, ZeroConstructor, IsPlainOldData)

void UHitEffectIndicatorComponent::STATIC_OnHit(float NormalizedAmount, float IncidentAngleRelativeToCameraDegrees)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HitEffectIndicatorComponent.OnHit");

	UHitEffectIndicatorComponent_OnHit_Params params;
	params.NormalizedAmount = NormalizedAmount;
	params.IncidentAngleRelativeToCameraDegrees = IncidentAngleRelativeToCameraDegrees;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.HitEffectIndicatorComponent.HitEffectIndicatorEnableDebugKeys
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UHitEffectIndicatorComponent::STATIC_HitEffectIndicatorEnableDebugKeys()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HitEffectIndicatorComponent.HitEffectIndicatorEnableDebugKeys");

	UHitEffectIndicatorComponent_HitEffectIndicatorEnableDebugKeys_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.HUDWidget.QueueLevelUpNotification
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            NewLevel                       (Parm, ZeroConstructor, IsPlainOldData)

void UHUDWidget::STATIC_QueueLevelUpNotification(int NewLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HUDWidget.QueueLevelUpNotification");

	UHUDWidget_QueueLevelUpNotification_Params params;
	params.NewLevel = NewLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.HUDWidget.GetCharacterOverview
// ()
// Parameters:
// class UCharacterOverviewWidget* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UCharacterOverviewWidget* UHUDWidget::GetCharacterOverview()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.HUDWidget.GetCharacterOverview");

	UHUDWidget_GetCharacterOverview_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaCharacter.UpdateOutlines
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaCharacter::STATIC_UpdateOutlines()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaCharacter.UpdateOutlines");

	AIndianaCharacter_UpdateOutlines_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaCharacter.PlayWeaponEvent
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  WeaponEvent                    (Parm, ZeroConstructor)

void AIndianaCharacter::STATIC_PlayWeaponEvent(const class FString& WeaponEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaCharacter.PlayWeaponEvent");

	AIndianaCharacter_PlayWeaponEvent_Params params;
	params.WeaponEvent = WeaponEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaCharacter.OnRestoredStateOfBeing
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EStateOfBeing                  RestoredStateOfBeing           (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaCharacter::STATIC_OnRestoredStateOfBeing(EStateOfBeing RestoredStateOfBeing)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaCharacter.OnRestoredStateOfBeing");

	AIndianaCharacter_OnRestoredStateOfBeing_Params params;
	params.RestoredStateOfBeing = RestoredStateOfBeing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaCharacter.OnPreStateOfBeingChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EStateOfBeing                  StateOfBeing                   (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaCharacter::STATIC_OnPreStateOfBeingChange(EStateOfBeing StateOfBeing)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaCharacter.OnPreStateOfBeingChange");

	AIndianaCharacter_OnPreStateOfBeingChange_Params params;
	params.StateOfBeing = StateOfBeing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaCharacter.OnNewStateOfBeing
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EStateOfBeing                  NewStateOfBeing                (Parm, ZeroConstructor, IsPlainOldData)
// EStateOfBeing                  OldStateOfBeing                (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaCharacter::STATIC_OnNewStateOfBeing(EStateOfBeing NewStateOfBeing, EStateOfBeing OldStateOfBeing)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaCharacter.OnNewStateOfBeing");

	AIndianaCharacter_OnNewStateOfBeing_Params params;
	params.NewStateOfBeing = NewStateOfBeing;
	params.OldStateOfBeing = OldStateOfBeing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaCharacter.OnLevelChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            Level                          (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaCharacter::STATIC_OnLevelChanged(int Level)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaCharacter.OnLevelChanged");

	AIndianaCharacter_OnLevelChanged_Params params;
	params.Level = Level;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaCharacter.OnDifficultyChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EGameDifficulty                NewDifficulty                  (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaCharacter::STATIC_OnDifficultyChanged(EGameDifficulty NewDifficulty)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaCharacter.OnDifficultyChanged");

	AIndianaCharacter_OnDifficultyChanged_Params params;
	params.NewDifficulty = NewDifficulty;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaCharacter.OnAttack
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          DurationScalar                 (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaCharacter::STATIC_OnAttack(float DurationScalar)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaCharacter.OnAttack");

	AIndianaCharacter_OnAttack_Params params;
	params.DurationScalar = DurationScalar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaCharacter.ItemRemoved
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              Item                           (ConstParm, Parm, OutParm, ReferenceParm)

void AIndianaCharacter::STATIC_ItemRemoved(const struct FItemStack& Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaCharacter.ItemRemoved");

	AIndianaCharacter_ItemRemoved_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaCharacter.ItemAdded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              Item                           (ConstParm, Parm, OutParm, ReferenceParm)

void AIndianaCharacter::STATIC_ItemAdded(const struct FItemStack& Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaCharacter.ItemAdded");

	AIndianaCharacter_ItemAdded_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaCharacter.IsWeaponEquipped
// (BlueprintCosmetic)
// Parameters:
// class UClass*                  WeaponClass                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AIndianaCharacter::IsWeaponEquipped(class UClass* WeaponClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaCharacter.IsWeaponEquipped");

	AIndianaCharacter_IsWeaponEquipped_Params params;
	params.WeaponClass = WeaponClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaCharacter.IsArmorEquipped
// (BlueprintCosmetic)
// Parameters:
// class UClass*                  ArmorClass                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AIndianaCharacter::IsArmorEquipped(class UClass* ArmorClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaCharacter.IsArmorEquipped");

	AIndianaCharacter_IsArmorEquipped_Params params;
	params.ArmorClass = ArmorClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaCharacter.HasItem
// (BlueprintCosmetic)
// Parameters:
// class UClass*                  Item                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AIndianaCharacter::HasItem(class UClass* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaCharacter.HasItem");

	AIndianaCharacter_HasItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaCharacter.GetStatusEffectManager
// ()
// Parameters:
// class UStatusEffectManagerComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UStatusEffectManagerComponent* AIndianaCharacter::GetStatusEffectManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaCharacter.GetStatusEffectManager");

	AIndianaCharacter_GetStatusEffectManager_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaCharacter.GetItemQuantity
// (BlueprintCosmetic)
// Parameters:
// class UClass*                  Item                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AIndianaCharacter::GetItemQuantity(class UClass* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaCharacter.GetItemQuantity");

	AIndianaCharacter_GetItemQuantity_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaCharacter.GetEquipmentComponent
// ()
// Parameters:
// class UEquipmentComponent*     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UEquipmentComponent* AIndianaCharacter::GetEquipmentComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaCharacter.GetEquipmentComponent");

	AIndianaCharacter_GetEquipmentComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaCharacter.GetCurrentWeapon
// ()
// Parameters:
// class UWeapon*                 ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWeapon* AIndianaCharacter::GetCurrentWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaCharacter.GetCurrentWeapon");

	AIndianaCharacter_GetCurrentWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaCharacter.ExecuteDeath
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bFromReload                    (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaCharacter::STATIC_ExecuteDeath(bool bFromReload)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaCharacter.ExecuteDeath");

	AIndianaCharacter_ExecuteDeath_Params params;
	params.bFromReload = bFromReload;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaCharacter.Died
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FCauseDamageInfo        CDI                            (ConstParm, Parm, OutParm, ReferenceParm)

void AIndianaCharacter::STATIC_Died(const struct FCauseDamageInfo& CDI)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaCharacter.Died");

	AIndianaCharacter_Died_Params params;
	params.CDI = CDI;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaCharacter.DamageCaused
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FCauseDamageInfo        CauseDamageInfo                (ConstParm, Parm, OutParm, ReferenceParm)

void AIndianaCharacter::STATIC_DamageCaused(const struct FCauseDamageInfo& CauseDamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaCharacter.DamageCaused");

	AIndianaCharacter_DamageCaused_Params params;
	params.CauseDamageInfo = CauseDamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaCharacter.CastSpellDebugTarget
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  SpellName                      (Parm, ZeroConstructor)

void AIndianaCharacter::STATIC_CastSpellDebugTarget(const class FString& SpellName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaCharacter.CastSpellDebugTarget");

	AIndianaCharacter_CastSpellDebugTarget_Params params;
	params.SpellName = SpellName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaCharacter.CastSpellDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  SpellName                      (Parm, ZeroConstructor)

void AIndianaCharacter::STATIC_CastSpellDebug(const class FString& SpellName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaCharacter.CastSpellDebug");

	AIndianaCharacter_CastSpellDebug_Params params;
	params.SpellName = SpellName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAiCharacter.SetRagdoll
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bInIsRagdoll                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInstantFreeze                 (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaAiCharacter::STATIC_SetRagdoll(bool bInIsRagdoll, bool bInstantFreeze)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiCharacter.SetRagdoll");

	AIndianaAiCharacter_SetRagdoll_Params params;
	params.bInIsRagdoll = bInIsRagdoll;
	params.bInstantFreeze = bInstantFreeze;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAiCharacter.SetIsInLowGrav
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bNewIsInLowGrav                (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaAiCharacter::STATIC_SetIsInLowGrav(bool bNewIsInLowGrav)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiCharacter.SetIsInLowGrav");

	AIndianaAiCharacter_SetIsInLowGrav_Params params;
	params.bNewIsInLowGrav = bNewIsInLowGrav;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAiCharacter.OnWeaponEndUnequip
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AIndianaAiCharacter::STATIC_OnWeaponEndUnequip(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiCharacter.OnWeaponEndUnequip");

	AIndianaAiCharacter_OnWeaponEndUnequip_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAiCharacter.OnWeaponEndEquip
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AIndianaAiCharacter::STATIC_OnWeaponEndEquip(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiCharacter.OnWeaponEndEquip");

	AIndianaAiCharacter_OnWeaponEndEquip_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAiCharacter.OnMontageEndDelegate
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInterrupted                   (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaAiCharacter::STATIC_OnMontageEndDelegate(class UAnimMontage* Montage, bool bInterrupted)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiCharacter.OnMontageEndDelegate");

	AIndianaAiCharacter_OnMontageEndDelegate_Params params;
	params.Montage = Montage;
	params.bInterrupted = bInterrupted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAiCharacter.OnDamageEvent
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FCauseDamageInfo        CauseDamageInfo                (ConstParm, Parm, OutParm, ReferenceParm)

void AIndianaAiCharacter::STATIC_OnDamageEvent(const struct FCauseDamageInfo& CauseDamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiCharacter.OnDamageEvent");

	AIndianaAiCharacter_OnDamageEvent_Params params;
	params.CauseDamageInfo = CauseDamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAiCharacter.OnAlertStateChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  TargetActor                    (Parm, ZeroConstructor, IsPlainOldData)
// EAlertState                    PreviousAlertState             (Parm, ZeroConstructor, IsPlainOldData)
// EAlertState                    TargetAlertState               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaAiCharacter::STATIC_OnAlertStateChange(class AActor* TargetActor, EAlertState PreviousAlertState, EAlertState TargetAlertState, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiCharacter.OnAlertStateChange");

	AIndianaAiCharacter_OnAlertStateChange_Params params;
	params.TargetActor = TargetActor;
	params.PreviousAlertState = PreviousAlertState;
	params.TargetAlertState = TargetAlertState;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAiCharacter.OnActorHiddenChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bIsHidden                      (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaAiCharacter::STATIC_OnActorHiddenChange(bool bIsHidden)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiCharacter.OnActorHiddenChange");

	AIndianaAiCharacter_OnActorHiddenChange_Params params;
	params.bIsHidden = bIsHidden;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAiCharacter.IsInCombat
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AIndianaAiCharacter::IsInCombat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiCharacter.IsInCombat");

	AIndianaAiCharacter_IsInCombat_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaAiCharacter.GetOwningController
// ()
// Parameters:
// class AIndianaAiController*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AIndianaAiController* AIndianaAiCharacter::GetOwningController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiCharacter.GetOwningController");

	AIndianaAiCharacter_GetOwningController_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaAiController.OnTakeDamage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FCauseDamageInfo        CauseDamageInfo                (ConstParm, Parm, OutParm, ReferenceParm)

void AIndianaAiController::STATIC_OnTakeDamage(const struct FCauseDamageInfo& CauseDamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiController.OnTakeDamage");

	AIndianaAiController_OnTakeDamage_Params params;
	params.CauseDamageInfo = CauseDamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAiController.OnSwitchedTarget
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  OldTarget                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  NewTarget                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaAiController::STATIC_OnSwitchedTarget(class AActor* OldTarget, class AActor* NewTarget, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiController.OnSwitchedTarget");

	AIndianaAiController_OnSwitchedTarget_Params params;
	params.OldTarget = OldTarget;
	params.NewTarget = NewTarget;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAiController.OnRestoredStateOfBeing
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EStateOfBeing                  RestoredStateOfBeing           (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaAiController::STATIC_OnRestoredStateOfBeing(EStateOfBeing RestoredStateOfBeing)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiController.OnRestoredStateOfBeing");

	AIndianaAiController_OnRestoredStateOfBeing_Params params;
	params.RestoredStateOfBeing = RestoredStateOfBeing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAiController.OnNewStateOfBeing
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EStateOfBeing                  NewStateOfBeing                (Parm, ZeroConstructor, IsPlainOldData)
// EStateOfBeing                  OldStateOfBeing                (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaAiController::STATIC_OnNewStateOfBeing(EStateOfBeing NewStateOfBeing, EStateOfBeing OldStateOfBeing)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiController.OnNewStateOfBeing");

	AIndianaAiController_OnNewStateOfBeing_Params params;
	params.NewStateOfBeing = NewStateOfBeing;
	params.OldStateOfBeing = OldStateOfBeing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAiController.OnMeleeActionEnd
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EMeleeAction                   ActionEnded                    (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaAiController::STATIC_OnMeleeActionEnd(EMeleeAction ActionEnded)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiController.OnMeleeActionEnd");

	AIndianaAiController_OnMeleeActionEnd_Params params;
	params.ActionEnded = ActionEnded;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAiController.OnCombatStateChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bInCombat                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaAiController::STATIC_OnCombatStateChange(bool bInCombat, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiController.OnCombatStateChange");

	AIndianaAiController_OnCombatStateChange_Params params;
	params.bInCombat = bInCombat;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAiController.OnBehaviorStateChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UBehaviorStateInfo*      OldBehaviorStateInfo           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UBehaviorStateInfo*      NewBehaviorStateInfo           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void AIndianaAiController::STATIC_OnBehaviorStateChange(class UBehaviorStateInfo* OldBehaviorStateInfo, class UBehaviorStateInfo* NewBehaviorStateInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiController.OnBehaviorStateChange");

	AIndianaAiController_OnBehaviorStateChange_Params params;
	params.OldBehaviorStateInfo = OldBehaviorStateInfo;
	params.NewBehaviorStateInfo = NewBehaviorStateInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAiController.GetSightAwarenessIncreaseRate
// (BlueprintAuthorityOnly, BlueprintCosmetic)
// Parameters:
// bool                           bIsStealthed                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            OwnerPerceptionSkill           (Parm, ZeroConstructor, IsPlainOldData)
// int                            TargetSneakSkill               (Parm, ZeroConstructor, IsPlainOldData)
// EAlertState                    InAlertState                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          SightRadius                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowTargeting                (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AIndianaAiController::GetSightAwarenessIncreaseRate(bool bIsStealthed, int OwnerPerceptionSkill, int TargetSneakSkill, EAlertState InAlertState, float Distance, float SightRadius, bool bAllowTargeting)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiController.GetSightAwarenessIncreaseRate");

	AIndianaAiController_GetSightAwarenessIncreaseRate_Params params;
	params.bIsStealthed = bIsStealthed;
	params.OwnerPerceptionSkill = OwnerPerceptionSkill;
	params.TargetSneakSkill = TargetSneakSkill;
	params.InAlertState = InAlertState;
	params.Distance = Distance;
	params.SightRadius = SightRadius;
	params.bAllowTargeting = bAllowTargeting;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaAiController.GetSightAwarenessDecreaseRate
// ()
// Parameters:
// bool                           bIsStealthed                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            OwnerPerceptionSkill           (Parm, ZeroConstructor, IsPlainOldData)
// int                            TargetSneakSkill               (Parm, ZeroConstructor, IsPlainOldData)
// EAlertState                    InAlertState                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bLost                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDeadBodyKiller                (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AIndianaAiController::GetSightAwarenessDecreaseRate(bool bIsStealthed, int OwnerPerceptionSkill, int TargetSneakSkill, EAlertState InAlertState, bool bLost, bool bDeadBodyKiller)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiController.GetSightAwarenessDecreaseRate");

	AIndianaAiController_GetSightAwarenessDecreaseRate_Params params;
	params.bIsStealthed = bIsStealthed;
	params.OwnerPerceptionSkill = OwnerPerceptionSkill;
	params.TargetSneakSkill = TargetSneakSkill;
	params.InAlertState = InAlertState;
	params.bLost = bLost;
	params.bDeadBodyKiller = bDeadBodyKiller;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaAiController.GetFootstepAwarenessIncrease
// (BlueprintAuthorityOnly, BlueprintCosmetic)
// Parameters:
// bool                           bIsStealthed                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            OwnerPerceptionSkill           (Parm, ZeroConstructor, IsPlainOldData)
// int                            TargetSneakSkill               (Parm, ZeroConstructor, IsPlainOldData)
// EAlertState                    InAlertState                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          BaseFootstepAwareness          (Parm, ZeroConstructor, IsPlainOldData)
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          SoundRadius                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AIndianaAiController::GetFootstepAwarenessIncrease(bool bIsStealthed, int OwnerPerceptionSkill, int TargetSneakSkill, EAlertState InAlertState, float BaseFootstepAwareness, float Distance, float SoundRadius)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiController.GetFootstepAwarenessIncrease");

	AIndianaAiController_GetFootstepAwarenessIncrease_Params params;
	params.bIsStealthed = bIsStealthed;
	params.OwnerPerceptionSkill = OwnerPerceptionSkill;
	params.TargetSneakSkill = TargetSneakSkill;
	params.InAlertState = InAlertState;
	params.BaseFootstepAwareness = BaseFootstepAwareness;
	params.Distance = Distance;
	params.SoundRadius = SoundRadius;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaAiController.GetCurrentTargetDistance
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AIndianaAiController::GetCurrentTargetDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiController.GetCurrentTargetDistance");

	AIndianaAiController_GetCurrentTargetDistance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaAiController.AIScriptWander
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaAiCharacter*     InCharacter                    (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaAiController::STATIC_AIScriptWander(class AIndianaAiCharacter* InCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiController.AIScriptWander");

	AIndianaAiController_AIScriptWander_Params params;
	params.InCharacter = InCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAiController.AIScriptPatrolInterruptible
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaAiCharacter*     InCharacter                    (Parm, ZeroConstructor, IsPlainOldData)
// class APatrolNode*             InPatrolNode                   (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaAiController::STATIC_AIScriptPatrolInterruptible(class AIndianaAiCharacter* InCharacter, class APatrolNode* InPatrolNode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiController.AIScriptPatrolInterruptible");

	AIndianaAiController_AIScriptPatrolInterruptible_Params params;
	params.InCharacter = InCharacter;
	params.InPatrolNode = InPatrolNode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAiController.AIScriptPatrol
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaAiCharacter*     InCharacter                    (Parm, ZeroConstructor, IsPlainOldData)
// class APatrolNode*             InPatrolNode                   (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaAiController::STATIC_AIScriptPatrol(class AIndianaAiCharacter* InCharacter, class APatrolNode* InPatrolNode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiController.AIScriptPatrol");

	AIndianaAiController_AIScriptPatrol_Params params;
	params.InCharacter = InCharacter;
	params.InPatrolNode = InPatrolNode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAiController.AIScriptIdle
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaAiCharacter*     InCharacter                    (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaAiController::STATIC_AIScriptIdle(class AIndianaAiCharacter* InCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiController.AIScriptIdle");

	AIndianaAiController_AIScriptIdle_Params params;
	params.InCharacter = InCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAiController.AIScriptFollowPlayer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaAiCharacter*     InCharacter                    (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaAiController::STATIC_AIScriptFollowPlayer(class AIndianaAiCharacter* InCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiController.AIScriptFollowPlayer");

	AIndianaAiController_AIScriptFollowPlayer_Params params;
	params.InCharacter = InCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAiController.AIScriptEncounterAttackEncounter
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AEncounter*              InEncounter                    (Parm, ZeroConstructor, IsPlainOldData)
// class AEncounter*              InTargetEncounter              (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaAiController::STATIC_AIScriptEncounterAttackEncounter(class AEncounter* InEncounter, class AEncounter* InTargetEncounter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiController.AIScriptEncounterAttackEncounter");

	AIndianaAiController_AIScriptEncounterAttackEncounter_Params params;
	params.InEncounter = InEncounter;
	params.InTargetEncounter = InTargetEncounter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAiController.AIScriptEncounterAttack
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaAiCharacter*     InCharacter                    (Parm, ZeroConstructor, IsPlainOldData)
// class AEncounter*              InTargetEncounter              (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaAiController::STATIC_AIScriptEncounterAttack(class AIndianaAiCharacter* InCharacter, class AEncounter* InTargetEncounter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiController.AIScriptEncounterAttack");

	AIndianaAiController_AIScriptEncounterAttack_Params params;
	params.InCharacter = InCharacter;
	params.InTargetEncounter = InTargetEncounter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAiController.AIScriptClearScripts
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaAiCharacter*     InCharacter                    (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaAiController::STATIC_AIScriptClearScripts(class AIndianaAiCharacter* InCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiController.AIScriptClearScripts");

	AIndianaAiController_AIScriptClearScripts_Params params;
	params.InCharacter = InCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAiController.AIScriptCharactersAttackCharacters
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// TArray<class AIndianaAiCharacter*> InCharacters                   (Parm, ZeroConstructor)
// TArray<class AIndianaAiCharacter*> InTargetCharacters             (Parm, ZeroConstructor)

void AIndianaAiController::STATIC_AIScriptCharactersAttackCharacters(TArray<class AIndianaAiCharacter*> InCharacters, TArray<class AIndianaAiCharacter*> InTargetCharacters)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiController.AIScriptCharactersAttackCharacters");

	AIndianaAiController_AIScriptCharactersAttackCharacters_Params params;
	params.InCharacters = InCharacters;
	params.InTargetCharacters = InTargetCharacters;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAiController.AIScriptAttackEncounter
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AEncounter*              InEncounter                    (Parm, ZeroConstructor, IsPlainOldData)
// class AIndianaCharacter*       InTargetCharacter              (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaAiController::STATIC_AIScriptAttackEncounter(class AEncounter* InEncounter, class AIndianaCharacter* InTargetCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiController.AIScriptAttackEncounter");

	AIndianaAiController_AIScriptAttackEncounter_Params params;
	params.InEncounter = InEncounter;
	params.InTargetCharacter = InTargetCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAiController.AIScriptAttack
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaAiCharacter*     InCharacter                    (Parm, ZeroConstructor, IsPlainOldData)
// class AIndianaCharacter*       InTargetCharacter              (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaAiController::STATIC_AIScriptAttack(class AIndianaAiCharacter* InCharacter, class AIndianaCharacter* InTargetCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAiController.AIScriptAttack");

	AIndianaAiController_AIScriptAttack_Params params;
	params.InCharacter = InCharacter;
	params.InTargetCharacter = InTargetCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAIPerceptionComponent.OnStatUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class URpgStat*                Stat                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UIndianaAIPerceptionComponent::STATIC_OnStatUpdated(class URpgStat* Stat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAIPerceptionComponent.OnStatUpdated");

	UIndianaAIPerceptionComponent_OnStatUpdated_Params params;
	params.Stat = Stat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAIPerceptionComponent.OnPerceptionRangeScalarUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGameplayTagContainer   CreatureType                   (ConstParm, Parm, OutParm, ReferenceParm)

void UIndianaAIPerceptionComponent::STATIC_OnPerceptionRangeScalarUpdated(const struct FGameplayTagContainer& CreatureType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAIPerceptionComponent.OnPerceptionRangeScalarUpdated");

	UIndianaAIPerceptionComponent_OnPerceptionRangeScalarUpdated_Params params;
	params.CreatureType = CreatureType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAIPerceptionComponent.OnGodVisionChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bGodVision                     (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaAIPerceptionComponent::STATIC_OnGodVisionChanged(bool bGodVision)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAIPerceptionComponent.OnGodVisionChanged");

	UIndianaAIPerceptionComponent_OnGodVisionChanged_Params params;
	params.bGodVision = bGodVision;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAIPerceptionComponent.OnCombatStateChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bIsInCombat                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaAIPerceptionComponent::STATIC_OnCombatStateChanged(bool bIsInCombat, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAIPerceptionComponent.OnCombatStateChanged");

	UIndianaAIPerceptionComponent_OnCombatStateChanged_Params params;
	params.bIsInCombat = bIsInCombat;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAIPerceptionComponent.OnCharacterDeath
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FCauseDamageInfo        CauseDamageInfo                (ConstParm, Parm, OutParm, ReferenceParm)

void UIndianaAIPerceptionComponent::STATIC_OnCharacterDeath(class AActor* Instigator, const struct FCauseDamageInfo& CauseDamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAIPerceptionComponent.OnCharacterDeath");

	UIndianaAIPerceptionComponent_OnCharacterDeath_Params params;
	params.Instigator = Instigator;
	params.CauseDamageInfo = CauseDamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAIPerceptionComponent.OnBehaviorTreeInitialized
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaAIPerceptionComponent::STATIC_OnBehaviorTreeInitialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAIPerceptionComponent.OnBehaviorTreeInitialized");

	UIndianaAIPerceptionComponent_OnBehaviorTreeInitialized_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAudioComponent.OnStopClimb
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaAudioComponent::STATIC_OnStopClimb()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAudioComponent.OnStopClimb");

	UIndianaAudioComponent_OnStopClimb_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAudioComponent.OnStartClimb
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaAudioComponent::STATIC_OnStartClimb()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAudioComponent.OnStartClimb");

	UIndianaAudioComponent_OnStartClimb_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAudioComponent.OnSpecialMovementEvent
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ESpecialMovementEvent          SpecialEvent                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 Normal                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// TEnumAsByte<EPhysicalSurface>  PhysMaterial                   (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaAudioComponent::STATIC_OnSpecialMovementEvent(ESpecialMovementEvent SpecialEvent, const struct FVector& Position, const struct FVector& Normal, TEnumAsByte<EPhysicalSurface> PhysMaterial)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAudioComponent.OnSpecialMovementEvent");

	UIndianaAudioComponent_OnSpecialMovementEvent_Params params;
	params.SpecialEvent = SpecialEvent;
	params.Position = Position;
	params.Normal = Normal;
	params.PhysMaterial = PhysMaterial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAudioComponent.OnNewStateOfBeing
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EStateOfBeing                  NewStateOfBeing                (Parm, ZeroConstructor, IsPlainOldData)
// EStateOfBeing                  OldStateOfBeing                (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaAudioComponent::STATIC_OnNewStateOfBeing(EStateOfBeing NewStateOfBeing, EStateOfBeing OldStateOfBeing)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAudioComponent.OnNewStateOfBeing");

	UIndianaAudioComponent_OnNewStateOfBeing_Params params;
	params.NewStateOfBeing = NewStateOfBeing;
	params.OldStateOfBeing = OldStateOfBeing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAudioComponent.OnNewFootstepData
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UFootstepData*           NewData                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UIndianaAudioComponent::STATIC_OnNewFootstepData(class UFootstepData* NewData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAudioComponent.OnNewFootstepData");

	UIndianaAudioComponent_OnNewFootstepData_Params params;
	params.NewData = NewData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAudioComponent.OnLanded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          FallDistance                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 Normal                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// TEnumAsByte<EPhysicalSurface>  PhysMaterial                   (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaAudioComponent::STATIC_OnLanded(float FallDistance, const struct FVector& Position, const struct FVector& Normal, TEnumAsByte<EPhysicalSurface> PhysMaterial)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAudioComponent.OnLanded");

	UIndianaAudioComponent_OnLanded_Params params;
	params.FallDistance = FallDistance;
	params.Position = Position;
	params.Normal = Normal;
	params.PhysMaterial = PhysMaterial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAudioComponent.OnFootstep
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EFootID                        FootID                         (Parm, ZeroConstructor, IsPlainOldData)
// EFootstepType                  FootstepType                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 Normal                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// TEnumAsByte<EPhysicalSurface>  PhysMaterial                   (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaAudioComponent::STATIC_OnFootstep(EFootID FootID, EFootstepType FootstepType, const struct FVector& Position, const struct FVector& Normal, TEnumAsByte<EPhysicalSurface> PhysMaterial)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAudioComponent.OnFootstep");

	UIndianaAudioComponent_OnFootstep_Params params;
	params.FootID = FootID;
	params.FootstepType = FootstepType;
	params.Position = Position;
	params.Normal = Normal;
	params.PhysMaterial = PhysMaterial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAudioComponent.OnDodge
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EDodgeDirection                Direction                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 Normal                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// TEnumAsByte<EPhysicalSurface>  PhysMaterial                   (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaAudioComponent::STATIC_OnDodge(EDodgeDirection Direction, const struct FVector& Position, const struct FVector& Normal, TEnumAsByte<EPhysicalSurface> PhysMaterial)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAudioComponent.OnDodge");

	UIndianaAudioComponent_OnDodge_Params params;
	params.Direction = Direction;
	params.Position = Position;
	params.Normal = Normal;
	params.PhysMaterial = PhysMaterial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAudioComponent.OnCharacterMovementUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 OldLocation                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 OldVelocity                    (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaAudioComponent::STATIC_OnCharacterMovementUpdated(float DeltaSeconds, const struct FVector& OldLocation, const struct FVector& OldVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAudioComponent.OnCharacterMovementUpdated");

	UIndianaAudioComponent_OnCharacterMovementUpdated_Params params;
	params.DeltaSeconds = DeltaSeconds;
	params.OldLocation = OldLocation;
	params.OldVelocity = OldVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAutoPlayer.StopAutoPlayer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaAutoPlayer::STATIC_StopAutoPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAutoPlayer.StopAutoPlayer");

	UIndianaAutoPlayer_StopAutoPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAutoPlayer.StartAutoPlayer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaAutoPlayer::STATIC_StartAutoPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAutoPlayer.StartAutoPlayer");

	UIndianaAutoPlayer_StartAutoPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaAutoPlayer.OnAsyncSaveComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ESaveGameResult                Result                         (Parm, ZeroConstructor, IsPlainOldData)
// ESaveGameType                  SaveType                       (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaAutoPlayer::STATIC_OnAsyncSaveComplete(ESaveGameResult Result, ESaveGameType SaveType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaAutoPlayer.OnAsyncSaveComplete");

	UIndianaAutoPlayer_OnAsyncSaveComplete_Params params;
	params.Result = Result;
	params.SaveType = SaveType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaBossBar.OnEndBossFight
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaBossBar::STATIC_OnEndBossFight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaBossBar.OnEndBossFight");

	UIndianaBossBar_OnEndBossFight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaBossBar.OnBossHealthChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          NormalizedHealth               (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaBossBar::STATIC_OnBossHealthChanged(float NormalizedHealth)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaBossBar.OnBossHealthChanged");

	UIndianaBossBar_OnBossHealthChanged_Params params;
	params.NormalizedHealth = NormalizedHealth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaBossBar.OnBeginBossFight
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaCharacter*       OwnerCharacter                 (Parm, ZeroConstructor, IsPlainOldData)
// class FString                  BossName                       (Parm, ZeroConstructor)
// float                          StartingNormalizedHealth       (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaBossBar::STATIC_OnBeginBossFight(class AIndianaCharacter* OwnerCharacter, const class FString& BossName, float StartingNormalizedHealth)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaBossBar.OnBeginBossFight");

	UIndianaBossBar_OnBeginBossFight_Params params;
	params.OwnerCharacter = OwnerCharacter;
	params.BossName = BossName;
	params.StartingNormalizedHealth = StartingNormalizedHealth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaBossBar.GetShowAnimation
// ()
// Parameters:
// class UWidgetAnimation*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWidgetAnimation* UIndianaBossBar::GetShowAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaBossBar.GetShowAnimation");

	UIndianaBossBar_GetShowAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaBossBar.GetHideAnimation
// ()
// Parameters:
// class UWidgetAnimation*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWidgetAnimation* UIndianaBossBar::GetHideAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaBossBar.GetHideAnimation");

	UIndianaBossBar_GetHideAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaCharacterDummy.OnWeaponEndEquip
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AIndianaCharacterDummy::STATIC_OnWeaponEndEquip(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaCharacterDummy.OnWeaponEndEquip");

	AIndianaCharacterDummy_OnWeaponEndEquip_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaCharacterDummy.CopyFromCharacter
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaCharacter*       Character                      (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaCharacterDummy::STATIC_CopyFromCharacter(class AIndianaCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaCharacterDummy.CopyFromCharacter");

	AIndianaCharacterDummy_CopyFromCharacter_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaCheatManager.SetLevelNPC
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            NewLevel                       (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaCheatManager::STATIC_SetLevelNPC(int NewLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaCheatManager.SetLevelNPC");

	UIndianaCheatManager_SetLevelNPC_Params params;
	params.NewLevel = NewLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaCheatManager.LootTableDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  LootTable                      (Parm, ZeroConstructor)
// int                            NumTimes                       (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaCheatManager::STATIC_LootTableDebug(const class FString& LootTable, int NumTimes)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaCheatManager.LootTableDebug");

	UIndianaCheatManager_LootTableDebug_Params params;
	params.LootTable = LootTable;
	params.NumTimes = NumTimes;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaCheatManager.GivePlayerAllItems
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaCheatManager::STATIC_GivePlayerAllItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaCheatManager.GivePlayerAllItems");

	UIndianaCheatManager_GivePlayerAllItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaCheatManager.DropAllItemsDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bSplitStacks                   (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaCheatManager::STATIC_DropAllItemsDebug(bool bSplitStacks)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaCheatManager.DropAllItemsDebug");

	UIndianaCheatManager_DropAllItemsDebug_Params params;
	params.bSplitStacks = bSplitStacks;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaDamageType.TriggerMuzzleFx
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class USceneComponent*         AttachComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UIndianaDamageType::STATIC_TriggerMuzzleFx(class USceneComponent* AttachComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaDamageType.TriggerMuzzleFx");

	UIndianaDamageType_TriggerMuzzleFx_Params params;
	params.AttachComponent = AttachComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaDamageType.SetupSecondaryImpactFx
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UParticleSystemComponent* ParentEffect                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bGraze                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bCritical                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bWeakSpot                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRadial                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaDamageType::STATIC_SetupSecondaryImpactFx(class UParticleSystemComponent* ParentEffect, bool bGraze, bool bCritical, bool bWeakSpot, bool bRadial, float Radius)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaDamageType.SetupSecondaryImpactFx");

	UIndianaDamageType_SetupSecondaryImpactFx_Params params;
	params.ParentEffect = ParentEffect;
	params.bGraze = bGraze;
	params.bCritical = bCritical;
	params.bWeakSpot = bWeakSpot;
	params.bRadial = bRadial;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaDamageType.SetupImpactFx
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UParticleSystemComponent* ParentEffect                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bGraze                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bCritical                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bWeakSpot                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRadial                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaDamageType::STATIC_SetupImpactFx(class UParticleSystemComponent* ParentEffect, bool bGraze, bool bCritical, bool bWeakSpot, bool bRadial, float Radius)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaDamageType.SetupImpactFx");

	UIndianaDamageType_SetupImpactFx_Params params;
	params.ParentEffect = ParentEffect;
	params.bGraze = bGraze;
	params.bCritical = bCritical;
	params.bWeakSpot = bWeakSpot;
	params.bRadial = bRadial;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaFlybyAkComponent.UpdateEmitterLocation
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaFlybyAkComponent::STATIC_UpdateEmitterLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFlybyAkComponent.UpdateEmitterLocation");

	UIndianaFlybyAkComponent_UpdateEmitterLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaFlybyAkComponent.InitializeEmitter
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaFlybyAkComponent::STATIC_InitializeEmitter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFlybyAkComponent.InitializeEmitter");

	UIndianaFlybyAkComponent_InitializeEmitter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaFlybyAkComponent.DeactivateEmitter
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaFlybyAkComponent::STATIC_DeactivateEmitter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFlybyAkComponent.DeactivateEmitter");

	UIndianaFlybyAkComponent_DeactivateEmitter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaFormulas.WorkbenchRepairPartCost
// (BlueprintAuthorityOnly, BlueprintCosmetic)
// Parameters:
// float                          Durability                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            ItemLevel                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            EngineerSkill                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UIndianaFormulas::WorkbenchRepairPartCost(float Durability, int ItemLevel, int EngineerSkill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.WorkbenchRepairPartCost");

	UIndianaFormulas_WorkbenchRepairPartCost_Params params;
	params.Durability = Durability;
	params.ItemLevel = ItemLevel;
	params.EngineerSkill = EngineerSkill;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.VendorRepairCurrencyCost
// (BlueprintCosmetic)
// Parameters:
// float                          Durability                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            ItemLevel                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UIndianaFormulas::VendorRepairCurrencyCost(float Durability, int ItemLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.VendorRepairCurrencyCost");

	UIndianaFormulas_VendorRepairCurrencyCost_Params params;
	params.Durability = Durability;
	params.ItemLevel = ItemLevel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.TrapToughness
// (RequiredAPI)
// Parameters:
// unsigned char                  ExactTrapDifficulty            (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  PlayerEngineeringSkill         (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UIndianaFormulas::TrapToughness(unsigned char ExactTrapDifficulty, unsigned char PlayerEngineeringSkill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.TrapToughness");

	UIndianaFormulas_TrapToughness_Params params;
	params.ExactTrapDifficulty = ExactTrapDifficulty;
	params.PlayerEngineeringSkill = PlayerEngineeringSkill;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.TrapDisarmNoise
// (BlueprintAuthorityOnly)
// Parameters:
// unsigned char                  ExactTrapDifficulty            (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  PlayerEngineeringSkill         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaFormulas::TrapDisarmNoise(unsigned char ExactTrapDifficulty, unsigned char PlayerEngineeringSkill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.TrapDisarmNoise");

	UIndianaFormulas_TrapDisarmNoise_Params params;
	params.ExactTrapDifficulty = ExactTrapDifficulty;
	params.PlayerEngineeringSkill = PlayerEngineeringSkill;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.TrapDifficultyRange
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaFormulas::TrapDifficultyRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.TrapDifficultyRange");

	UIndianaFormulas_TrapDifficultyRange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.TrapDifficultyNumRanges
// ()
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UIndianaFormulas::TrapDifficultyNumRanges()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.TrapDifficultyNumRanges");

	UIndianaFormulas_TrapDifficultyNumRanges_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.TrapDifficultyFullRange
// ()
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UIndianaFormulas::TrapDifficultyFullRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.TrapDifficultyFullRange");

	UIndianaFormulas_TrapDifficultyFullRange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.TrapDamagePercent
// (BlueprintAuthorityOnly)
// Parameters:
// ETrapDifficulty                TrapDifficulty                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaFormulas::TrapDamagePercent(ETrapDifficulty TrapDifficulty)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.TrapDamagePercent");

	UIndianaFormulas_TrapDamagePercent_Params params;
	params.TrapDifficulty = TrapDifficulty;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.TrapArmNoise
// (BlueprintAuthorityOnly)
// Parameters:
// unsigned char                  ExactTrapDifficulty            (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  PlayerEngineeringSkill         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaFormulas::TrapArmNoise(unsigned char ExactTrapDifficulty, unsigned char PlayerEngineeringSkill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.TrapArmNoise");

	UIndianaFormulas_TrapArmNoise_Params params;
	params.ExactTrapDifficulty = ExactTrapDifficulty;
	params.PlayerEngineeringSkill = PlayerEngineeringSkill;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.ShouldDrawFireSwitchCompanionTargets
// (BlueprintCosmetic)
// Parameters:
// float                          OldHealth                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          OldDTBody                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          OldDTHead                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          NewHealth                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          NewDTBody                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          NewDTHead                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaFormulas::ShouldDrawFireSwitchCompanionTargets(float OldHealth, float OldDTBody, float OldDTHead, float NewHealth, float NewDTBody, float NewDTHead)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.ShouldDrawFireSwitchCompanionTargets");

	UIndianaFormulas_ShouldDrawFireSwitchCompanionTargets_Params params;
	params.OldHealth = OldHealth;
	params.OldDTBody = OldDTBody;
	params.OldDTHead = OldDTHead;
	params.NewHealth = NewHealth;
	params.NewDTBody = NewDTBody;
	params.NewDTHead = NewDTHead;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.PlayerSneakEnemyDetectionRage
// (BlueprintAuthorityOnly)
// Parameters:
// bool                           bInterior                      (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  PlayerSneakSkill               (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaFormulas::PlayerSneakEnemyDetectionRage(bool bInterior, unsigned char PlayerSneakSkill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.PlayerSneakEnemyDetectionRage");

	UIndianaFormulas_PlayerSneakEnemyDetectionRage_Params params;
	params.bInterior = bInterior;
	params.PlayerSneakSkill = PlayerSneakSkill;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.PickPocketTime
// (BlueprintCosmetic)
// Parameters:
// int                            LockpickSkill                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            TargetPerception               (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaFormulas::PickPocketTime(int LockpickSkill, int TargetPerception)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.PickPocketTime");

	UIndianaFormulas_PickPocketTime_Params params;
	params.LockpickSkill = LockpickSkill;
	params.TargetPerception = TargetPerception;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.LockpickToughness
// (RequiredAPI)
// Parameters:
// unsigned char                  ExactLockpickDifficulty        (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  PlayerLockpickSkill            (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UIndianaFormulas::LockpickToughness(unsigned char ExactLockpickDifficulty, unsigned char PlayerLockpickSkill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.LockpickToughness");

	UIndianaFormulas_LockpickToughness_Params params;
	params.ExactLockpickDifficulty = ExactLockpickDifficulty;
	params.PlayerLockpickSkill = PlayerLockpickSkill;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.LockpickTime
// (BlueprintAuthorityOnly)
// Parameters:
// unsigned char                  ExactLockpickDifficulty        (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  PlayerLockpickSkill            (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  BasePlayerLockpickSkill        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaFormulas::LockpickTime(unsigned char ExactLockpickDifficulty, unsigned char PlayerLockpickSkill, unsigned char BasePlayerLockpickSkill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.LockpickTime");

	UIndianaFormulas_LockpickTime_Params params;
	params.ExactLockpickDifficulty = ExactLockpickDifficulty;
	params.PlayerLockpickSkill = PlayerLockpickSkill;
	params.BasePlayerLockpickSkill = BasePlayerLockpickSkill;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.LockpickNumResources
// (Final, RequiredAPI)
// Parameters:
// unsigned char                  ExactLockpickDifficulty        (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  PlayerLockpickSkill            (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  BasePlayerLockpickSkill        (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UIndianaFormulas::LockpickNumResources(unsigned char ExactLockpickDifficulty, unsigned char PlayerLockpickSkill, unsigned char BasePlayerLockpickSkill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.LockpickNumResources");

	UIndianaFormulas_LockpickNumResources_Params params;
	params.ExactLockpickDifficulty = ExactLockpickDifficulty;
	params.PlayerLockpickSkill = PlayerLockpickSkill;
	params.BasePlayerLockpickSkill = BasePlayerLockpickSkill;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.LockpickNoise
// (BlueprintAuthorityOnly)
// Parameters:
// unsigned char                  ExactLockpickDifficulty        (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  PlayerLockpickSkill            (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaFormulas::LockpickNoise(unsigned char ExactLockpickDifficulty, unsigned char PlayerLockpickSkill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.LockpickNoise");

	UIndianaFormulas_LockpickNoise_Params params;
	params.ExactLockpickDifficulty = ExactLockpickDifficulty;
	params.PlayerLockpickSkill = PlayerLockpickSkill;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.LockpickDifficultyRange
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaFormulas::LockpickDifficultyRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.LockpickDifficultyRange");

	UIndianaFormulas_LockpickDifficultyRange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.LockpickDifficultyNumRanges
// ()
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UIndianaFormulas::LockpickDifficultyNumRanges()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.LockpickDifficultyNumRanges");

	UIndianaFormulas_LockpickDifficultyNumRanges_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.LockpickDifficultyFullRange
// ()
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UIndianaFormulas::LockpickDifficultyFullRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.LockpickDifficultyFullRange");

	UIndianaFormulas_LockpickDifficultyFullRange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.HackToughness
// (RequiredAPI)
// Parameters:
// unsigned char                  ExactHackDifficulty            (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  PlayerHackSkill                (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UIndianaFormulas::HackToughness(unsigned char ExactHackDifficulty, unsigned char PlayerHackSkill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.HackToughness");

	UIndianaFormulas_HackToughness_Params params;
	params.ExactHackDifficulty = ExactHackDifficulty;
	params.PlayerHackSkill = PlayerHackSkill;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.HackTime
// (RequiredAPI)
// Parameters:
// unsigned char                  ExactHackDifficulty            (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  PlayerHackSkill                (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UIndianaFormulas::HackTime(unsigned char ExactHackDifficulty, unsigned char PlayerHackSkill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.HackTime");

	UIndianaFormulas_HackTime_Params params;
	params.ExactHackDifficulty = ExactHackDifficulty;
	params.PlayerHackSkill = PlayerHackSkill;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.HackRobotTime
// (RequiredAPI)
// Parameters:
// unsigned char                  ExactHackDifficulty            (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  PlayerHackSkill                (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UIndianaFormulas::HackRobotTime(unsigned char ExactHackDifficulty, unsigned char PlayerHackSkill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.HackRobotTime");

	UIndianaFormulas_HackRobotTime_Params params;
	params.ExactHackDifficulty = ExactHackDifficulty;
	params.PlayerHackSkill = PlayerHackSkill;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.HackNumResources
// (RequiredAPI)
// Parameters:
// unsigned char                  ExactHackDifficulty            (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  PlayerHackSkill                (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UIndianaFormulas::HackNumResources(unsigned char ExactHackDifficulty, unsigned char PlayerHackSkill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.HackNumResources");

	UIndianaFormulas_HackNumResources_Params params;
	params.ExactHackDifficulty = ExactHackDifficulty;
	params.PlayerHackSkill = PlayerHackSkill;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.HackNoise
// (BlueprintAuthorityOnly)
// Parameters:
// unsigned char                  ExactHackDifficulty            (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  PlayerHackSkill                (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaFormulas::HackNoise(unsigned char ExactHackDifficulty, unsigned char PlayerHackSkill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.HackNoise");

	UIndianaFormulas_HackNoise_Params params;
	params.ExactHackDifficulty = ExactHackDifficulty;
	params.PlayerHackSkill = PlayerHackSkill;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.HackDifficultyRange
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaFormulas::HackDifficultyRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.HackDifficultyRange");

	UIndianaFormulas_HackDifficultyRange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.HackDifficultyNumRanges
// ()
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UIndianaFormulas::HackDifficultyNumRanges()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.HackDifficultyNumRanges");

	UIndianaFormulas_HackDifficultyNumRanges_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.HackDifficultyFullRange
// ()
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UIndianaFormulas::HackDifficultyFullRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.HackDifficultyFullRange");

	UIndianaFormulas_HackDifficultyFullRange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.GetRespecCost
// (BlueprintAuthorityOnly)
// Parameters:
// int                            NumRespecs                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UIndianaFormulas::GetRespecCost(int NumRespecs)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.GetRespecCost");

	UIndianaFormulas_GetRespecCost_Params params;
	params.NumRespecs = NumRespecs;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.GetModifiedItemEffectiveness
// (BlueprintCosmetic)
// Parameters:
// class UDegradableItem*         Item                           (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaFormulas::GetModifiedItemEffectiveness(class UDegradableItem* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.GetModifiedItemEffectiveness");

	UIndianaFormulas_GetModifiedItemEffectiveness_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.GetInterrogationBribeAmount
// (BlueprintAuthorityOnly)
// Parameters:
// ECrimeType                     CrimeType                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestrictedArea                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDisguised                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            DisguiseInterrogationsPassed   (Parm, ZeroConstructor, IsPlainOldData)
// int                            PlayerLevel                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            MerchantSkill                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            StolenItemsValue               (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UIndianaFormulas::GetInterrogationBribeAmount(ECrimeType CrimeType, bool bRestrictedArea, bool bDisguised, int DisguiseInterrogationsPassed, int PlayerLevel, int MerchantSkill, int StolenItemsValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.GetInterrogationBribeAmount");

	UIndianaFormulas_GetInterrogationBribeAmount_Params params;
	params.CrimeType = CrimeType;
	params.bRestrictedArea = bRestrictedArea;
	params.bDisguised = bDisguised;
	params.DisguiseInterrogationsPassed = DisguiseInterrogationsPassed;
	params.PlayerLevel = PlayerLevel;
	params.MerchantSkill = MerchantSkill;
	params.StolenItemsValue = StolenItemsValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.GetDisguiseDrainRate
// (BlueprintCosmetic)
// Parameters:
// int                            StealthSkill                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bMoving                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSprinting                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bCrouching                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaFormulas::GetDisguiseDrainRate(int StealthSkill, bool bMoving, bool bSprinting, bool bCrouching)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.GetDisguiseDrainRate");

	UIndianaFormulas_GetDisguiseDrainRate_Params params;
	params.StealthSkill = StealthSkill;
	params.bMoving = bMoving;
	params.bSprinting = bSprinting;
	params.bCrouching = bCrouching;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.GetBribeAmount
// (BlueprintAuthorityOnly, BlueprintCosmetic)
// Parameters:
// EBribeDifficulty               BribeDifficulty                (Parm, ZeroConstructor, IsPlainOldData)
// int                            Level                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            MerchantSkill                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UIndianaFormulas::GetBribeAmount(EBribeDifficulty BribeDifficulty, int Level, int MerchantSkill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.GetBribeAmount");

	UIndianaFormulas_GetBribeAmount_Params params;
	params.BribeDifficulty = BribeDifficulty;
	params.Level = Level;
	params.MerchantSkill = MerchantSkill;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.FieldRepairPartCost
// (BlueprintAuthorityOnly, BlueprintCosmetic)
// Parameters:
// float                          Durability                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            ItemLevel                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            EngineerSkill                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UIndianaFormulas::FieldRepairPartCost(float Durability, int ItemLevel, int EngineerSkill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.FieldRepairPartCost");

	UIndianaFormulas_FieldRepairPartCost_Params params;
	params.Durability = Durability;
	params.ItemLevel = ItemLevel;
	params.EngineerSkill = EngineerSkill;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.DoesHackSkillUnlockRestrictedStock
// (BlueprintAuthorityOnly)
// Parameters:
// int                            HackSkill                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaFormulas::DoesHackSkillUnlockRestrictedStock(int HackSkill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.DoesHackSkillUnlockRestrictedStock");

	UIndianaFormulas_DoesHackSkillUnlockRestrictedStock_Params params;
	params.HackSkill = HackSkill;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.DisarmTime
// (RequiredAPI)
// Parameters:
// unsigned char                  ExactTrapDifficulty            (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  PlayerEngineeringSkill         (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UIndianaFormulas::DisarmTime(unsigned char ExactTrapDifficulty, unsigned char PlayerEngineeringSkill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.DisarmTime");

	UIndianaFormulas_DisarmTime_Params params;
	params.ExactTrapDifficulty = ExactTrapDifficulty;
	params.PlayerEngineeringSkill = PlayerEngineeringSkill;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.ConversationSkillNearMissThreshold
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UIndianaFormulas::ConversationSkillNearMissThreshold()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.ConversationSkillNearMissThreshold");

	UIndianaFormulas_ConversationSkillNearMissThreshold_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.ConversationNearMissMaxOptions
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UIndianaFormulas::ConversationNearMissMaxOptions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.ConversationNearMissMaxOptions");

	UIndianaFormulas_ConversationNearMissMaxOptions_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.ConversationAttributeNearMissThreshold
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UIndianaFormulas::ConversationAttributeNearMissThreshold()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.ConversationAttributeNearMissThreshold");

	UIndianaFormulas_ConversationAttributeNearMissThreshold_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.ComputeSkillValueToRange
// (BlueprintAuthorityOnly)
// Parameters:
// int                            SkillValue                     (Parm, ZeroConstructor, IsPlainOldData)
// ECharacterSkillRange           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECharacterSkillRange UIndianaFormulas::ComputeSkillValueToRange(int SkillValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.ComputeSkillValueToRange");

	UIndianaFormulas_ComputeSkillValueToRange_Params params;
	params.SkillValue = SkillValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.ComputeSkillPointsForSecondaryAttribute
// (BlueprintAuthorityOnly)
// Parameters:
// unsigned char                  AttributeRank                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UIndianaFormulas::ComputeSkillPointsForSecondaryAttribute(unsigned char AttributeRank)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.ComputeSkillPointsForSecondaryAttribute");

	UIndianaFormulas_ComputeSkillPointsForSecondaryAttribute_Params params;
	params.AttributeRank = AttributeRank;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.ComputeSkillPointsForPrimaryAttribute
// (BlueprintAuthorityOnly)
// Parameters:
// unsigned char                  AttributeRank                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UIndianaFormulas::ComputeSkillPointsForPrimaryAttribute(unsigned char AttributeRank)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.ComputeSkillPointsForPrimaryAttribute");

	UIndianaFormulas_ComputeSkillPointsForPrimaryAttribute_Params params;
	params.AttributeRank = AttributeRank;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.ComputeFallingDamagePercent
// (BlueprintAuthorityOnly)
// Parameters:
// float                          DistanceFallen                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaFormulas::ComputeFallingDamagePercent(float DistanceFallen)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.ComputeFallingDamagePercent");

	UIndianaFormulas_ComputeFallingDamagePercent_Params params;
	params.DistanceFallen = DistanceFallen;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.ComputeExactTrapDifficulty
// (Final)
// Parameters:
// ETrapDifficulty                TrapDifficulty                 (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UIndianaFormulas::ComputeExactTrapDifficulty(ETrapDifficulty TrapDifficulty)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.ComputeExactTrapDifficulty");

	UIndianaFormulas_ComputeExactTrapDifficulty_Params params;
	params.TrapDifficulty = TrapDifficulty;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.ComputeExactLockpickDifficulty
// (Final)
// Parameters:
// EOCLDifficulty                 LockpickDifficulty             (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UIndianaFormulas::ComputeExactLockpickDifficulty(EOCLDifficulty LockpickDifficulty)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.ComputeExactLockpickDifficulty");

	UIndianaFormulas_ComputeExactLockpickDifficulty_Params params;
	params.LockpickDifficulty = LockpickDifficulty;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.ComputeExactHackDifficulty
// (Final)
// Parameters:
// EOCLDifficulty                 HackDifficulty                 (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UIndianaFormulas::ComputeExactHackDifficulty(EOCLDifficulty HackDifficulty)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.ComputeExactHackDifficulty");

	UIndianaFormulas_ComputeExactHackDifficulty_Params params;
	params.HackDifficulty = HackDifficulty;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.CanLockpick
// (RequiredAPI)
// Parameters:
// unsigned char                  ExactLockpickDifficulty        (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  PlayerLockpickSkill            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaFormulas::CanLockpick(unsigned char ExactLockpickDifficulty, unsigned char PlayerLockpickSkill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.CanLockpick");

	UIndianaFormulas_CanLockpick_Params params;
	params.ExactLockpickDifficulty = ExactLockpickDifficulty;
	params.PlayerLockpickSkill = PlayerLockpickSkill;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.CanHack
// (RequiredAPI)
// Parameters:
// unsigned char                  ExactComputerDifficulty        (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  PlayerHackSkill                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaFormulas::CanHack(unsigned char ExactComputerDifficulty, unsigned char PlayerHackSkill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.CanHack");

	UIndianaFormulas_CanHack_Params params;
	params.ExactComputerDifficulty = ExactComputerDifficulty;
	params.PlayerHackSkill = PlayerHackSkill;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.CanDisarm
// (RequiredAPI)
// Parameters:
// unsigned char                  ExactTrapDifficulty            (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  PlayerEngineeringSkill         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaFormulas::CanDisarm(unsigned char ExactTrapDifficulty, unsigned char PlayerEngineeringSkill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.CanDisarm");

	UIndianaFormulas_CanDisarm_Params params;
	params.ExactTrapDifficulty = ExactTrapDifficulty;
	params.PlayerEngineeringSkill = PlayerEngineeringSkill;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.CanArm
// (RequiredAPI)
// Parameters:
// unsigned char                  ExactTrapDifficulty            (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  PlayerEngineeringSkill         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaFormulas::CanArm(unsigned char ExactTrapDifficulty, unsigned char PlayerEngineeringSkill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.CanArm");

	UIndianaFormulas_CanArm_Params params;
	params.ExactTrapDifficulty = ExactTrapDifficulty;
	params.PlayerEngineeringSkill = PlayerEngineeringSkill;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.CalculateTier3Count
// (BlueprintAuthorityOnly)
// Parameters:
// int                            ScienceSkill                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UIndianaFormulas::CalculateTier3Count(int ScienceSkill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.CalculateTier3Count");

	UIndianaFormulas_CalculateTier3Count_Params params;
	params.ScienceSkill = ScienceSkill;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.CalculateTier2Count
// (BlueprintAuthorityOnly)
// Parameters:
// int                            ScienceSkill                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UIndianaFormulas::CalculateTier2Count(int ScienceSkill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.CalculateTier2Count");

	UIndianaFormulas_CalculateTier2Count_Params params;
	params.ScienceSkill = ScienceSkill;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.CalculateTier1Count
// (BlueprintAuthorityOnly)
// Parameters:
// int                            ScienceSkill                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UIndianaFormulas::CalculateTier1Count(int ScienceSkill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.CalculateTier1Count");

	UIndianaFormulas_CalculateTier1Count_Params params;
	params.ScienceSkill = ScienceSkill;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.CalculatePartsRecoveredOnBreakdown
// (BlueprintAuthorityOnly, BlueprintCosmetic)
// Parameters:
// float                          Durability                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            ItemLevel                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFieldBreakdown                (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UIndianaFormulas::CalculatePartsRecoveredOnBreakdown(float Durability, int ItemLevel, bool bFieldBreakdown)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.CalculatePartsRecoveredOnBreakdown");

	UIndianaFormulas_CalculatePartsRecoveredOnBreakdown_Params params;
	params.Durability = Durability;
	params.ItemLevel = ItemLevel;
	params.bFieldBreakdown = bFieldBreakdown;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.CalculateMoraleAdjustment
// (BlueprintAuthorityOnly, BlueprintCosmetic)
// Parameters:
// float                          AddedMoral                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            CharmAttribute                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            TemperamentAttribute           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaFormulas::CalculateMoraleAdjustment(float AddedMoral, int CharmAttribute, int TemperamentAttribute)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.CalculateMoraleAdjustment");

	UIndianaFormulas_CalculateMoraleAdjustment_Params params;
	params.AddedMoral = AddedMoral;
	params.CharmAttribute = CharmAttribute;
	params.TemperamentAttribute = TemperamentAttribute;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.CalculateMerchantSkillDiscount
// (BlueprintAuthorityOnly)
// Parameters:
// int                            MerchantSkill                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaFormulas::CalculateMerchantSkillDiscount(int MerchantSkill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.CalculateMerchantSkillDiscount");

	UIndianaFormulas_CalculateMerchantSkillDiscount_Params params;
	params.MerchantSkill = MerchantSkill;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.CalculateItemEffectiveness
// (BlueprintCosmetic)
// Parameters:
// class UDegradableItem*         Item                           (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaFormulas::CalculateItemEffectiveness(class UDegradableItem* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.CalculateItemEffectiveness");

	UIndianaFormulas_CalculateItemEffectiveness_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.CalculateItemBasePrice
// (BlueprintAuthorityOnly, BlueprintCosmetic)
// Parameters:
// int                            BasePrice                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bPristine                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          Condition                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaFormulas::CalculateItemBasePrice(int BasePrice, bool bPristine, float Condition)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.CalculateItemBasePrice");

	UIndianaFormulas_CalculateItemBasePrice_Params params;
	params.BasePrice = BasePrice;
	params.bPristine = bPristine;
	params.Condition = Condition;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.CalculateIntialMorale
// (BlueprintAuthorityOnly)
// Parameters:
// int                            TemperamentAttribute           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaFormulas::CalculateIntialMorale(int TemperamentAttribute)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.CalculateIntialMorale");

	UIndianaFormulas_CalculateIntialMorale_Params params;
	params.TemperamentAttribute = TemperamentAttribute;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.CalculateGadgetSlots
// (BlueprintAuthorityOnly)
// Parameters:
// int                            ScienceSkill                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UIndianaFormulas::CalculateGadgetSlots(int ScienceSkill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.CalculateGadgetSlots");

	UIndianaFormulas_CalculateGadgetSlots_Params params;
	params.ScienceSkill = ScienceSkill;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.BaseRepairPartCost
// (BlueprintCosmetic)
// Parameters:
// float                          Durability                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            ItemLevel                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaFormulas::BaseRepairPartCost(float Durability, int ItemLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.BaseRepairPartCost");

	UIndianaFormulas_BaseRepairPartCost_Params params;
	params.Durability = Durability;
	params.ItemLevel = ItemLevel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaFormulas.ArmTime
// (RequiredAPI)
// Parameters:
// unsigned char                  ExactTrapDifficulty            (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  PlayerEngineeringSkill         (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UIndianaFormulas::ArmTime(unsigned char ExactTrapDifficulty, unsigned char PlayerEngineeringSkill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaFormulas.ArmTime");

	UIndianaFormulas_ArmTime_Params params;
	params.ExactTrapDifficulty = ExactTrapDifficulty;
	params.PlayerEngineeringSkill = PlayerEngineeringSkill;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameInstance.SetOverridePlayerClass
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UClass*                  Override                       (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameInstance::STATIC_SetOverridePlayerClass(class UClass* Override)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameInstance.SetOverridePlayerClass");

	UIndianaGameInstance_SetOverridePlayerClass_Params params;
	params.Override = Override;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameInstance.QueueEndGameLoadingScreen
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EEndGameImageType              EndGameType                    (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameInstance::STATIC_QueueEndGameLoadingScreen(EEndGameImageType EndGameType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameInstance.QueueEndGameLoadingScreen");

	UIndianaGameInstance_QueueEndGameLoadingScreen_Params params;
	params.EndGameType = EndGameType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameInstance.QueueCredits
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bShouldQueue                   (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameInstance::STATIC_QueueCredits(bool bShouldQueue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameInstance.QueueCredits");

	UIndianaGameInstance_QueueCredits_Params params;
	params.bShouldQueue = bShouldQueue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameInstance.IsXFHDLCInstalled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameInstance::IsXFHDLCInstalled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameInstance.IsXFHDLCInstalled");

	UIndianaGameInstance_IsXFHDLCInstalled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameInstance.IsINX2Installed
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameInstance::IsINX2Installed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameInstance.IsINX2Installed");

	UIndianaGameInstance_IsINX2Installed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameInstance.IsINX2DLCInstalled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameInstance::IsINX2DLCInstalled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameInstance.IsINX2DLCInstalled");

	UIndianaGameInstance_IsINX2DLCInstalled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameInstance.IsINX1Installed
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameInstance::IsINX1Installed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameInstance.IsINX1Installed");

	UIndianaGameInstance_IsINX1Installed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameInstance.HasVisitedMainMenu
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameInstance::HasVisitedMainMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameInstance.HasVisitedMainMenu");

	UIndianaGameInstance_HasVisitedMainMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameInstance.AreCreditsQueued
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameInstance::AreCreditsQueued()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameInstance.AreCreditsQueued");

	UIndianaGameInstance_AreCreditsQueued_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameInstance.AreCreditsPlaying
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameInstance::AreCreditsPlaying()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameInstance.AreCreditsPlaying");

	UIndianaGameInstance_AreCreditsPlaying_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.UndilateTime
// (BlueprintAuthorityOnly, BlueprintCosmetic)
// Parameters:
// class UObject*                 ContextObject                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          DilatedTime                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaGameplayStatics::UndilateTime(class UObject* ContextObject, float DilatedTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.UndilateTime");

	UIndianaGameplayStatics_UndilateTime_Params params;
	params.ContextObject = ContextObject;
	params.DilatedTime = DilatedTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.TeleportPlayerToStart
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaPlayerStart*     PlayerStart                    (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameplayStatics::STATIC_TeleportPlayerToStart(class AIndianaPlayerStart* PlayerStart)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.TeleportPlayerToStart");

	UIndianaGameplayStatics_TeleportPlayerToStart_Params params;
	params.PlayerStart = PlayerStart;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameplayStatics.SuicideActor
// (BlueprintCosmetic)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameplayStatics::SuicideActor(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.SuicideActor");

	UIndianaGameplayStatics_SuicideActor_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.SpawnPooledEmitterAttached
// (Net)
// Parameters:
// class UParticleSystem*         EmitterTemplate                (Parm, ZeroConstructor, IsPlainOldData)
// class USceneComponent*         AttachToComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   AttachPointName                (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                Rotation                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Scale                          (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EAttachLocation>   LocationType                   (Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UParticleSystemComponent* UIndianaGameplayStatics::SpawnPooledEmitterAttached(class UParticleSystem* EmitterTemplate, class USceneComponent* AttachToComponent, const struct FName& AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& Scale, TEnumAsByte<EAttachLocation> LocationType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.SpawnPooledEmitterAttached");

	UIndianaGameplayStatics_SpawnPooledEmitterAttached_Params params;
	params.EmitterTemplate = EmitterTemplate;
	params.AttachToComponent = AttachToComponent;
	params.AttachPointName = AttachPointName;
	params.Location = Location;
	params.Rotation = Rotation;
	params.Scale = Scale;
	params.LocationType = LocationType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.SpawnPooledEmitterAtLocation
// ()
// Parameters:
// class UParticleSystem*         EmitterTemplate                (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                Rotation                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Scale                          (Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UParticleSystemComponent* UIndianaGameplayStatics::SpawnPooledEmitterAtLocation(class UParticleSystem* EmitterTemplate, const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& Scale)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.SpawnPooledEmitterAtLocation");

	UIndianaGameplayStatics_SpawnPooledEmitterAtLocation_Params params;
	params.EmitterTemplate = EmitterTemplate;
	params.Location = Location;
	params.Rotation = Rotation;
	params.Scale = Scale;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.SetParticleSystemEmittersEnabled
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UParticleSystemComponent* ParticleSystem                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TArray<struct FName>           EnabledEmitters                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameplayStatics::STATIC_SetParticleSystemEmittersEnabled(class UParticleSystemComponent* ParticleSystem, TArray<struct FName> EnabledEmitters, bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.SetParticleSystemEmittersEnabled");

	UIndianaGameplayStatics_SetParticleSystemEmittersEnabled_Params params;
	params.ParticleSystem = ParticleSystem;
	params.EnabledEmitters = EnabledEmitters;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameplayStatics.SetMoveIgnoreComponentCollision
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     ComponentToIgnore              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bIgnore                        (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameplayStatics::STATIC_SetMoveIgnoreComponentCollision(class AActor* Actor, class UPrimitiveComponent* ComponentToIgnore, bool bIgnore)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.SetMoveIgnoreComponentCollision");

	UIndianaGameplayStatics_SetMoveIgnoreComponentCollision_Params params;
	params.Actor = Actor;
	params.ComponentToIgnore = ComponentToIgnore;
	params.bIgnore = bIgnore;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameplayStatics.SetMoveIgnoreActorCollision
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  ActorA                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ActorB                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIgnore                        (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameplayStatics::STATIC_SetMoveIgnoreActorCollision(class AActor* ActorA, class AActor* ActorB, bool bIgnore)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.SetMoveIgnoreActorCollision");

	UIndianaGameplayStatics_SetMoveIgnoreActorCollision_Params params;
	params.ActorA = ActorA;
	params.ActorB = ActorB;
	params.bIgnore = bIgnore;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameplayStatics.SetIndianaActorPseudoGod
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bPseudoGodMode                 (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameplayStatics::STATIC_SetIndianaActorPseudoGod(class AActor* Actor, bool bPseudoGodMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.SetIndianaActorPseudoGod");

	UIndianaGameplayStatics_SetIndianaActorPseudoGod_Params params;
	params.Actor = Actor;
	params.bPseudoGodMode = bPseudoGodMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameplayStatics.SetIndianaActorInteractable
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInteractable                  (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameplayStatics::STATIC_SetIndianaActorInteractable(class AActor* Actor, bool bInteractable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.SetIndianaActorInteractable");

	UIndianaGameplayStatics_SetIndianaActorInteractable_Params params;
	params.Actor = Actor;
	params.bInteractable = bInteractable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameplayStatics.SetIndianaActorGod
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bGodMode                       (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameplayStatics::STATIC_SetIndianaActorGod(class AActor* Actor, bool bGodMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.SetIndianaActorGod");

	UIndianaGameplayStatics_SetIndianaActorGod_Params params;
	params.Actor = Actor;
	params.bGodMode = bGodMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameplayStatics.SetFPVCameraFOV
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bOverrideCustomFOV             (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameplayStatics::STATIC_SetFPVCameraFOV(bool bOverrideCustomFOV)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.SetFPVCameraFOV");

	UIndianaGameplayStatics_SetFPVCameraFOV_Params params;
	params.bOverrideCustomFOV = bOverrideCustomFOV;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameplayStatics.IsRunningAutomationTest
// (Final)
// Parameters:
// EBoolResult                    Result                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameplayStatics::IsRunningAutomationTest(EBoolResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.IsRunningAutomationTest");

	UIndianaGameplayStatics_IsRunningAutomationTest_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Result != nullptr)
		*Result = params.Result;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.IsQuestActive
// (Final)
// Parameters:
// struct FGuid                   QuestID                        (Parm, ZeroConstructor, IsPlainOldData)
// EBoolResult                    Result                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameplayStatics::IsQuestActive(const struct FGuid& QuestID, EBoolResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.IsQuestActive");

	UIndianaGameplayStatics_IsQuestActive_Params params;
	params.QuestID = QuestID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Result != nullptr)
		*Result = params.Result;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.IsItemStackOfClass
// (BlueprintCosmetic)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)
// class UClass*                  ItemType                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameplayStatics::IsItemStackOfClass(const struct FItemStack& ItemStack, class UClass* ItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.IsItemStackOfClass");

	UIndianaGameplayStatics_IsItemStackOfClass_Params params;
	params.ItemStack = ItemStack;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.IsItemOfClass
// ()
// Parameters:
// class UItem*                   Item                           (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UClass*                  ItemType                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameplayStatics::IsItemOfClass(class UItem* Item, class UClass* ItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.IsItemOfClass");

	UIndianaGameplayStatics_IsItemOfClass_Params params;
	params.Item = Item;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.IsGlobalVariableValue
// (Final, BlueprintCosmetic)
// Parameters:
// struct FGlobalVariable         Variable                       (ConstParm, Parm, OutParm, ReferenceParm)
// EComparisonOperator            Operator                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)
// EBoolResult                    Result                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameplayStatics::IsGlobalVariableValue(const struct FGlobalVariable& Variable, EComparisonOperator Operator, int Value, EBoolResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.IsGlobalVariableValue");

	UIndianaGameplayStatics_IsGlobalVariableValue_Params params;
	params.Variable = Variable;
	params.Operator = Operator;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Result != nullptr)
		*Result = params.Result;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.IsGlobalVariableValid
// (Final)
// Parameters:
// struct FGlobalVariable         Variable                       (ConstParm, Parm, OutParm, ReferenceParm)
// EBoolResult                    Result                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameplayStatics::IsGlobalVariableValid(const struct FGlobalVariable& Variable, EBoolResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.IsGlobalVariableValid");

	UIndianaGameplayStatics_IsGlobalVariableValid_Params params;
	params.Variable = Variable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Result != nullptr)
		*Result = params.Result;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.IsGlobalValue
// (Final, BlueprintCosmetic)
// Parameters:
// class FString                  VariableName                   (ConstParm, Parm, ZeroConstructor)
// EComparisonOperator            Operator                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)
// EBoolResult                    Result                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameplayStatics::IsGlobalValue(const class FString& VariableName, EComparisonOperator Operator, int Value, EBoolResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.IsGlobalValue");

	UIndianaGameplayStatics_IsGlobalValue_Params params;
	params.VariableName = VariableName;
	params.Operator = Operator;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Result != nullptr)
		*Result = params.Result;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.IsCharacterInAnyBarkConversation
// (BlueprintCosmetic)
// Parameters:
// class AIndianaCharacter*       Character                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameplayStatics::IsCharacterInAnyBarkConversation(class AIndianaCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.IsCharacterInAnyBarkConversation");

	UIndianaGameplayStatics_IsCharacterInAnyBarkConversation_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.InitiateTravel
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaPlayerCharacter* PlayerCharacter                (Parm, ZeroConstructor, IsPlainOldData)
// class UTravelDestinationData*  TravelDest                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           bTravelFromMapLedger           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bTriggerAutosave               (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameplayStatics::STATIC_InitiateTravel(class AIndianaPlayerCharacter* PlayerCharacter, class UTravelDestinationData* TravelDest, bool bTravelFromMapLedger, bool bTriggerAutosave)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.InitiateTravel");

	UIndianaGameplayStatics_InitiateTravel_Params params;
	params.PlayerCharacter = PlayerCharacter;
	params.TravelDest = TravelDest;
	params.bTravelFromMapLedger = bTravelFromMapLedger;
	params.bTriggerAutosave = bTriggerAutosave;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameplayStatics.InheritMeshProperties
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UMeshComponent*          ParentMesh                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UMeshComponent*          ChildMesh                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UIndianaGameplayStatics::STATIC_InheritMeshProperties(class UMeshComponent* ParentMesh, class UMeshComponent* ChildMesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.InheritMeshProperties");

	UIndianaGameplayStatics_InheritMeshProperties_Params params;
	params.ParentMesh = ParentMesh;
	params.ChildMesh = ChildMesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameplayStatics.IndianaCancelAsyncLoadAsset
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            Handle                         (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameplayStatics::STATIC_IndianaCancelAsyncLoadAsset(int Handle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.IndianaCancelAsyncLoadAsset");

	UIndianaGameplayStatics_IndianaCancelAsyncLoadAsset_Params params;
	params.Handle = Handle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameplayStatics.IndianaAsyncLoadAsset
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// TSoftObjectPtr<class UObject>  Asset                          (Parm)
// int                            Priority                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FScriptDelegate         Callback                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// int                            HandleOut                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UIndianaGameplayStatics::STATIC_IndianaAsyncLoadAsset(TSoftObjectPtr<class UObject> Asset, int Priority, const struct FScriptDelegate& Callback, int* HandleOut)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.IndianaAsyncLoadAsset");

	UIndianaGameplayStatics_IndianaAsyncLoadAsset_Params params;
	params.Asset = Asset;
	params.Priority = Priority;
	params.Callback = Callback;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (HandleOut != nullptr)
		*HandleOut = params.HandleOut;
}


// Function Indiana.IndianaGameplayStatics.GetWeaponSpinProgress
// (BlueprintCosmetic)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaGameplayStatics::GetWeaponSpinProgress(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.GetWeaponSpinProgress");

	UIndianaGameplayStatics_GetWeaponSpinProgress_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.GetWeaponSpinningUp
// (BlueprintCosmetic)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameplayStatics::GetWeaponSpinningUp(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.GetWeaponSpinningUp");

	UIndianaGameplayStatics_GetWeaponSpinningUp_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.GetWeaponProjectileCharge
// (BlueprintCosmetic)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaGameplayStatics::GetWeaponProjectileCharge(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.GetWeaponProjectileCharge");

	UIndianaGameplayStatics_GetWeaponProjectileCharge_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.GetWeaponIsSwinging
// (BlueprintCosmetic)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameplayStatics::GetWeaponIsSwinging(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.GetWeaponIsSwinging");

	UIndianaGameplayStatics_GetWeaponIsSwinging_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.GetWeaponForceSpin
// (BlueprintCosmetic)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameplayStatics::GetWeaponForceSpin(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.GetWeaponForceSpin");

	UIndianaGameplayStatics_GetWeaponForceSpin_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.GetWeaponCurrentCharge
// (BlueprintCosmetic)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaGameplayStatics::GetWeaponCurrentCharge(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.GetWeaponCurrentCharge");

	UIndianaGameplayStatics_GetWeaponCurrentCharge_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.GetWeaponCurrentAmmoGaugeAlpha
// (BlueprintCosmetic)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaGameplayStatics::GetWeaponCurrentAmmoGaugeAlpha(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.GetWeaponCurrentAmmoGaugeAlpha");

	UIndianaGameplayStatics_GetWeaponCurrentAmmoGaugeAlpha_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.GetSkeletalMeshComponent
// ()
// Parameters:
// class AActor*                  TargetActor                    (Parm, ZeroConstructor, IsPlainOldData)
// EMeshTarget                    MeshType                       (Parm, ZeroConstructor, IsPlainOldData)
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USkeletalMeshComponent* UIndianaGameplayStatics::GetSkeletalMeshComponent(class AActor* TargetActor, EMeshTarget MeshType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.GetSkeletalMeshComponent");

	UIndianaGameplayStatics_GetSkeletalMeshComponent_Params params;
	params.TargetActor = TargetActor;
	params.MeshType = MeshType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.GetMeshComponent
// ()
// Parameters:
// class AActor*                  TargetActor                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// EMeshTarget                    MeshType                       (Parm, ZeroConstructor, IsPlainOldData)
// class UMeshComponent*          ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UMeshComponent* UIndianaGameplayStatics::GetMeshComponent(class AActor* TargetActor, EMeshTarget MeshType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.GetMeshComponent");

	UIndianaGameplayStatics_GetMeshComponent_Params params;
	params.TargetActor = TargetActor;
	params.MeshType = MeshType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.GetGameCalendar
// ()
// Parameters:
// class UGameCalendar*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UGameCalendar* UIndianaGameplayStatics::GetGameCalendar()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.GetGameCalendar");

	UIndianaGameplayStatics_GetGameCalendar_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.GetEventEffectPhysicalSurface
// (NetReliable)
// Parameters:
// struct FEventEffectParams      Params                         (ConstParm, Parm, OutParm, ReferenceParm)
// TEnumAsByte<EPhysicalSurface>  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EPhysicalSurface> UIndianaGameplayStatics::GetEventEffectPhysicalSurface(const struct FEventEffectParams& Params)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.GetEventEffectPhysicalSurface");

	UIndianaGameplayStatics_GetEventEffectPhysicalSurface_Params params;
	params.Params = Params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.GetEventEffectParam
// (BlueprintAuthorityOnly, NetReliable)
// Parameters:
// struct FEventEffectParams      Params                         (ConstParm, Parm, OutParm, ReferenceParm)
// EEventEffectFloatParams        Param                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaGameplayStatics::GetEventEffectParam(const struct FEventEffectParams& Params, EEventEffectFloatParams Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.GetEventEffectParam");

	UIndianaGameplayStatics_GetEventEffectParam_Params params;
	params.Params = Params;
	params.Param = Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.GetEventEffectEnabledEmitters
// (NetReliable)
// Parameters:
// struct FEventEffectParams      Params                         (ConstParm, Parm, OutParm, ReferenceParm)
// TArray<struct FName>           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<struct FName> UIndianaGameplayStatics::GetEventEffectEnabledEmitters(const struct FEventEffectParams& Params)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.GetEventEffectEnabledEmitters");

	UIndianaGameplayStatics_GetEventEffectEnabledEmitters_Params params;
	params.Params = Params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.GetBlendSpaceLength
// (BlueprintCosmetic)
// Parameters:
// class UBlendSpaceBase*         BlendSpace                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaGameplayStatics::GetBlendSpaceLength(class UBlendSpaceBase* BlendSpace)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.GetBlendSpaceLength");

	UIndianaGameplayStatics_GetBlendSpaceLength_Params params;
	params.BlendSpace = BlendSpace;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.GetAllAppearanceRelatedMeshes
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UMeshComponent*>  Meshes                         (Parm, OutParm, ZeroConstructor)
// bool                           bIncludeWeapon                 (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameplayStatics::STATIC_GetAllAppearanceRelatedMeshes(class AActor* Actor, bool bIncludeWeapon, TArray<class UMeshComponent*>* Meshes)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.GetAllAppearanceRelatedMeshes");

	UIndianaGameplayStatics_GetAllAppearanceRelatedMeshes_Params params;
	params.Actor = Actor;
	params.bIncludeWeapon = bIncludeWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Meshes != nullptr)
		*Meshes = params.Meshes;
}


// Function Indiana.IndianaGameplayStatics.GetActorBySpeakerName
// (BlueprintCosmetic)
// Parameters:
// ECheckBranches                 Branches                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FGuid                   SpeakerReference               (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UIndianaGameplayStatics::GetActorBySpeakerName(const struct FGuid& SpeakerReference, ECheckBranches* Branches)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.GetActorBySpeakerName");

	UIndianaGameplayStatics_GetActorBySpeakerName_Params params;
	params.SpeakerReference = SpeakerReference;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Branches != nullptr)
		*Branches = params.Branches;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.FindFirstChildComponentByTag
// (BlueprintCosmetic)
// Parameters:
// ECheckBranches                 Branches                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class USceneComponent*         ParentComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   Tag                            (Parm, ZeroConstructor, IsPlainOldData)
// class USceneComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USceneComponent* UIndianaGameplayStatics::FindFirstChildComponentByTag(class USceneComponent* ParentComponent, const struct FName& Tag, ECheckBranches* Branches)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.FindFirstChildComponentByTag");

	UIndianaGameplayStatics_FindFirstChildComponentByTag_Params params;
	params.ParentComponent = ParentComponent;
	params.Tag = Tag;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Branches != nullptr)
		*Branches = params.Branches;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.FindChildComponentsByTag
// ()
// Parameters:
// class USceneComponent*         ParentComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   Tag                            (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class USceneComponent*> ChildComponents                (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameplayStatics::FindChildComponentsByTag(class USceneComponent* ParentComponent, const struct FName& Tag, TArray<class USceneComponent*>* ChildComponents)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.FindChildComponentsByTag");

	UIndianaGameplayStatics_FindChildComponentsByTag_Params params;
	params.ParentComponent = ParentComponent;
	params.Tag = Tag;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (ChildComponents != nullptr)
		*ChildComponents = params.ChildComponents;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.EnableParticleSystemEmitters
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UParticleSystemComponent* ParticleSystem                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TArray<struct FName>           EnabledEmitters                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UIndianaGameplayStatics::STATIC_EnableParticleSystemEmitters(class UParticleSystemComponent* ParticleSystem, TArray<struct FName> EnabledEmitters)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.EnableParticleSystemEmitters");

	UIndianaGameplayStatics_EnableParticleSystemEmitters_Params params;
	params.ParticleSystem = ParticleSystem;
	params.EnabledEmitters = EnabledEmitters;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameplayStatics.DilateTime
// (BlueprintAuthorityOnly, BlueprintCosmetic)
// Parameters:
// class UObject*                 ContextObject                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          UndilatedTime                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaGameplayStatics::DilateTime(class UObject* ContextObject, float UndilatedTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.DilateTime");

	UIndianaGameplayStatics_DilateTime_Params params;
	params.ContextObject = ContextObject;
	params.UndilatedTime = UndilatedTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.CreateEndGameDialogWidget
// (BlueprintCosmetic)
// Parameters:
// struct FLocString              BodyLocString                  (ConstParm, Parm, OutParm, ReferenceParm)
// class UDialogBoxWidget*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UDialogBoxWidget* UIndianaGameplayStatics::CreateEndGameDialogWidget(const struct FLocString& BodyLocString)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.CreateEndGameDialogWidget");

	UIndianaGameplayStatics_CreateEndGameDialogWidget_Params params;
	params.BodyLocString = BodyLocString;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.CreateDialogWidget
// ()
// Parameters:
// struct FLocString              BodyLocString                  (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           bCancellable                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDialogBoxWidget*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UDialogBoxWidget* UIndianaGameplayStatics::CreateDialogWidget(const struct FLocString& BodyLocString, bool bCancellable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.CreateDialogWidget");

	UIndianaGameplayStatics_CreateDialogWidget_Params params;
	params.BodyLocString = BodyLocString;
	params.bCancellable = bCancellable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.ConstructComponentByClass
// (BlueprintCosmetic)
// Parameters:
// ECheckBranches                 Branches                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UObject*                 InOuter                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  InClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UActorComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UActorComponent* UIndianaGameplayStatics::ConstructComponentByClass(class UObject* InOuter, class UClass* InClass, ECheckBranches* Branches)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.ConstructComponentByClass");

	UIndianaGameplayStatics_ConstructComponentByClass_Params params;
	params.InOuter = InOuter;
	params.InClass = InClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Branches != nullptr)
		*Branches = params.Branches;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.ClearPlayerCombat
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaGameplayStatics::STATIC_ClearPlayerCombat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.ClearPlayerCombat");

	UIndianaGameplayStatics_ClearPlayerCombat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameplayStatics.CanCharacterUnlockRestrictedStock
// (BlueprintCosmetic)
// Parameters:
// class AIndianaCharacter*       Character                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameplayStatics::CanCharacterUnlockRestrictedStock(class AIndianaCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.CanCharacterUnlockRestrictedStock");

	UIndianaGameplayStatics_CanCharacterUnlockRestrictedStock_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameplayStatics.ApplyGenericDamage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          BaseDamage                     (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUseCustomDamageDescription    (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageDescription      CustomDamageDescription        (Parm)

void UIndianaGameplayStatics::STATIC_ApplyGenericDamage(class AActor* DamageCauser, class AActor* DamagedActor, float BaseDamage, class UClass* DamageType, bool bUseCustomDamageDescription, const struct FDamageDescription& CustomDamageDescription)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.ApplyGenericDamage");

	UIndianaGameplayStatics_ApplyGenericDamage_Params params;
	params.DamageCauser = DamageCauser;
	params.DamagedActor = DamagedActor;
	params.BaseDamage = BaseDamage;
	params.DamageType = DamageType;
	params.bUseCustomDamageDescription = bUseCustomDamageDescription;
	params.CustomDamageDescription = CustomDamageDescription;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameplayStatics.ApplyCACVisibilityToActorCollision
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UChildActorComponent*    CAC                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UIndianaGameplayStatics::STATIC_ApplyCACVisibilityToActorCollision(class UChildActorComponent* CAC)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameplayStatics.ApplyCACVisibilityToActorCollision");

	UIndianaGameplayStatics_ApplyCACVisibilityToActorCollision_Params params;
	params.CAC = CAC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetYAxisInverted
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetYAxisInverted(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetYAxisInverted");

	UIndianaGameUserSettings_SetYAxisInverted_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetXAxisInverted
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetXAxisInverted(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetXAxisInverted");

	UIndianaGameUserSettings_SetXAxisInverted_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetWeaponTooltipStatMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EWeaponTooltipStatMode         Mode                           (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetWeaponTooltipStatMode(EWeaponTooltipStatMode Mode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetWeaponTooltipStatMode");

	UIndianaGameUserSettings_SetWeaponTooltipStatMode_Params params;
	params.Mode = Mode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetWeaponSelectMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EWeaponSelectMode              ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetWeaponSelectMode(EWeaponSelectMode ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetWeaponSelectMode");

	UIndianaGameUserSettings_SetWeaponSelectMode_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetWeaponSelectAxisMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EWeaponSelectAxisMode          ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetWeaponSelectAxisMode(EWeaponSelectAxisMode ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetWeaponSelectAxisMode");

	UIndianaGameUserSettings_SetWeaponSelectAxisMode_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetVSyncWrapper
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetVSyncWrapper(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetVSyncWrapper");

	UIndianaGameUserSettings_SetVSyncWrapper_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetVoiceSoundVolume
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetVoiceSoundVolume(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetVoiceSoundVolume");

	UIndianaGameUserSettings_SetVoiceSoundVolume_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetViewBaseStats
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetViewBaseStats(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetViewBaseStats");

	UIndianaGameUserSettings_SetViewBaseStats_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetUISoundVolume
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetUISoundVolume(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetUISoundVolume");

	UIndianaGameUserSettings_SetUISoundVolume_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetTutorialsEnabled
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetTutorialsEnabled(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetTutorialsEnabled");

	UIndianaGameUserSettings_SetTutorialsEnabled_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetTTDDisplayMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ETTDDisplayMode                ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetTTDDisplayMode(ETTDDisplayMode ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetTTDDisplayMode");

	UIndianaGameUserSettings_SetTTDDisplayMode_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetTooltipDelay
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Delay                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetTooltipDelay(float Delay)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetTooltipDelay");

	UIndianaGameUserSettings_SetTooltipDelay_Params params;
	params.Delay = Delay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetSurvivalMeterMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisibleIn                     (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetSurvivalMeterMode(bool bVisibleIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetSurvivalMeterMode");

	UIndianaGameUserSettings_SetSurvivalMeterMode_Params params;
	params.bVisibleIn = bVisibleIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetShowWaypointMarkers
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetShowWaypointMarkers(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetShowWaypointMarkers");

	UIndianaGameUserSettings_SetShowWaypointMarkers_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetShowTutorialNotifications
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetShowTutorialNotifications(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetShowTutorialNotifications");

	UIndianaGameUserSettings_SetShowTutorialNotifications_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetShowTTDStatusEffectPreview
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetShowTTDStatusEffectPreview(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetShowTTDStatusEffectPreview");

	UIndianaGameUserSettings_SetShowTTDStatusEffectPreview_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetShowTTDScanner
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetShowTTDScanner(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetShowTTDScanner");

	UIndianaGameUserSettings_SetShowTTDScanner_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetShowTTDReticleMeter
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ETTDReticleMeterMode           ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetShowTTDReticleMeter(ETTDReticleMeterMode ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetShowTTDReticleMeter");

	UIndianaGameUserSettings_SetShowTTDReticleMeter_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetShowReticleFeedback
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetShowReticleFeedback(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetShowReticleFeedback");

	UIndianaGameUserSettings_SetShowReticleFeedback_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetShowPlayerStatusEffects
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetShowPlayerStatusEffects(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetShowPlayerStatusEffects");

	UIndianaGameUserSettings_SetShowPlayerStatusEffects_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetShowPlayerHelmet
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetShowPlayerHelmet(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetShowPlayerHelmet");

	UIndianaGameUserSettings_SetShowPlayerHelmet_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetShowLootTooltips
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetShowLootTooltips(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetShowLootTooltips");

	UIndianaGameUserSettings_SetShowLootTooltips_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetShowLootControls
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetShowLootControls(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetShowLootControls");

	UIndianaGameUserSettings_SetShowLootControls_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetShowLevelUpReminders
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetShowLevelUpReminders(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetShowLevelUpReminders");

	UIndianaGameUserSettings_SetShowLevelUpReminders_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetShowLevelUpNotification
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetShowLevelUpNotification(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetShowLevelUpNotification");

	UIndianaGameUserSettings_SetShowLevelUpNotification_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetShowInteractionOutlines
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetShowInteractionOutlines(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetShowInteractionOutlines");

	UIndianaGameUserSettings_SetShowInteractionOutlines_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetShowInteractionControls
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetShowInteractionControls(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetShowInteractionControls");

	UIndianaGameUserSettings_SetShowInteractionControls_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetShowFloatingDamageText
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetShowFloatingDamageText(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetShowFloatingDamageText");

	UIndianaGameUserSettings_SetShowFloatingDamageText_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetShowEquipmentRepairWarning
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetShowEquipmentRepairWarning(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetShowEquipmentRepairWarning");

	UIndianaGameUserSettings_SetShowEquipmentRepairWarning_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetShowEnemyHealthBars
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EEnemyHealthBarMode            ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetShowEnemyHealthBars(EEnemyHealthBarMode ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetShowEnemyHealthBars");

	UIndianaGameUserSettings_SetShowEnemyHealthBars_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetShowEnemyAwarenessMeters
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetShowEnemyAwarenessMeters(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetShowEnemyAwarenessMeters");

	UIndianaGameUserSettings_SetShowEnemyAwarenessMeters_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetShowDisguiseMeter
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetShowDisguiseMeter(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetShowDisguiseMeter");

	UIndianaGameUserSettings_SetShowDisguiseMeter_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetShowDirectionalDamageIndicators
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EDirectionalDamageIndicatorMode ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetShowDirectionalDamageIndicators(EDirectionalDamageIndicatorMode ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetShowDirectionalDamageIndicators");

	UIndianaGameUserSettings_SetShowDirectionalDamageIndicators_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetShowCompass
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ECompassVisibilityMode         ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetShowCompass(ECompassVisibilityMode ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetShowCompass");

	UIndianaGameUserSettings_SetShowCompass_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetShowCompanionPassiveCD
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ECompanionAbilityPassiveCDMode ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetShowCompanionPassiveCD(ECompanionAbilityPassiveCDMode ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetShowCompanionPassiveCD");

	UIndianaGameUserSettings_SetShowCompanionPassiveCD_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetShowCompanionHelmets
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetShowCompanionHelmets(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetShowCompanionHelmets");

	UIndianaGameUserSettings_SetShowCompanionHelmets_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetShowCombatIndicator
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetShowCombatIndicator(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetShowCombatIndicator");

	UIndianaGameUserSettings_SetShowCombatIndicator_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetRadialSensitivity
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetRadialSensitivity(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetRadialSensitivity");

	UIndianaGameUserSettings_SetRadialSensitivity_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetQuestUpdateMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EQuestUpdateMode               bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetQuestUpdateMode(EQuestUpdateMode bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetQuestUpdateMode");

	UIndianaGameUserSettings_SetQuestUpdateMode_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetPseudoGodMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetPseudoGodMode(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetPseudoGodMode");

	UIndianaGameUserSettings_SetPseudoGodMode_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetPlayerStatusEffectTextMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EPlayerStatusEffectTextMode    ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetPlayerStatusEffectTextMode(EPlayerStatusEffectTextMode ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetPlayerStatusEffectTextMode");

	UIndianaGameUserSettings_SetPlayerStatusEffectTextMode_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetPlayerStatusBarMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EPlayerStatusBarMode           ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetPlayerStatusBarMode(EPlayerStatusBarMode ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetPlayerStatusBarMode");

	UIndianaGameUserSettings_SetPlayerStatusBarMode_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetOffsetReticle
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bUseOffset                     (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetOffsetReticle(bool bUseOffset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetOffsetReticle");

	UIndianaGameUserSettings_SetOffsetReticle_Params params;
	params.bUseOffset = bUseOffset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetNotificationDuration
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          DurationIn                     (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetNotificationDuration(float DurationIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetNotificationDuration");

	UIndianaGameUserSettings_SetNotificationDuration_Params params;
	params.DurationIn = DurationIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetMusicSoundVolume
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetMusicSoundVolume(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetMusicSoundVolume");

	UIndianaGameUserSettings_SetMusicSoundVolume_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetMouseSensitivity
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetMouseSensitivity(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetMouseSensitivity");

	UIndianaGameUserSettings_SetMouseSensitivity_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetMouseADSSensitivity
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetMouseADSSensitivity(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetMouseADSSensitivity");

	UIndianaGameUserSettings_SetMouseADSSensitivity_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetMotionBlurScale
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          NewMotionBlurScale             (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetMotionBlurScale(float NewMotionBlurScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetMotionBlurScale");

	UIndianaGameUserSettings_SetMotionBlurScale_Params params;
	params.NewMotionBlurScale = NewMotionBlurScale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetMedicalInhalerUIMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EMedicalInhalerMode            InhalerModeIn                  (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetMedicalInhalerUIMode(EMedicalInhalerMode InhalerModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetMedicalInhalerUIMode");

	UIndianaGameUserSettings_SetMedicalInhalerUIMode_Params params;
	params.InhalerModeIn = InhalerModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetMasterSoundVolume
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetMasterSoundVolume(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetMasterSoundVolume");

	UIndianaGameUserSettings_SetMasterSoundVolume_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetLanguageMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ELanguageMode                  LanguageModeIn                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bPending                       (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetLanguageMode(ELanguageMode LanguageModeIn, bool bPending)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetLanguageMode");

	UIndianaGameUserSettings_SetLanguageMode_Params params;
	params.LanguageModeIn = LanguageModeIn;
	params.bPending = bPending;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetIsSimplifiedLockpickHackingMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ESimplifiedLockpickHackingMode ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetIsSimplifiedLockpickHackingMode(ESimplifiedLockpickHackingMode ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetIsSimplifiedLockpickHackingMode");

	UIndianaGameUserSettings_SetIsSimplifiedLockpickHackingMode_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetIsSimplifiedEquipmentRepairWarning
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetIsSimplifiedEquipmentRepairWarning(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetIsSimplifiedEquipmentRepairWarning");

	UIndianaGameUserSettings_SetIsSimplifiedEquipmentRepairWarning_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetIsFreshUserSettings
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetIsFreshUserSettings(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetIsFreshUserSettings");

	UIndianaGameUserSettings_SetIsFreshUserSettings_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetInfiniteAmmo
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetInfiniteAmmo(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetInfiniteAmmo");

	UIndianaGameUserSettings_SetInfiniteAmmo_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetHUDVisibility
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisibilityIn                  (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetHUDVisibility(bool bVisibilityIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetHUDVisibility");

	UIndianaGameUserSettings_SetHUDVisibility_Params params;
	params.bVisibilityIn = bVisibilityIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetHUDMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EHUDMode                       ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetHUDMode(EHUDMode ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetHUDMode");

	UIndianaGameUserSettings_SetHUDMode_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetHeldWeaponDisplayTextMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EHeldWeaponDisplayText         ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetHeldWeaponDisplayTextMode(EHeldWeaponDisplayText ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetHeldWeaponDisplayTextMode");

	UIndianaGameUserSettings_SetHeldWeaponDisplayTextMode_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetHeldWeaponDisplayMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EHeldWeaponDisplayMode         ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetHeldWeaponDisplayMode(EHeldWeaponDisplayMode ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetHeldWeaponDisplayMode");

	UIndianaGameUserSettings_SetHeldWeaponDisplayMode_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetHeadbobbing
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bEnabledIn                     (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetHeadbobbing(bool bEnabledIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetHeadbobbing");

	UIndianaGameUserSettings_SetHeadbobbing_Params params;
	params.bEnabledIn = bEnabledIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetGraphicsQuality
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetGraphicsQuality(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetGraphicsQuality");

	UIndianaGameUserSettings_SetGraphicsQuality_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetGodMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetGodMode(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetGodMode");

	UIndianaGameUserSettings_SetGodMode_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetGammaLevel
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          GammaLevelIn                   (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetGammaLevel(float GammaLevelIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetGammaLevel");

	UIndianaGameUserSettings_SetGammaLevel_Params params;
	params.GammaLevelIn = GammaLevelIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetFullscreenModeThenBroadcast
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// TEnumAsByte<EWindowMode>       Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetFullscreenModeThenBroadcast(TEnumAsByte<EWindowMode> Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetFullscreenModeThenBroadcast");

	UIndianaGameUserSettings_SetFullscreenModeThenBroadcast_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetFPSLimit
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EFPSLimit                      FPSLimitIn                     (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetFPSLimit(EFPSLimit FPSLimitIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetFPSLimit");

	UIndianaGameUserSettings_SetFPSLimit_Params params;
	params.FPSLimitIn = FPSLimitIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetFPSIndicatorMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EFPSIndicatorMode              ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetFPSIndicatorMode(EFPSIndicatorMode ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetFPSIndicatorMode");

	UIndianaGameUserSettings_SetFPSIndicatorMode_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetFOV
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          FOVIn                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetFOV(float FOVIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetFOV");

	UIndianaGameUserSettings_SetFOV_Params params;
	params.FOVIn = FOVIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetFontSizeModifier
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            ModifierIn                     (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetFontSizeModifier(int ModifierIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetFontSizeModifier");

	UIndianaGameUserSettings_SetFontSizeModifier_Params params;
	params.ModifierIn = ModifierIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetEffectsSoundVolume
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetEffectsSoundVolume(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetEffectsSoundVolume");

	UIndianaGameUserSettings_SetEffectsSoundVolume_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetDodgeDisplayMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EDodgeDisplayMode              ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetDodgeDisplayMode(EDodgeDisplayMode ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetDodgeDisplayMode");

	UIndianaGameUserSettings_SetDodgeDisplayMode_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetDialogSkillMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EDialogSkillMode               ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetDialogSkillMode(EDialogSkillMode ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetDialogSkillMode");

	UIndianaGameUserSettings_SetDialogSkillMode_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetConversationSubtitleMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EConversationSubtitleMode      Mode                           (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetConversationSubtitleMode(EConversationSubtitleMode Mode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetConversationSubtitleMode");

	UIndianaGameUserSettings_SetConversationSubtitleMode_Params params;
	params.Mode = Mode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetConversationResponseVisibleDuringVO
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetConversationResponseVisibleDuringVO(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetConversationResponseVisibleDuringVO");

	UIndianaGameUserSettings_SetConversationResponseVisibleDuringVO_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetConversationContinueOnVOEnd
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetConversationContinueOnVOEnd(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetConversationContinueOnVOEnd");

	UIndianaGameUserSettings_SetConversationContinueOnVOEnd_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetControllerYAxisInverted
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetControllerYAxisInverted(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetControllerYAxisInverted");

	UIndianaGameUserSettings_SetControllerYAxisInverted_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetControllerXAxisInverted
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetControllerXAxisInverted(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetControllerXAxisInverted");

	UIndianaGameUserSettings_SetControllerXAxisInverted_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetControllerSensitivity
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetControllerSensitivity(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetControllerSensitivity");

	UIndianaGameUserSettings_SetControllerSensitivity_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetControllerRumbleEnabled
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetControllerRumbleEnabled(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetControllerRumbleEnabled");

	UIndianaGameUserSettings_SetControllerRumbleEnabled_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetControllerRightOuterDeadZone
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetControllerRightOuterDeadZone(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetControllerRightOuterDeadZone");

	UIndianaGameUserSettings_SetControllerRightOuterDeadZone_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetControllerRightInnerDeadZone
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetControllerRightInnerDeadZone(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetControllerRightInnerDeadZone");

	UIndianaGameUserSettings_SetControllerRightInnerDeadZone_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetControllerLeftOuterDeadZone
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetControllerLeftOuterDeadZone(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetControllerLeftOuterDeadZone");

	UIndianaGameUserSettings_SetControllerLeftOuterDeadZone_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetControllerLeftInnerDeadZone
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetControllerLeftInnerDeadZone(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetControllerLeftInnerDeadZone");

	UIndianaGameUserSettings_SetControllerLeftInnerDeadZone_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetControllerAutoSprintEnabled
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetControllerAutoSprintEnabled(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetControllerAutoSprintEnabled");

	UIndianaGameUserSettings_SetControllerAutoSprintEnabled_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetControllerADSSensitivity
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetControllerADSSensitivity(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetControllerADSSensitivity");

	UIndianaGameUserSettings_SetControllerADSSensitivity_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetCompanionStatusUIMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ECompanionStatusMode           ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetCompanionStatusUIMode(ECompanionStatusMode ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetCompanionStatusUIMode");

	UIndianaGameUserSettings_SetCompanionStatusUIMode_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetCompanionPassiveCDNotificationMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ECompanionAbilityPassiveNotificationMode ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetCompanionPassiveCDNotificationMode(ECompanionAbilityPassiveNotificationMode ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetCompanionPassiveCDNotificationMode");

	UIndianaGameUserSettings_SetCompanionPassiveCDNotificationMode_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetCompanionOutlineMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ECompanionOutlineMode          Mode                           (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetCompanionOutlineMode(ECompanionOutlineMode Mode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetCompanionOutlineMode");

	UIndianaGameUserSettings_SetCompanionOutlineMode_Params params;
	params.Mode = Mode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetCompanionAbilityUIMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ECompanionAbilityUIMode        ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetCompanionAbilityUIMode(ECompanionAbilityUIMode ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetCompanionAbilityUIMode");

	UIndianaGameUserSettings_SetCompanionAbilityUIMode_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetCompanionAbilityBindingMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ECompanionAbilityBindingMode   ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetCompanionAbilityBindingMode(ECompanionAbilityBindingMode ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetCompanionAbilityBindingMode");

	UIndianaGameUserSettings_SetCompanionAbilityBindingMode_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetColorblindModeEnabled
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetColorblindModeEnabled(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetColorblindModeEnabled");

	UIndianaGameUserSettings_SetColorblindModeEnabled_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetCinematicSubtitlesVisible
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetCinematicSubtitlesVisible(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetCinematicSubtitlesVisible");

	UIndianaGameUserSettings_SetCinematicSubtitlesVisible_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetCinematicKillCam
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bEnabledIn                     (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetCinematicKillCam(bool bEnabledIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetCinematicKillCam");

	UIndianaGameUserSettings_SetCinematicKillCam_Params params;
	params.bEnabledIn = bEnabledIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetChromaticAberration
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bUseChromaticAberration        (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetChromaticAberration(bool bUseChromaticAberration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetChromaticAberration");

	UIndianaGameUserSettings_SetChromaticAberration_Params params;
	params.bUseChromaticAberration = bUseChromaticAberration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetBarkSubtitleMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetBarkSubtitleMode(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetBarkSubtitleMode");

	UIndianaGameUserSettings_SetBarkSubtitleMode_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetAxisKeyBinds
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// TArray<struct FInputAxisKeyMapping> OldValues                      (Parm, ZeroConstructor)
// TArray<struct FInputAxisKeyMapping> NewValues                      (Parm, ZeroConstructor)

void UIndianaGameUserSettings::STATIC_SetAxisKeyBinds(TArray<struct FInputAxisKeyMapping> OldValues, TArray<struct FInputAxisKeyMapping> NewValues)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetAxisKeyBinds");

	UIndianaGameUserSettings_SetAxisKeyBinds_Params params;
	params.OldValues = OldValues;
	params.NewValues = NewValues;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetAutoCollapseItemViewers
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetAutoCollapseItemViewers(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetAutoCollapseItemViewers");

	UIndianaGameUserSettings_SetAutoCollapseItemViewers_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetAreaNameMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EAreaNameMode                  AreaModeIn                     (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetAreaNameMode(EAreaNameMode AreaModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetAreaNameMode");

	UIndianaGameUserSettings_SetAreaNameMode_Params params;
	params.AreaModeIn = AreaModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetAntiAliasingMethod
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            Method                         (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetAntiAliasingMethod(int Method)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetAntiAliasingMethod");

	UIndianaGameUserSettings_SetAntiAliasingMethod_Params params;
	params.Method = Method;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetAimingReticleMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EReticleMode                   ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetAimingReticleMode(EReticleMode ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetAimingReticleMode");

	UIndianaGameUserSettings_SetAimingReticleMode_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetActionKeyBinds
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// TArray<struct FInputActionKeyMapping> OldValues                      (Parm, ZeroConstructor)
// TArray<struct FInputActionKeyMapping> NewValues                      (Parm, ZeroConstructor)

void UIndianaGameUserSettings::STATIC_SetActionKeyBinds(TArray<struct FInputActionKeyMapping> OldValues, TArray<struct FInputActionKeyMapping> NewValues)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetActionKeyBinds");

	UIndianaGameUserSettings_SetActionKeyBinds_Params params;
	params.OldValues = OldValues;
	params.NewValues = NewValues;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.SetAbilityControlUIMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EAbilityControlMode            ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_SetAbilityControlUIMode(EAbilityControlMode ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.SetAbilityControlUIMode");

	UIndianaGameUserSettings_SetAbilityControlUIMode_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.Set3DResolution
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          ResolutionIn                   (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaGameUserSettings::STATIC_Set3DResolution(float ResolutionIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.Set3DResolution");

	UIndianaGameUserSettings_Set3DResolution_Params params;
	params.ResolutionIn = ResolutionIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.ResetAllKeyBinds
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaGameUserSettings::STATIC_ResetAllKeyBinds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.ResetAllKeyBinds");

	UIndianaGameUserSettings_ResetAllKeyBinds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.OnDetectGraphics
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaGameUserSettings::STATIC_OnDetectGraphics()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.OnDetectGraphics");

	UIndianaGameUserSettings_OnDetectGraphics_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGameUserSettings.IsConversationResponseVisibleDuringVO
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::IsConversationResponseVisibleDuringVO()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.IsConversationResponseVisibleDuringVO");

	UIndianaGameUserSettings_IsConversationResponseVisibleDuringVO_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetYAxisInverted
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetYAxisInverted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetYAxisInverted");

	UIndianaGameUserSettings_GetYAxisInverted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetXAxisInverted
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetXAxisInverted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetXAxisInverted");

	UIndianaGameUserSettings_GetXAxisInverted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetWeaponTooltipStatMode
// ()
// Parameters:
// EWeaponTooltipStatMode         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EWeaponTooltipStatMode UIndianaGameUserSettings::GetWeaponTooltipStatMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetWeaponTooltipStatMode");

	UIndianaGameUserSettings_GetWeaponTooltipStatMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetWeaponSelectMode
// ()
// Parameters:
// EWeaponSelectMode              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EWeaponSelectMode UIndianaGameUserSettings::GetWeaponSelectMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetWeaponSelectMode");

	UIndianaGameUserSettings_GetWeaponSelectMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetWeaponSelectAxisMode
// ()
// Parameters:
// EWeaponSelectAxisMode          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EWeaponSelectAxisMode UIndianaGameUserSettings::GetWeaponSelectAxisMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetWeaponSelectAxisMode");

	UIndianaGameUserSettings_GetWeaponSelectAxisMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetVSyncWrapper
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetVSyncWrapper()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetVSyncWrapper");

	UIndianaGameUserSettings_GetVSyncWrapper_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetVoiceSoundVolume
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaGameUserSettings::GetVoiceSoundVolume()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetVoiceSoundVolume");

	UIndianaGameUserSettings_GetVoiceSoundVolume_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetViewBaseStats
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetViewBaseStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetViewBaseStats");

	UIndianaGameUserSettings_GetViewBaseStats_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetUISoundVolume
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaGameUserSettings::GetUISoundVolume()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetUISoundVolume");

	UIndianaGameUserSettings_GetUISoundVolume_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetTutorialsEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetTutorialsEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetTutorialsEnabled");

	UIndianaGameUserSettings_GetTutorialsEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetTTDDisplayMode
// ()
// Parameters:
// ETTDDisplayMode                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ETTDDisplayMode UIndianaGameUserSettings::GetTTDDisplayMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetTTDDisplayMode");

	UIndianaGameUserSettings_GetTTDDisplayMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetTooltipDelay
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaGameUserSettings::GetTooltipDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetTooltipDelay");

	UIndianaGameUserSettings_GetTooltipDelay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetSurvivalMeterMode
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetSurvivalMeterMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetSurvivalMeterMode");

	UIndianaGameUserSettings_GetSurvivalMeterMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetShowWaypointMarkers
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetShowWaypointMarkers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetShowWaypointMarkers");

	UIndianaGameUserSettings_GetShowWaypointMarkers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetShowTutorialNotifications
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetShowTutorialNotifications()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetShowTutorialNotifications");

	UIndianaGameUserSettings_GetShowTutorialNotifications_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetShowTTDStatusEffectPreview
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetShowTTDStatusEffectPreview()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetShowTTDStatusEffectPreview");

	UIndianaGameUserSettings_GetShowTTDStatusEffectPreview_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetShowTTDScanner
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetShowTTDScanner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetShowTTDScanner");

	UIndianaGameUserSettings_GetShowTTDScanner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetShowTTDReticleMeter
// ()
// Parameters:
// ETTDReticleMeterMode           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ETTDReticleMeterMode UIndianaGameUserSettings::GetShowTTDReticleMeter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetShowTTDReticleMeter");

	UIndianaGameUserSettings_GetShowTTDReticleMeter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetShowReticleFeedback
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetShowReticleFeedback()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetShowReticleFeedback");

	UIndianaGameUserSettings_GetShowReticleFeedback_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetShowPlayerStatusEffects
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetShowPlayerStatusEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetShowPlayerStatusEffects");

	UIndianaGameUserSettings_GetShowPlayerStatusEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetShowPlayerHelmet
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetShowPlayerHelmet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetShowPlayerHelmet");

	UIndianaGameUserSettings_GetShowPlayerHelmet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetShowLootTooltips
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetShowLootTooltips()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetShowLootTooltips");

	UIndianaGameUserSettings_GetShowLootTooltips_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetShowLootControls
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetShowLootControls()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetShowLootControls");

	UIndianaGameUserSettings_GetShowLootControls_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetShowLevelUpReminders
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetShowLevelUpReminders()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetShowLevelUpReminders");

	UIndianaGameUserSettings_GetShowLevelUpReminders_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetShowLevelUpNotification
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetShowLevelUpNotification()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetShowLevelUpNotification");

	UIndianaGameUserSettings_GetShowLevelUpNotification_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetShowInteractionOutlines
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetShowInteractionOutlines()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetShowInteractionOutlines");

	UIndianaGameUserSettings_GetShowInteractionOutlines_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetShowInteractionControls
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetShowInteractionControls()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetShowInteractionControls");

	UIndianaGameUserSettings_GetShowInteractionControls_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetShowFloatingDamageText
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetShowFloatingDamageText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetShowFloatingDamageText");

	UIndianaGameUserSettings_GetShowFloatingDamageText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetShowEquipmentRepairWarning
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetShowEquipmentRepairWarning()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetShowEquipmentRepairWarning");

	UIndianaGameUserSettings_GetShowEquipmentRepairWarning_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetShowEnemyHealthBars
// ()
// Parameters:
// EEnemyHealthBarMode            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EEnemyHealthBarMode UIndianaGameUserSettings::GetShowEnemyHealthBars()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetShowEnemyHealthBars");

	UIndianaGameUserSettings_GetShowEnemyHealthBars_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetShowEnemyAwarenessMeters
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetShowEnemyAwarenessMeters()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetShowEnemyAwarenessMeters");

	UIndianaGameUserSettings_GetShowEnemyAwarenessMeters_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetShowDisguiseMeter
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetShowDisguiseMeter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetShowDisguiseMeter");

	UIndianaGameUserSettings_GetShowDisguiseMeter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetShowDirectionalDamageIndicators
// ()
// Parameters:
// EDirectionalDamageIndicatorMode ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EDirectionalDamageIndicatorMode UIndianaGameUserSettings::GetShowDirectionalDamageIndicators()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetShowDirectionalDamageIndicators");

	UIndianaGameUserSettings_GetShowDirectionalDamageIndicators_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetShowCompass
// ()
// Parameters:
// ECompassVisibilityMode         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECompassVisibilityMode UIndianaGameUserSettings::GetShowCompass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetShowCompass");

	UIndianaGameUserSettings_GetShowCompass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetShowCompanionPassiveCD
// ()
// Parameters:
// ECompanionAbilityPassiveCDMode ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECompanionAbilityPassiveCDMode UIndianaGameUserSettings::GetShowCompanionPassiveCD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetShowCompanionPassiveCD");

	UIndianaGameUserSettings_GetShowCompanionPassiveCD_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetShowCompanionHelmets
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetShowCompanionHelmets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetShowCompanionHelmets");

	UIndianaGameUserSettings_GetShowCompanionHelmets_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetShowCombatIndicator
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetShowCombatIndicator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetShowCombatIndicator");

	UIndianaGameUserSettings_GetShowCombatIndicator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetRadialSensitivity
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaGameUserSettings::GetRadialSensitivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetRadialSensitivity");

	UIndianaGameUserSettings_GetRadialSensitivity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetQuestUpdateMode
// ()
// Parameters:
// EQuestUpdateMode               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EQuestUpdateMode UIndianaGameUserSettings::GetQuestUpdateMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetQuestUpdateMode");

	UIndianaGameUserSettings_GetQuestUpdateMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetPseudoGodMode
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetPseudoGodMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetPseudoGodMode");

	UIndianaGameUserSettings_GetPseudoGodMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetPlayerStatusEffectTextMode
// ()
// Parameters:
// EPlayerStatusEffectTextMode    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EPlayerStatusEffectTextMode UIndianaGameUserSettings::GetPlayerStatusEffectTextMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetPlayerStatusEffectTextMode");

	UIndianaGameUserSettings_GetPlayerStatusEffectTextMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetPlayerStatusBarMode
// ()
// Parameters:
// EPlayerStatusBarMode           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EPlayerStatusBarMode UIndianaGameUserSettings::GetPlayerStatusBarMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetPlayerStatusBarMode");

	UIndianaGameUserSettings_GetPlayerStatusBarMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetOffsetReticle
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetOffsetReticle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetOffsetReticle");

	UIndianaGameUserSettings_GetOffsetReticle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetNotificationDuration
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaGameUserSettings::GetNotificationDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetNotificationDuration");

	UIndianaGameUserSettings_GetNotificationDuration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetMusicSoundVolume
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaGameUserSettings::GetMusicSoundVolume()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetMusicSoundVolume");

	UIndianaGameUserSettings_GetMusicSoundVolume_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetMouseSensitivity
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaGameUserSettings::GetMouseSensitivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetMouseSensitivity");

	UIndianaGameUserSettings_GetMouseSensitivity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetMouseADSSensitivity
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaGameUserSettings::GetMouseADSSensitivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetMouseADSSensitivity");

	UIndianaGameUserSettings_GetMouseADSSensitivity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetMotionBlurScale
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaGameUserSettings::GetMotionBlurScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetMotionBlurScale");

	UIndianaGameUserSettings_GetMotionBlurScale_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetMedicalInhalerUIMode
// ()
// Parameters:
// EMedicalInhalerMode            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EMedicalInhalerMode UIndianaGameUserSettings::GetMedicalInhalerUIMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetMedicalInhalerUIMode");

	UIndianaGameUserSettings_GetMedicalInhalerUIMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetMasterSoundVolume
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaGameUserSettings::GetMasterSoundVolume()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetMasterSoundVolume");

	UIndianaGameUserSettings_GetMasterSoundVolume_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetLanguageMode
// ()
// Parameters:
// ELanguageMode                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ELanguageMode UIndianaGameUserSettings::GetLanguageMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetLanguageMode");

	UIndianaGameUserSettings_GetLanguageMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetIsSimplifiedLockpickHackingMode
// ()
// Parameters:
// ESimplifiedLockpickHackingMode ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ESimplifiedLockpickHackingMode UIndianaGameUserSettings::GetIsSimplifiedLockpickHackingMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetIsSimplifiedLockpickHackingMode");

	UIndianaGameUserSettings_GetIsSimplifiedLockpickHackingMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetIsSimplifiedEquipmentRepairWarning
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetIsSimplifiedEquipmentRepairWarning()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetIsSimplifiedEquipmentRepairWarning");

	UIndianaGameUserSettings_GetIsSimplifiedEquipmentRepairWarning_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetIsFreshUserSettings
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetIsFreshUserSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetIsFreshUserSettings");

	UIndianaGameUserSettings_GetIsFreshUserSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetInfiniteAmmo
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetInfiniteAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetInfiniteAmmo");

	UIndianaGameUserSettings_GetInfiniteAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetHUDVisibility
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetHUDVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetHUDVisibility");

	UIndianaGameUserSettings_GetHUDVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetHUDMode
// ()
// Parameters:
// EHUDMode                       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EHUDMode UIndianaGameUserSettings::GetHUDMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetHUDMode");

	UIndianaGameUserSettings_GetHUDMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetHeldWeaponDisplayTextMode
// ()
// Parameters:
// EHeldWeaponDisplayText         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EHeldWeaponDisplayText UIndianaGameUserSettings::GetHeldWeaponDisplayTextMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetHeldWeaponDisplayTextMode");

	UIndianaGameUserSettings_GetHeldWeaponDisplayTextMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetHeldWeaponDisplayMode
// ()
// Parameters:
// EHeldWeaponDisplayMode         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EHeldWeaponDisplayMode UIndianaGameUserSettings::GetHeldWeaponDisplayMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetHeldWeaponDisplayMode");

	UIndianaGameUserSettings_GetHeldWeaponDisplayMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetHeadbobbing
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetHeadbobbing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetHeadbobbing");

	UIndianaGameUserSettings_GetHeadbobbing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetGraphicsQuality
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UIndianaGameUserSettings::GetGraphicsQuality()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetGraphicsQuality");

	UIndianaGameUserSettings_GetGraphicsQuality_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetGodMode
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetGodMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetGodMode");

	UIndianaGameUserSettings_GetGodMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetGammaLevel
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaGameUserSettings::GetGammaLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetGammaLevel");

	UIndianaGameUserSettings_GetGammaLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetFPSLimit
// ()
// Parameters:
// EFPSLimit                      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EFPSLimit UIndianaGameUserSettings::GetFPSLimit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetFPSLimit");

	UIndianaGameUserSettings_GetFPSLimit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetFPSIndicatorMode
// ()
// Parameters:
// EFPSIndicatorMode              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EFPSIndicatorMode UIndianaGameUserSettings::GetFPSIndicatorMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetFPSIndicatorMode");

	UIndianaGameUserSettings_GetFPSIndicatorMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetFOV
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaGameUserSettings::GetFOV()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetFOV");

	UIndianaGameUserSettings_GetFOV_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetFontSizeModifier
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UIndianaGameUserSettings::GetFontSizeModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetFontSizeModifier");

	UIndianaGameUserSettings_GetFontSizeModifier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetEffectsSoundVolume
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaGameUserSettings::GetEffectsSoundVolume()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetEffectsSoundVolume");

	UIndianaGameUserSettings_GetEffectsSoundVolume_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetDodgeDisplayMode
// ()
// Parameters:
// EDodgeDisplayMode              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EDodgeDisplayMode UIndianaGameUserSettings::GetDodgeDisplayMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetDodgeDisplayMode");

	UIndianaGameUserSettings_GetDodgeDisplayMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetDialogSkillMode
// ()
// Parameters:
// EDialogSkillMode               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EDialogSkillMode UIndianaGameUserSettings::GetDialogSkillMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetDialogSkillMode");

	UIndianaGameUserSettings_GetDialogSkillMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetConversationSubtitleMode
// ()
// Parameters:
// EConversationSubtitleMode      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EConversationSubtitleMode UIndianaGameUserSettings::GetConversationSubtitleMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetConversationSubtitleMode");

	UIndianaGameUserSettings_GetConversationSubtitleMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetConversationContinueOnVOEnd
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetConversationContinueOnVOEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetConversationContinueOnVOEnd");

	UIndianaGameUserSettings_GetConversationContinueOnVOEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetControllerYAxisInverted
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetControllerYAxisInverted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetControllerYAxisInverted");

	UIndianaGameUserSettings_GetControllerYAxisInverted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetControllerXAxisInverted
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetControllerXAxisInverted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetControllerXAxisInverted");

	UIndianaGameUserSettings_GetControllerXAxisInverted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetControllerSensitivity
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaGameUserSettings::GetControllerSensitivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetControllerSensitivity");

	UIndianaGameUserSettings_GetControllerSensitivity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetControllerRumbleEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetControllerRumbleEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetControllerRumbleEnabled");

	UIndianaGameUserSettings_GetControllerRumbleEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetControllerRightOuterDeadZone
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaGameUserSettings::GetControllerRightOuterDeadZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetControllerRightOuterDeadZone");

	UIndianaGameUserSettings_GetControllerRightOuterDeadZone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetControllerRightInnerDeadZone
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaGameUserSettings::GetControllerRightInnerDeadZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetControllerRightInnerDeadZone");

	UIndianaGameUserSettings_GetControllerRightInnerDeadZone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetControllerLeftOuterDeadZone
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaGameUserSettings::GetControllerLeftOuterDeadZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetControllerLeftOuterDeadZone");

	UIndianaGameUserSettings_GetControllerLeftOuterDeadZone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetControllerLeftInnerDeadZone
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaGameUserSettings::GetControllerLeftInnerDeadZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetControllerLeftInnerDeadZone");

	UIndianaGameUserSettings_GetControllerLeftInnerDeadZone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetControllerAutoSprintEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetControllerAutoSprintEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetControllerAutoSprintEnabled");

	UIndianaGameUserSettings_GetControllerAutoSprintEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetControllerADSSensitivity
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaGameUserSettings::GetControllerADSSensitivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetControllerADSSensitivity");

	UIndianaGameUserSettings_GetControllerADSSensitivity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetCompanionStatusUIMode
// ()
// Parameters:
// ECompanionStatusMode           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECompanionStatusMode UIndianaGameUserSettings::GetCompanionStatusUIMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetCompanionStatusUIMode");

	UIndianaGameUserSettings_GetCompanionStatusUIMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetCompanionPassiveCDNotificationMode
// ()
// Parameters:
// ECompanionAbilityPassiveNotificationMode ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECompanionAbilityPassiveNotificationMode UIndianaGameUserSettings::GetCompanionPassiveCDNotificationMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetCompanionPassiveCDNotificationMode");

	UIndianaGameUserSettings_GetCompanionPassiveCDNotificationMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetCompanionOutlineMode
// ()
// Parameters:
// ECompanionOutlineMode          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECompanionOutlineMode UIndianaGameUserSettings::GetCompanionOutlineMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetCompanionOutlineMode");

	UIndianaGameUserSettings_GetCompanionOutlineMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetCompanionAbilityUIMode
// ()
// Parameters:
// ECompanionAbilityUIMode        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECompanionAbilityUIMode UIndianaGameUserSettings::GetCompanionAbilityUIMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetCompanionAbilityUIMode");

	UIndianaGameUserSettings_GetCompanionAbilityUIMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetCompanionAbilityBindingMode
// ()
// Parameters:
// ECompanionAbilityBindingMode   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECompanionAbilityBindingMode UIndianaGameUserSettings::GetCompanionAbilityBindingMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetCompanionAbilityBindingMode");

	UIndianaGameUserSettings_GetCompanionAbilityBindingMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetColorblindModeEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetColorblindModeEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetColorblindModeEnabled");

	UIndianaGameUserSettings_GetColorblindModeEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetCinematicSubtitlesVisible
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetCinematicSubtitlesVisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetCinematicSubtitlesVisible");

	UIndianaGameUserSettings_GetCinematicSubtitlesVisible_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetCinematicKillCam
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetCinematicKillCam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetCinematicKillCam");

	UIndianaGameUserSettings_GetCinematicKillCam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetChromaticAberration
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetChromaticAberration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetChromaticAberration");

	UIndianaGameUserSettings_GetChromaticAberration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetBarkSubtitlesVisible
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetBarkSubtitlesVisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetBarkSubtitlesVisible");

	UIndianaGameUserSettings_GetBarkSubtitlesVisible_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetAxisKeyBinds
// ()
// Parameters:
// struct FName                   AxisName                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FInputAxisKeyMapping> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FInputAxisKeyMapping> UIndianaGameUserSettings::GetAxisKeyBinds(const struct FName& AxisName, float Scale)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetAxisKeyBinds");

	UIndianaGameUserSettings_GetAxisKeyBinds_Params params;
	params.AxisName = AxisName;
	params.Scale = Scale;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetAutoCollapseItemViewers
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaGameUserSettings::GetAutoCollapseItemViewers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetAutoCollapseItemViewers");

	UIndianaGameUserSettings_GetAutoCollapseItemViewers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetAreaNameMode
// ()
// Parameters:
// EAreaNameMode                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EAreaNameMode UIndianaGameUserSettings::GetAreaNameMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetAreaNameMode");

	UIndianaGameUserSettings_GetAreaNameMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetAntiAliasingMethod
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UIndianaGameUserSettings::GetAntiAliasingMethod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetAntiAliasingMethod");

	UIndianaGameUserSettings_GetAntiAliasingMethod_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetAimingReticleMode
// ()
// Parameters:
// EReticleMode                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EReticleMode UIndianaGameUserSettings::GetAimingReticleMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetAimingReticleMode");

	UIndianaGameUserSettings_GetAimingReticleMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetActionKeyBinds
// (BlueprintCosmetic)
// Parameters:
// struct FName                   ActionName                     (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FInputActionKeyMapping> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FInputActionKeyMapping> UIndianaGameUserSettings::GetActionKeyBinds(const struct FName& ActionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetActionKeyBinds");

	UIndianaGameUserSettings_GetActionKeyBinds_Params params;
	params.ActionName = ActionName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.GetAbilityControlUIMode
// ()
// Parameters:
// EAbilityControlMode            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EAbilityControlMode UIndianaGameUserSettings::GetAbilityControlUIMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.GetAbilityControlUIMode");

	UIndianaGameUserSettings_GetAbilityControlUIMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameUserSettings.Get3DResolution
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaGameUserSettings::Get3DResolution()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameUserSettings.Get3DResolution");

	UIndianaGameUserSettings_Get3DResolution_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaGameViewportClient.SetSoundOverride
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaGameViewportClient::STATIC_SetSoundOverride()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGameViewportClient.SetSoundOverride");

	UIndianaGameViewportClient_SetSoundOverride_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaGlobals.GetTutorialManager
// ()
// Parameters:
// class UTutorialManager*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTutorialManager* UIndianaGlobals::GetTutorialManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaGlobals.GetTutorialManager");

	UIndianaGlobals_GetTutorialManager_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaLoadingScreenManager.DebugShowLoadingScreen
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   MapName                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UIndianaLoadingScreenManager::STATIC_DebugShowLoadingScreen(const struct FName& MapName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaLoadingScreenManager.DebugShowLoadingScreen");

	UIndianaLoadingScreenManager_DebugShowLoadingScreen_Params params;
	params.MapName = MapName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaNavigationSystem.UnregisterArea
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Source                         (Parm, ZeroConstructor, IsPlainOldData)
// EOccupationChannel             Channel                        (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaNavigationSystem::STATIC_UnregisterArea(class AActor* Source, EOccupationChannel Channel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaNavigationSystem.UnregisterArea");

	UIndianaNavigationSystem_UnregisterArea_Params params;
	params.Source = Source;
	params.Channel = Channel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaNavigationSystem.TraceOccupation
// (BlueprintAuthorityOnly)
// Parameters:
// class AActor*                  Source                         (Parm, ZeroConstructor, IsPlainOldData)
// EOccupationChannel             Channel                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Start                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 End                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UIndianaNavigationSystem::TraceOccupation(class AActor* Source, EOccupationChannel Channel, const struct FVector& Start, const struct FVector& End)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaNavigationSystem.TraceOccupation");

	UIndianaNavigationSystem_TraceOccupation_Params params;
	params.Source = Source;
	params.Channel = Channel;
	params.Start = Start;
	params.End = End;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaNavigationSystem.RegisterArea
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Source                         (Parm, ZeroConstructor, IsPlainOldData)
// EOccupationChannel             Channel                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 Extents                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FRotator                Transform                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UIndianaNavigationSystem::STATIC_RegisterArea(class AActor* Source, EOccupationChannel Channel, const struct FVector& Location, const struct FVector& Extents, const struct FRotator& Transform)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaNavigationSystem.RegisterArea");

	UIndianaNavigationSystem_RegisterArea_Params params;
	params.Source = Source;
	params.Channel = Channel;
	params.Location = Location;
	params.Extents = Extents;
	params.Transform = Transform;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPathFollowingComponent.OnCapsuleSizeChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaPathFollowingComponent::STATIC_OnCapsuleSizeChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPathFollowingComponent.OnCapsuleSizeChange");

	UIndianaPathFollowingComponent_OnCapsuleSizeChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPathFollowingComponent.EndStationaryRotate
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaPathFollowingComponent::STATIC_EndStationaryRotate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPathFollowingComponent.EndStationaryRotate");

	UIndianaPathFollowingComponent_EndStationaryRotate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerAudioComponent.TacticalTimeDilationStart
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaPlayerAudioComponent::STATIC_TacticalTimeDilationStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerAudioComponent.TacticalTimeDilationStart");

	UIndianaPlayerAudioComponent_TacticalTimeDilationStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerAudioComponent.TacticalTimeDilationEnd
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaPlayerAudioComponent::STATIC_TacticalTimeDilationEnd(float Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerAudioComponent.TacticalTimeDilationEnd");

	UIndianaPlayerAudioComponent_TacticalTimeDilationEnd_Params params;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerAudioComponent.OnStealthChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bStealthed                     (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaPlayerAudioComponent::STATIC_OnStealthChange(bool bStealthed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerAudioComponent.OnStealthChange");

	UIndianaPlayerAudioComponent_OnStealthChange_Params params;
	params.bStealthed = bStealthed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerAudioComponent.OnKillCameraStart
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  CameraTarget                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UIndianaPlayerAudioComponent::STATIC_OnKillCameraStart(class AActor* CameraTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerAudioComponent.OnKillCameraStart");

	UIndianaPlayerAudioComponent_OnKillCameraStart_Params params;
	params.CameraTarget = CameraTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerAudioComponent.OnKillCameraEnd
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaPlayerAudioComponent::STATIC_OnKillCameraEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerAudioComponent.OnKillCameraEnd");

	UIndianaPlayerAudioComponent_OnKillCameraEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerAudioComponent.OnDisguiseUnequipped
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaPlayerAudioComponent::STATIC_OnDisguiseUnequipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerAudioComponent.OnDisguiseUnequipped");

	UIndianaPlayerAudioComponent_OnDisguiseUnequipped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerAudioComponent.OnDisguiseRefilled
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaPlayerAudioComponent::STATIC_OnDisguiseRefilled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerAudioComponent.OnDisguiseRefilled");

	UIndianaPlayerAudioComponent_OnDisguiseRefilled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerAudioComponent.OnDisguiseMeterChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Meter                          (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaPlayerAudioComponent::STATIC_OnDisguiseMeterChanged(float Meter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerAudioComponent.OnDisguiseMeterChanged");

	UIndianaPlayerAudioComponent_OnDisguiseMeterChanged_Params params;
	params.Meter = Meter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerAudioComponent.OnDisguiseEquipped
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UDisguiseData*           Disguise                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UIndianaPlayerAudioComponent::STATIC_OnDisguiseEquipped(class UDisguiseData* Disguise)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerAudioComponent.OnDisguiseEquipped");

	UIndianaPlayerAudioComponent_OnDisguiseEquipped_Params params;
	params.Disguise = Disguise;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerAudioComponent.OnDisguiseDrainStart
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaPlayerAudioComponent::STATIC_OnDisguiseDrainStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerAudioComponent.OnDisguiseDrainStart");

	UIndianaPlayerAudioComponent_OnDisguiseDrainStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerAudioComponent.OnDisguiseDrainEnd
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UIndianaPlayerAudioComponent::STATIC_OnDisguiseDrainEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerAudioComponent.OnDisguiseDrainEnd");

	UIndianaPlayerAudioComponent_OnDisguiseDrainEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerAudioComponent.OnDetectionChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EDetectionType                 DetectionType                  (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaPlayerAudioComponent::STATIC_OnDetectionChange(EDetectionType DetectionType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerAudioComponent.OnDetectionChange");

	UIndianaPlayerAudioComponent_OnDetectionChange_Params params;
	params.DetectionType = DetectionType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerAudioComponent.OnCompanionCommandCooldownEnd
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ECompanionCommand              Command                        (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaPlayerAudioComponent::STATIC_OnCompanionCommandCooldownEnd(ECompanionCommand Command)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerAudioComponent.OnCompanionCommandCooldownEnd");

	UIndianaPlayerAudioComponent_OnCompanionCommandCooldownEnd_Params params;
	params.Command = Command;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerAudioComponent.OnCombatStateChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bInCombat                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaPlayerAudioComponent::STATIC_OnCombatStateChanged(bool bInCombat, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerAudioComponent.OnCombatStateChanged");

	UIndianaPlayerAudioComponent_OnCombatStateChanged_Params params;
	params.bInCombat = bInCombat;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerAudioComponent.OnCalledShotCameraStep
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Attacker                       (Parm, ZeroConstructor, IsPlainOldData)
// ECalledShotCameraStep          OldCameraStep                  (Parm, ZeroConstructor, IsPlainOldData)
// ECalledShotCameraStep          NewCameraStep                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bCloseRange                    (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaPlayerAudioComponent::STATIC_OnCalledShotCameraStep(class AActor* Attacker, ECalledShotCameraStep OldCameraStep, ECalledShotCameraStep NewCameraStep, bool bCloseRange)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerAudioComponent.OnCalledShotCameraStep");

	UIndianaPlayerAudioComponent_OnCalledShotCameraStep_Params params;
	params.Attacker = Attacker;
	params.OldCameraStep = OldCameraStep;
	params.NewCameraStep = NewCameraStep;
	params.bCloseRange = bCloseRange;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerAudioComponent.GamePauseChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bPaused                        (Parm, ZeroConstructor, IsPlainOldData)

void UIndianaPlayerAudioComponent::STATIC_GamePauseChanged(bool bPaused)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerAudioComponent.GamePauseChanged");

	UIndianaPlayerAudioComponent_GamePauseChanged_Params params;
	params.bPaused = bPaused;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.WasPONRRollbackRecentlyPerformed
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AIndianaPlayerCharacter::WasPONRRollbackRecentlyPerformed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.WasPONRRollbackRecentlyPerformed");

	AIndianaPlayerCharacter_WasPONRRollbackRecentlyPerformed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaPlayerCharacter.TravelToDestination
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UTravelDestinationData*  Destination                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bTriggerAutosave               (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_TravelToDestination(class UTravelDestinationData* Destination, bool bTriggerAutosave)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.TravelToDestination");

	AIndianaPlayerCharacter_TravelToDestination_Params params;
	params.Destination = Destination;
	params.bTriggerAutosave = bTriggerAutosave;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.ToggleUnlockTravelPoints
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerCharacter::STATIC_ToggleUnlockTravelPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.ToggleUnlockTravelPoints");

	AIndianaPlayerCharacter_ToggleUnlockTravelPoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.TinkerAdvanceWeapon
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bIgnoreCost                    (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_TinkerAdvanceWeapon(bool bIgnoreCost)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.TinkerAdvanceWeapon");

	AIndianaPlayerCharacter_TinkerAdvanceWeapon_Params params;
	params.bIgnoreCost = bIgnoreCost;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.SuppressInput
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bSuppress                      (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_SuppressInput(bool bSuppress)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.SuppressInput");

	AIndianaPlayerCharacter_SuppressInput_Params params;
	params.bSuppress = bSuppress;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.SetVisitedTravelDestination
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UTravelDestinationData*  TravelDest                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_SetVisitedTravelDestination(class UTravelDestinationData* TravelDest)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.SetVisitedTravelDestination");

	AIndianaPlayerCharacter_SetVisitedTravelDestination_Params params;
	params.TravelDest = TravelDest;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.SetVisitedRegion
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UTravelRegionData*       Region                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_SetVisitedRegion(class UTravelRegionData* Region)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.SetVisitedRegion");

	AIndianaPlayerCharacter_SetVisitedRegion_Params params;
	params.Region = Region;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.SetTutorialsEnabled
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_SetTutorialsEnabled(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.SetTutorialsEnabled");

	AIndianaPlayerCharacter_SetTutorialsEnabled_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.SetTravelDestinationLocked
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UTravelDestinationData*  TravelDest                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           bLocked                        (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_SetTravelDestinationLocked(class UTravelDestinationData* TravelDest, bool bLocked)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.SetTravelDestinationLocked");

	AIndianaPlayerCharacter_SetTravelDestinationLocked_Params params;
	params.TravelDest = TravelDest;
	params.bLocked = bLocked;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.SetTravelDestinationHidden
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UTravelDestinationData*  TravelDest                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSetHidden                     (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_SetTravelDestinationHidden(class UTravelDestinationData* TravelDest, bool bSetHidden)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.SetTravelDestinationHidden");

	AIndianaPlayerCharacter_SetTravelDestinationHidden_Params params;
	params.TravelDest = TravelDest;
	params.bSetHidden = bSetHidden;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.SetMovementEnabled
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bNewIsMovementEnabled          (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_SetMovementEnabled(bool bNewIsMovementEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.SetMovementEnabled");

	AIndianaPlayerCharacter_SetMovementEnabled_Params params;
	params.bNewIsMovementEnabled = bNewIsMovementEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.SetIsInLowGravity
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bNewIsInLowGravity             (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_SetIsInLowGravity(bool bNewIsInLowGravity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.SetIsInLowGravity");

	AIndianaPlayerCharacter_SetIsInLowGravity_Params params;
	params.bNewIsInLowGravity = bNewIsInLowGravity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.SetCurrentShipLocation
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UShipDestinationData*    ShipDest                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_SetCurrentShipLocation(class UShipDestinationData* ShipDest)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.SetCurrentShipLocation");

	AIndianaPlayerCharacter_SetCurrentShipLocation_Params params;
	params.ShipDest = ShipDest;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.SetAwareOfTravelDestination
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UTravelDestinationData*  TravelDest                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_SetAwareOfTravelDestination(class UTravelDestinationData* TravelDest)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.SetAwareOfTravelDestination");

	AIndianaPlayerCharacter_SetAwareOfTravelDestination_Params params;
	params.TravelDest = TravelDest;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.SetAwareOfRegion
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UTravelRegionData*       Region                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_SetAwareOfRegion(class UTravelRegionData* Region)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.SetAwareOfRegion");

	AIndianaPlayerCharacter_SetAwareOfRegion_Params params;
	params.Region = Region;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.SetAllLevels
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            Level                          (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_SetAllLevels(int Level)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.SetAllLevels");

	AIndianaPlayerCharacter_SetAllLevels_Params params;
	params.Level = Level;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.PointOfNoReturnRollback
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerCharacter::STATIC_PointOfNoReturnRollback()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.PointOfNoReturnRollback");

	AIndianaPlayerCharacter_PointOfNoReturnRollback_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.PointOfNoReturnFixQuests
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerCharacter::STATIC_PointOfNoReturnFixQuests()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.PointOfNoReturnFixQuests");

	AIndianaPlayerCharacter_PointOfNoReturnFixQuests_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.PointOfNoReturnFixItems
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerCharacter::STATIC_PointOfNoReturnFixItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.PointOfNoReturnFixItems");

	AIndianaPlayerCharacter_PointOfNoReturnFixItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.PointOfNoReturnFixGlobalVars
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerCharacter::STATIC_PointOfNoReturnFixGlobalVars()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.PointOfNoReturnFixGlobalVars");

	AIndianaPlayerCharacter_PointOfNoReturnFixGlobalVars_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.PointOfNoReturnFixConversations
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerCharacter::STATIC_PointOfNoReturnFixConversations()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.PointOfNoReturnFixConversations");

	AIndianaPlayerCharacter_PointOfNoReturnFixConversations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.OnUndetected
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerCharacter::STATIC_OnUndetected()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.OnUndetected");

	AIndianaPlayerCharacter_OnUndetected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.OnStopCrouch
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerCharacter::STATIC_OnStopCrouch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.OnStopCrouch");

	AIndianaPlayerCharacter_OnStopCrouch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.OnSoftCoverExited
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerCharacter::STATIC_OnSoftCoverExited()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.OnSoftCoverExited");

	AIndianaPlayerCharacter_OnSoftCoverExited_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.OnSoftCoverEntered
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerCharacter::STATIC_OnSoftCoverEntered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.OnSoftCoverEntered");

	AIndianaPlayerCharacter_OnSoftCoverEntered_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.OnPlayerStealthExitedBP
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerCharacter::STATIC_OnPlayerStealthExitedBP()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.OnPlayerStealthExitedBP");

	AIndianaPlayerCharacter_OnPlayerStealthExitedBP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.OnPlayerStealthEnteredBP
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerCharacter::STATIC_OnPlayerStealthEnteredBP()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.OnPlayerStealthEnteredBP");

	AIndianaPlayerCharacter_OnPlayerStealthEnteredBP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.OnPlayerSoftCoverExitedBP
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerCharacter::STATIC_OnPlayerSoftCoverExitedBP()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.OnPlayerSoftCoverExitedBP");

	AIndianaPlayerCharacter_OnPlayerSoftCoverExitedBP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.OnPlayerSoftCoverEnteredBP
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerCharacter::STATIC_OnPlayerSoftCoverEnteredBP()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.OnPlayerSoftCoverEnteredBP");

	AIndianaPlayerCharacter_OnPlayerSoftCoverEnteredBP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.OnPlayerInventoryItemConsumed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)

void AIndianaPlayerCharacter::STATIC_OnPlayerInventoryItemConsumed(const struct FItemStack& ItemStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.OnPlayerInventoryItemConsumed");

	AIndianaPlayerCharacter_OnPlayerInventoryItemConsumed_Params params;
	params.ItemStack = ItemStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.OnPlayerInventoryItemAdded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)

void AIndianaPlayerCharacter::STATIC_OnPlayerInventoryItemAdded(const struct FItemStack& ItemStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.OnPlayerInventoryItemAdded");

	AIndianaPlayerCharacter_OnPlayerInventoryItemAdded_Params params;
	params.ItemStack = ItemStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.OnPauseStateChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bIsPaused                      (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_OnPauseStateChanged(bool bIsPaused)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.OnPauseStateChanged");

	AIndianaPlayerCharacter_OnPauseStateChanged_Params params;
	params.bIsPaused = bIsPaused;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.OnPartyCombatDamageTaken
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FCauseDamageInfo        DamageInfo                     (ConstParm, Parm, OutParm, ReferenceParm)

void AIndianaPlayerCharacter::STATIC_OnPartyCombatDamageTaken(const struct FCauseDamageInfo& DamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.OnPartyCombatDamageTaken");

	AIndianaPlayerCharacter_OnPartyCombatDamageTaken_Params params;
	params.DamageInfo = DamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.OnJumpLanded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          FallDistance                   (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_OnJumpLanded(float FallDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.OnJumpLanded");

	AIndianaPlayerCharacter_OnJumpLanded_Params params;
	params.FallDistance = FallDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.OnHit
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UPrimitiveComponent*     HitComp                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_OnHit(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.OnHit");

	AIndianaPlayerCharacter_OnHit_Params params;
	params.HitComp = HitComp;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.OnDodged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EDodgeDirection                EDodgeDirection                (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_OnDodged(EDodgeDirection EDodgeDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.OnDodged");

	AIndianaPlayerCharacter_OnDodged_Params params;
	params.EDodgeDirection = EDodgeDirection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.OnDetected
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Detector                       (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_OnDetected(class AActor* Detector)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.OnDetected");

	AIndianaPlayerCharacter_OnDetected_Params params;
	params.Detector = Detector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.OnCrouchComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerCharacter::STATIC_OnCrouchComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.OnCrouchComplete");

	AIndianaPlayerCharacter_OnCrouchComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.OffsetReticleChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bUseOffsetReticle              (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_OffsetReticleChanged(bool bUseOffsetReticle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.OffsetReticleChanged");

	AIndianaPlayerCharacter_OffsetReticleChanged_Params params;
	params.bUseOffsetReticle = bUseOffsetReticle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.MentionPointOfInterest
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UPointOfInterestData*    POIData                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_MentionPointOfInterest(class UPointOfInterestData* POIData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.MentionPointOfInterest");

	AIndianaPlayerCharacter_MentionPointOfInterest_Params params;
	params.POIData = POIData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.MakePointOfInterestDiscoverable
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UPointOfInterestData*    POIData                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           bStillHidden                   (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_MakePointOfInterestDiscoverable(class UPointOfInterestData* POIData, bool bStillHidden)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.MakePointOfInterestDiscoverable");

	AIndianaPlayerCharacter_MakePointOfInterestDiscoverable_Params params;
	params.POIData = POIData;
	params.bStillHidden = bStillHidden;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.IsTravelDestinationLocked
// (BlueprintCosmetic)
// Parameters:
// class UTravelDestinationData*  TravelDest                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AIndianaPlayerCharacter::IsTravelDestinationLocked(class UTravelDestinationData* TravelDest)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.IsTravelDestinationLocked");

	AIndianaPlayerCharacter_IsTravelDestinationLocked_Params params;
	params.TravelDest = TravelDest;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaPlayerCharacter.IsTravelDestinationHidden
// (BlueprintCosmetic)
// Parameters:
// class UTravelDestinationData*  TravelDest                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AIndianaPlayerCharacter::IsTravelDestinationHidden(class UTravelDestinationData* TravelDest)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.IsTravelDestinationHidden");

	AIndianaPlayerCharacter_IsTravelDestinationHidden_Params params;
	params.TravelDest = TravelDest;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaPlayerCharacter.IsShipCurrentlyAt
// (BlueprintCosmetic)
// Parameters:
// class UTravelDestinationData*  ShipDest                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AIndianaPlayerCharacter::IsShipCurrentlyAt(class UTravelDestinationData* ShipDest)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.IsShipCurrentlyAt");

	AIndianaPlayerCharacter_IsShipCurrentlyAt_Params params;
	params.ShipDest = ShipDest;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaPlayerCharacter.IsAwareOfTravelDestination
// (BlueprintCosmetic)
// Parameters:
// class UTravelDestinationData*  TravelDest                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AIndianaPlayerCharacter::IsAwareOfTravelDestination(class UTravelDestinationData* TravelDest)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.IsAwareOfTravelDestination");

	AIndianaPlayerCharacter_IsAwareOfTravelDestination_Params params;
	params.TravelDest = TravelDest;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaPlayerCharacter.IsAwareOfRegion
// (BlueprintCosmetic)
// Parameters:
// class UTravelRegionData*       Region                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AIndianaPlayerCharacter::IsAwareOfRegion(class UTravelRegionData* Region)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.IsAwareOfRegion");

	AIndianaPlayerCharacter_IsAwareOfRegion_Params params;
	params.Region = Region;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaPlayerCharacter.IsAwareOfPointOfInterest
// (BlueprintCosmetic)
// Parameters:
// class UPointOfInterestData*    POIData                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AIndianaPlayerCharacter::IsAwareOfPointOfInterest(class UPointOfInterestData* POIData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.IsAwareOfPointOfInterest");

	AIndianaPlayerCharacter_IsAwareOfPointOfInterest_Params params;
	params.POIData = POIData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaPlayerCharacter.InitiateTravelToShipLocation
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerCharacter::STATIC_InitiateTravelToShipLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.InitiateTravelToShipLocation");

	AIndianaPlayerCharacter_InitiateTravelToShipLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.HidePointOfInterest
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UPointOfInterestData*    POIData                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_HidePointOfInterest(class UPointOfInterestData* POIData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.HidePointOfInterest");

	AIndianaPlayerCharacter_HidePointOfInterest_Params params;
	params.POIData = POIData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.HeadbobbingChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bHeadbobbing                   (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_HeadbobbingChanged(bool bHeadbobbing)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.HeadbobbingChanged");

	AIndianaPlayerCharacter_HeadbobbingChanged_Params params;
	params.bHeadbobbing = bHeadbobbing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.HasVisitedTravelDestination
// (BlueprintCosmetic)
// Parameters:
// class UTravelDestinationData*  TravelDest                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AIndianaPlayerCharacter::HasVisitedTravelDestination(class UTravelDestinationData* TravelDest)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.HasVisitedTravelDestination");

	AIndianaPlayerCharacter_HasVisitedTravelDestination_Params params;
	params.TravelDest = TravelDest;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaPlayerCharacter.HasVisitedRegion
// (BlueprintCosmetic)
// Parameters:
// class UTravelRegionData*       Region                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AIndianaPlayerCharacter::HasVisitedRegion(class UTravelRegionData* Region)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.HasVisitedRegion");

	AIndianaPlayerCharacter_HasVisitedRegion_Params params;
	params.Region = Region;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaPlayerCharacter.HasOnlyHeardAboutPointOfInterest
// (BlueprintCosmetic)
// Parameters:
// class UPointOfInterestData*    POIData                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AIndianaPlayerCharacter::HasOnlyHeardAboutPointOfInterest(class UPointOfInterestData* POIData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.HasOnlyHeardAboutPointOfInterest");

	AIndianaPlayerCharacter_HasOnlyHeardAboutPointOfInterest_Params params;
	params.POIData = POIData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaPlayerCharacter.HasDiscoveredPointOfInterest
// (BlueprintCosmetic)
// Parameters:
// class UPointOfInterestData*    POIData                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AIndianaPlayerCharacter::HasDiscoveredPointOfInterest(class UPointOfInterestData* POIData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.HasDiscoveredPointOfInterest");

	AIndianaPlayerCharacter_HasDiscoveredPointOfInterest_Params params;
	params.POIData = POIData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaPlayerCharacter.GetIndianaPC
// ()
// Parameters:
// class AIndianaPlayerCharacter* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AIndianaPlayerCharacter* AIndianaPlayerCharacter::GetIndianaPC()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.GetIndianaPC");

	AIndianaPlayerCharacter_GetIndianaPC_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaPlayerCharacter.EvidenceScannerActivated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bActivated                     (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_EvidenceScannerActivated(bool bActivated)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.EvidenceScannerActivated");

	AIndianaPlayerCharacter_EvidenceScannerActivated_Params params;
	params.bActivated = bActivated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.EquippedWeaponChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeapon*                 NewlyEquippedWeapon            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_EquippedWeaponChanged(class UWeapon* NewlyEquippedWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.EquippedWeaponChanged");

	AIndianaPlayerCharacter_EquippedWeaponChanged_Params params;
	params.NewlyEquippedWeapon = NewlyEquippedWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.DiscoverPointOfInterest
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UPointOfInterestData*    POIData                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           bCanAwardXP                    (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_DiscoverPointOfInterest(class UPointOfInterestData* POIData, bool bCanAwardXP)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.DiscoverPointOfInterest");

	AIndianaPlayerCharacter_DiscoverPointOfInterest_Params params;
	params.POIData = POIData;
	params.bCanAwardXP = bCanAwardXP;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.DebugTravel_TravelToDestination
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   TravelDestination              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_DebugTravel_TravelToDestination(const struct FName& TravelDestination)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.DebugTravel_TravelToDestination");

	AIndianaPlayerCharacter_DebugTravel_TravelToDestination_Params params;
	params.TravelDestination = TravelDestination;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.DebugTravel_SetVisitedRegion
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   Region                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           bNewVisited                    (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_DebugTravel_SetVisitedRegion(const struct FName& Region, bool bNewVisited)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.DebugTravel_SetVisitedRegion");

	AIndianaPlayerCharacter_DebugTravel_SetVisitedRegion_Params params;
	params.Region = Region;
	params.bNewVisited = bNewVisited;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.DebugTravel_SetVisitedDestination
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   TravelDestination              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           bNewVisited                    (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_DebugTravel_SetVisitedDestination(const struct FName& TravelDestination, bool bNewVisited)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.DebugTravel_SetVisitedDestination");

	AIndianaPlayerCharacter_DebugTravel_SetVisitedDestination_Params params;
	params.TravelDestination = TravelDestination;
	params.bNewVisited = bNewVisited;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.DebugTravel_SetShipLocation
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   ShipLocation                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_DebugTravel_SetShipLocation(const struct FName& ShipLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.DebugTravel_SetShipLocation");

	AIndianaPlayerCharacter_DebugTravel_SetShipLocation_Params params;
	params.ShipLocation = ShipLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.DebugTravel_SetDestinationLocked
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   TravelDestination              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           bNewLocked                     (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_DebugTravel_SetDestinationLocked(const struct FName& TravelDestination, bool bNewLocked)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.DebugTravel_SetDestinationLocked");

	AIndianaPlayerCharacter_DebugTravel_SetDestinationLocked_Params params;
	params.TravelDestination = TravelDestination;
	params.bNewLocked = bNewLocked;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.DebugTravel_SetDestinationHidden
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   TravelDestination              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           bNewHidden                     (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_DebugTravel_SetDestinationHidden(const struct FName& TravelDestination, bool bNewHidden)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.DebugTravel_SetDestinationHidden");

	AIndianaPlayerCharacter_DebugTravel_SetDestinationHidden_Params params;
	params.TravelDestination = TravelDestination;
	params.bNewHidden = bNewHidden;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.DebugTravel_SetAwareRegion
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   Region                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           bNewAware                      (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_DebugTravel_SetAwareRegion(const struct FName& Region, bool bNewAware)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.DebugTravel_SetAwareRegion");

	AIndianaPlayerCharacter_DebugTravel_SetAwareRegion_Params params;
	params.Region = Region;
	params.bNewAware = bNewAware;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.DebugTravel_SetAwareDestination
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   TravelDestination              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           bNewAware                      (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_DebugTravel_SetAwareDestination(const struct FName& TravelDestination, bool bNewAware)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.DebugTravel_SetAwareDestination");

	AIndianaPlayerCharacter_DebugTravel_SetAwareDestination_Params params;
	params.TravelDestination = TravelDestination;
	params.bNewAware = bNewAware;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.DebugSoftCoverExited
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerCharacter::STATIC_DebugSoftCoverExited()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.DebugSoftCoverExited");

	AIndianaPlayerCharacter_DebugSoftCoverExited_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.DebugSoftCoverEntered
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerCharacter::STATIC_DebugSoftCoverEntered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.DebugSoftCoverEntered");

	AIndianaPlayerCharacter_DebugSoftCoverEntered_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerCharacter.CanDiscoverPointOfInterest
// (BlueprintCosmetic)
// Parameters:
// class UPointOfInterestData*    POIData                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AIndianaPlayerCharacter::CanDiscoverPointOfInterest(class UPointOfInterestData* POIData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.CanDiscoverPointOfInterest");

	AIndianaPlayerCharacter_CanDiscoverPointOfInterest_Params params;
	params.POIData = POIData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaPlayerCharacter.CanAccessTravelDestination
// (BlueprintCosmetic)
// Parameters:
// class UTravelDestinationData*  TravelDest                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AIndianaPlayerCharacter::CanAccessTravelDestination(class UTravelDestinationData* TravelDest)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.CanAccessTravelDestination");

	AIndianaPlayerCharacter_CanAccessTravelDestination_Params params;
	params.TravelDest = TravelDest;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaPlayerCharacter.AdjustWeaponHealth
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerCharacter::STATIC_AdjustWeaponHealth(float Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerCharacter.AdjustWeaponHealth");

	AIndianaPlayerCharacter_AdjustWeaponHealth_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.UnpinGlobalVariable
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  GlobalVariable                 (Parm, ZeroConstructor)

void AIndianaPlayerController::STATIC_UnpinGlobalVariable(const class FString& GlobalVariable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.UnpinGlobalVariable");

	AIndianaPlayerController_UnpinGlobalVariable_Params params;
	params.GlobalVariable = GlobalVariable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.ToggleQuestLog
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerController::STATIC_ToggleQuestLog()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.ToggleQuestLog");

	AIndianaPlayerController_ToggleQuestLog_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.TogglePauseMenu
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerController::STATIC_TogglePauseMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.TogglePauseMenu");

	AIndianaPlayerController_TogglePauseMenu_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.ToggleMap
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerController::STATIC_ToggleMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.ToggleMap");

	AIndianaPlayerController_ToggleMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.ToggleLedger
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerController::STATIC_ToggleLedger()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.ToggleLedger");

	AIndianaPlayerController_ToggleLedger_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.ToggleInventory
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerController::STATIC_ToggleInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.ToggleInventory");

	AIndianaPlayerController_ToggleInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.ToggleCompanions
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerController::STATIC_ToggleCompanions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.ToggleCompanions");

	AIndianaPlayerController_ToggleCompanions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.ToggleCharacterSummary
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerController::STATIC_ToggleCharacterSummary()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.ToggleCharacterSummary");

	AIndianaPlayerController_ToggleCharacterSummary_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.SetYAxisInverted
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bIsInverted                    (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerController::STATIC_SetYAxisInverted(bool bIsInverted)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.SetYAxisInverted");

	AIndianaPlayerController_SetYAxisInverted_Params params;
	params.bIsInverted = bIsInverted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.SetXAxisInverted
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bIsInverted                    (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerController::STATIC_SetXAxisInverted(bool bIsInverted)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.SetXAxisInverted");

	AIndianaPlayerController_SetXAxisInverted_Params params;
	params.bIsInverted = bIsInverted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.SetMouseSensitivity
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Value                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerController::STATIC_SetMouseSensitivity(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.SetMouseSensitivity");

	AIndianaPlayerController_SetMouseSensitivity_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.SetMouseADSSensitivity
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Value                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerController::STATIC_SetMouseADSSensitivity(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.SetMouseADSSensitivity");

	AIndianaPlayerController_SetMouseADSSensitivity_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.SetGlobalVariable
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  GlobalVariable                 (Parm, ZeroConstructor)
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerController::STATIC_SetGlobalVariable(const class FString& GlobalVariable, int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.SetGlobalVariable");

	AIndianaPlayerController_SetGlobalVariable_Params params;
	params.GlobalVariable = GlobalVariable;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.SetControllerYAxisInverted
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bIsInverted                    (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerController::STATIC_SetControllerYAxisInverted(bool bIsInverted)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.SetControllerYAxisInverted");

	AIndianaPlayerController_SetControllerYAxisInverted_Params params;
	params.bIsInverted = bIsInverted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.SetControllerXAxisInverted
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bIsInverted                    (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerController::STATIC_SetControllerXAxisInverted(bool bIsInverted)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.SetControllerXAxisInverted");

	AIndianaPlayerController_SetControllerXAxisInverted_Params params;
	params.bIsInverted = bIsInverted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.SetAutoSprintEnabled
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bIsEnabled                     (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerController::STATIC_SetAutoSprintEnabled(bool bIsEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.SetAutoSprintEnabled");

	AIndianaPlayerController_SetAutoSprintEnabled_Params params;
	params.bIsEnabled = bIsEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.PlayChatterOnTarget
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EChatterEventType              ChatterEvent                   (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerController::STATIC_PlayChatterOnTarget(EChatterEventType ChatterEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.PlayChatterOnTarget");

	AIndianaPlayerController_PlayChatterOnTarget_Params params;
	params.ChatterEvent = ChatterEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.PinGlobalVariable
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  GlobalVariable                 (Parm, ZeroConstructor)

void AIndianaPlayerController::STATIC_PinGlobalVariable(const class FString& GlobalVariable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.PinGlobalVariable");

	AIndianaPlayerController_PinGlobalVariable_Params params;
	params.GlobalVariable = GlobalVariable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.OpenQuestLog
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerController::STATIC_OpenQuestLog()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.OpenQuestLog");

	AIndianaPlayerController_OpenQuestLog_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.OpenMap
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerController::STATIC_OpenMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.OpenMap");

	AIndianaPlayerController_OpenMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.OpenLedger
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerController::STATIC_OpenLedger()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.OpenLedger");

	AIndianaPlayerController_OpenLedger_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.OpenInventory
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerController::STATIC_OpenInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.OpenInventory");

	AIndianaPlayerController_OpenInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.OpenCompanions
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerController::STATIC_OpenCompanions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.OpenCompanions");

	AIndianaPlayerController_OpenCompanions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.OpenCharacterSummary
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerController::STATIC_OpenCharacterSummary()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.OpenCharacterSummary");

	AIndianaPlayerController_OpenCharacterSummary_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.OnRestoredStateOfBeing
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EStateOfBeing                  RestoredStateOfBeing           (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerController::STATIC_OnRestoredStateOfBeing(EStateOfBeing RestoredStateOfBeing)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.OnRestoredStateOfBeing");

	AIndianaPlayerController_OnRestoredStateOfBeing_Params params;
	params.RestoredStateOfBeing = RestoredStateOfBeing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.OnKeyBindsReset
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerController::STATIC_OnKeyBindsReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.OnKeyBindsReset");

	AIndianaPlayerController_OnKeyBindsReset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.OnAxisMappingRemoved
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FInputAxisKeyMapping    Value                          (Parm)

void AIndianaPlayerController::STATIC_OnAxisMappingRemoved(const struct FInputAxisKeyMapping& Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.OnAxisMappingRemoved");

	AIndianaPlayerController_OnAxisMappingRemoved_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.OnAxisMappingAdded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FInputAxisKeyMapping    Value                          (Parm)

void AIndianaPlayerController::STATIC_OnAxisMappingAdded(const struct FInputAxisKeyMapping& Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.OnAxisMappingAdded");

	AIndianaPlayerController_OnAxisMappingAdded_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.OnActionMappingRemoved
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FInputActionKeyMapping  Value                          (Parm)

void AIndianaPlayerController::STATIC_OnActionMappingRemoved(const struct FInputActionKeyMapping& Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.OnActionMappingRemoved");

	AIndianaPlayerController_OnActionMappingRemoved_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.OnActionMappingAdded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FInputActionKeyMapping  Value                          (Parm)

void AIndianaPlayerController::STATIC_OnActionMappingAdded(const struct FInputActionKeyMapping& Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.OnActionMappingAdded");

	AIndianaPlayerController_OnActionMappingAdded_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.IsYAxisInverted
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AIndianaPlayerController::IsYAxisInverted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.IsYAxisInverted");

	AIndianaPlayerController_IsYAxisInverted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaPlayerController.IsXAxisInverted
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AIndianaPlayerController::IsXAxisInverted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.IsXAxisInverted");

	AIndianaPlayerController_IsXAxisInverted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaPlayerController.InputAxis
// (Final, BlueprintAuthorityOnly)
// Parameters:
// struct FKey                    Key                            (Parm)
// float                          Delta                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            NumSamples                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bGamepad                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AIndianaPlayerController::InputAxis(const struct FKey& Key, float Delta, float DeltaTime, int NumSamples, bool bGamepad)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.InputAxis");

	AIndianaPlayerController_InputAxis_Params params;
	params.Key = Key;
	params.Delta = Delta;
	params.DeltaTime = DeltaTime;
	params.NumSamples = NumSamples;
	params.bGamepad = bGamepad;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaPlayerController.GetMouseSensitivity
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AIndianaPlayerController::GetMouseSensitivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.GetMouseSensitivity");

	AIndianaPlayerController_GetMouseSensitivity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaPlayerController.GetMouseADSSensitivity
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AIndianaPlayerController::GetMouseADSSensitivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.GetMouseADSSensitivity");

	AIndianaPlayerController_GetMouseADSSensitivity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaPlayerController.GetInteractHoldTime
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AIndianaPlayerController::GetInteractHoldTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.GetInteractHoldTime");

	AIndianaPlayerController_GetInteractHoldTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaPlayerController.GetIndianaPlayerController
// ()
// Parameters:
// class AIndianaPlayerController* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AIndianaPlayerController* AIndianaPlayerController::GetIndianaPlayerController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.GetIndianaPlayerController");

	AIndianaPlayerController_GetIndianaPlayerController_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaPlayerController.DebugSpawnCompanion
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   CompanionName                  (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerController::STATIC_DebugSpawnCompanion(const struct FName& CompanionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.DebugSpawnCompanion");

	AIndianaPlayerController_DebugSpawnCompanion_Params params;
	params.CompanionName = CompanionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.DebugSpawnAICharacter
// (BlueprintCosmetic)
// Parameters:
// struct FName                   AICharacterAssetName           (Parm, ZeroConstructor, IsPlainOldData)
// class AIndianaAiCharacter*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AIndianaAiCharacter* AIndianaPlayerController::DebugSpawnAICharacter(const struct FName& AICharacterAssetName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.DebugSpawnAICharacter");

	AIndianaPlayerController_DebugSpawnAICharacter_Params params;
	params.AICharacterAssetName = AICharacterAssetName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaPlayerController.DebugRevertDutchAngle
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Axis                           (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerController::STATIC_DebugRevertDutchAngle(float Axis)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.DebugRevertDutchAngle");

	AIndianaPlayerController_DebugRevertDutchAngle_Params params;
	params.Axis = Axis;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.DebugDynamicallyReplaceCompanion
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   OldCompanionName               (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   NewCompanionName               (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerController::STATIC_DebugDynamicallyReplaceCompanion(const struct FName& OldCompanionName, const struct FName& NewCompanionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.DebugDynamicallyReplaceCompanion");

	AIndianaPlayerController_DebugDynamicallyReplaceCompanion_Params params;
	params.OldCompanionName = OldCompanionName;
	params.NewCompanionName = NewCompanionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.DebugDutchAngleAdjustment
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Axis                           (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerController::STATIC_DebugDutchAngleAdjustment(float Axis)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.DebugDutchAngleAdjustment");

	AIndianaPlayerController_DebugDutchAngleAdjustment_Params params;
	params.Axis = Axis;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.CloseLedger
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaPlayerController::STATIC_CloseLedger()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.CloseLedger");

	AIndianaPlayerController_CloseLedger_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.AsyncSpawnCompanion
// (BlueprintCosmetic)
// Parameters:
// ESpecialObsidianID             CompanionID                    (Parm, ZeroConstructor, IsPlainOldData)
// class AIndianaAiCharacter*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AIndianaAiCharacter* AIndianaPlayerController::AsyncSpawnCompanion(ESpecialObsidianID CompanionID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.AsyncSpawnCompanion");

	AIndianaPlayerController_AsyncSpawnCompanion_Params params;
	params.CompanionID = CompanionID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaPlayerController.AddStickYawInput
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Val                            (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerController::STATIC_AddStickYawInput(float Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.AddStickYawInput");

	AIndianaPlayerController_AddStickYawInput_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.AddStickRollInput
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Val                            (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerController::STATIC_AddStickRollInput(float Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.AddStickRollInput");

	AIndianaPlayerController_AddStickRollInput_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerController.AddStickPitchInput
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Val                            (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaPlayerController::STATIC_AddStickPitchInput(float Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerController.AddStickPitchInput");

	AIndianaPlayerController_AddStickPitchInput_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerStart.OnPlayerPawnOverlappedVisited
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AIndianaPlayerStart::STATIC_OnPlayerPawnOverlappedVisited(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerStart.OnPlayerPawnOverlappedVisited");

	AIndianaPlayerStart_OnPlayerPawnOverlappedVisited_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerStart.OnPlayerPawnOverlappedAwareness
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AIndianaPlayerStart::STATIC_OnPlayerPawnOverlappedAwareness(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerStart.OnPlayerPawnOverlappedAwareness");

	AIndianaPlayerStart_OnPlayerPawnOverlappedAwareness_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaPlayerStart.GetDebugString
// ()
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString AIndianaPlayerStart::GetDebugString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerStart.GetDebugString");

	AIndianaPlayerStart_GetDebugString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaPlayerStart.GetCompanionSpawnLocation
// (Final, BlueprintCosmetic)
// Parameters:
// class FString                  CompanionCapsuleName           (Parm, ZeroConstructor)
// struct FVector                 Location                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FRotator                Rotation                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bFeetLocation                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AIndianaPlayerStart::GetCompanionSpawnLocation(const class FString& CompanionCapsuleName, bool bFeetLocation, struct FVector* Location, struct FRotator* Rotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaPlayerStart.GetCompanionSpawnLocation");

	AIndianaPlayerStart_GetCompanionSpawnLocation_Params params;
	params.CompanionCapsuleName = CompanionCapsuleName;
	params.bFeetLocation = bFeetLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Location != nullptr)
		*Location = params.Location;
	if (Rotation != nullptr)
		*Rotation = params.Rotation;

	return params.ReturnValue;
}


// Function Indiana.IndianaUI.ToggleSafeSpace
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaUI::STATIC_ToggleSafeSpace()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUI.ToggleSafeSpace");

	AIndianaUI_ToggleSafeSpace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUI.ToggleResurrect
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaUI::STATIC_ToggleResurrect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUI.ToggleResurrect");

	AIndianaUI_ToggleResurrect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUI.ToggleDamageTextVisibility
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaUI::STATIC_ToggleDamageTextVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUI.ToggleDamageTextVisibility");

	AIndianaUI_ToggleDamageTextVisibility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUI.StartWorkbench
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaUI::STATIC_StartWorkbench()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUI.StartWorkbench");

	AIndianaUI_StartWorkbench_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUI.ShowItemOnDisplay
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UClass*                  ItemIn                         (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaUI::STATIC_ShowItemOnDisplay(class UClass* ItemIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUI.ShowItemOnDisplay");

	AIndianaUI_ShowItemOnDisplay_Params params;
	params.ItemIn = ItemIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUI.SetSoundMixVolume
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class USoundMix*               SoundMix                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Volume                         (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaUI::STATIC_SetSoundMixVolume(class USoundMix* SoundMix, float Volume)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUI.SetSoundMixVolume");

	AIndianaUI_SetSoundMixVolume_Params params;
	params.SoundMix = SoundMix;
	params.Volume = Volume;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUI.SetHudVisible
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bNewVisible                    (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaUI::STATIC_SetHudVisible(bool bNewVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUI.SetHudVisible");

	AIndianaUI_SetHudVisible_Params params;
	params.bNewVisible = bNewVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUI.RemoveSubtitleManagerInstance
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class USubtitleManagerWidget*  ManagerWidget                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AIndianaUI::STATIC_RemoveSubtitleManagerInstance(class USubtitleManagerWidget* ManagerWidget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUI.RemoveSubtitleManagerInstance");

	AIndianaUI_RemoveSubtitleManagerInstance_Params params;
	params.ManagerWidget = ManagerWidget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUI.OverlayCycle
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaUI::STATIC_OverlayCycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUI.OverlayCycle");

	AIndianaUI_OverlayCycle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUI.GetUserWidget
// ()
// Parameters:
// ECheckBranches                 Branches                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UClass*                  WidgetClass                    (Parm, ZeroConstructor, IsPlainOldData)
// class UIndianaInterfaceUserWidget* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UIndianaInterfaceUserWidget* AIndianaUI::GetUserWidget(class UClass* WidgetClass, ECheckBranches* Branches)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUI.GetUserWidget");

	AIndianaUI_GetUserWidget_Params params;
	params.WidgetClass = WidgetClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Branches != nullptr)
		*Branches = params.Branches;

	return params.ReturnValue;
}


// Function Indiana.IndianaUI.GetSlideshowWidget
// ()
// Parameters:
// class USlideshowWidget*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USlideshowWidget* AIndianaUI::GetSlideshowWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUI.GetSlideshowWidget");

	AIndianaUI_GetSlideshowWidget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaUI.GetHUD
// ()
// Parameters:
// class UHUDWidget*              ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UHUDWidget* AIndianaUI::GetHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUI.GetHUD");

	AIndianaUI_GetHUD_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaUI.ForceHUDHidden
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bForceHidden                   (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaUI::STATIC_ForceHUDHidden(bool bForceHidden)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUI.ForceHUDHidden");

	AIndianaUI_ForceHUDHidden_Params params;
	params.bForceHidden = bForceHidden;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUI.FontSizeModifierChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            ModifierIn                     (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaUI::STATIC_FontSizeModifierChanged(int ModifierIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUI.FontSizeModifierChanged");

	AIndianaUI_FontSizeModifierChanged_Params params;
	params.ModifierIn = ModifierIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUI.DebugToggleDLC
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaUI::STATIC_DebugToggleDLC()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUI.DebugToggleDLC");

	AIndianaUI_DebugToggleDLC_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUI.DebugStringTables
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaUI::STATIC_DebugStringTables()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUI.DebugStringTables");

	AIndianaUI_DebugStringTables_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUI.DebugStringIDsAndTables
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaUI::STATIC_DebugStringIDsAndTables()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUI.DebugStringIDsAndTables");

	AIndianaUI_DebugStringIDsAndTables_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUI.DebugStringIDs
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaUI::STATIC_DebugStringIDs()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUI.DebugStringIDs");

	AIndianaUI_DebugStringIDs_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUI.DebugSetFontScaling
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            ModifierIn                     (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaUI::STATIC_DebugSetFontScaling(int ModifierIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUI.DebugSetFontScaling");

	AIndianaUI_DebugSetFontScaling_Params params;
	params.ModifierIn = ModifierIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUI.CreateSubtitleManagerInstanceForMSSP
// (BlueprintCosmetic)
// Parameters:
// class UMovieSceneSequencePlayer* MovieSceneSequencePlayer       (Parm, ZeroConstructor, IsPlainOldData)
// class USubtitleManagerWidget*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USubtitleManagerWidget* AIndianaUI::CreateSubtitleManagerInstanceForMSSP(class UMovieSceneSequencePlayer* MovieSceneSequencePlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUI.CreateSubtitleManagerInstanceForMSSP");

	AIndianaUI_CreateSubtitleManagerInstanceForMSSP_Params params;
	params.MovieSceneSequencePlayer = MovieSceneSequencePlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaUI.CreateSubtitleManagerInstance
// (BlueprintCosmetic)
// Parameters:
// class UMediaPlayer*            MediaPlayer                    (Parm, ZeroConstructor, IsPlainOldData)
// class USubtitleManagerWidget*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USubtitleManagerWidget* AIndianaUI::CreateSubtitleManagerInstance(class UMediaPlayer* MediaPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUI.CreateSubtitleManagerInstance");

	AIndianaUI_CreateSubtitleManagerInstance_Params params;
	params.MediaPlayer = MediaPlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaUI.CreateGenericMoviePlayer
// ()
// Parameters:
// class UMoviePlayerWidget*      ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UMoviePlayerWidget* AIndianaUI::CreateGenericMoviePlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUI.CreateGenericMoviePlayer");

	AIndianaUI_CreateGenericMoviePlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaUI.CreateExaminable
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FLocString              NameString                     (ConstParm, Parm, OutParm, ReferenceParm)
// struct FLocString              DescriptionString              (ConstParm, Parm, OutParm, ReferenceParm)
// struct FLocString              ActionString                   (ConstParm, Parm, OutParm, ReferenceParm)
// struct FName                   RemoteEventOnExaminationEnd    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AIndianaUI::STATIC_CreateExaminable(const struct FLocString& NameString, const struct FLocString& DescriptionString, const struct FLocString& ActionString, const struct FName& RemoteEventOnExaminationEnd)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUI.CreateExaminable");

	AIndianaUI_CreateExaminable_Params params;
	params.NameString = NameString;
	params.DescriptionString = DescriptionString;
	params.ActionString = ActionString;
	params.RemoteEventOnExaminationEnd = RemoteEventOnExaminationEnd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUI.CreateCinematicPlayer
// ()
// Parameters:
// class UCinematicPlayerWidget*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UCinematicPlayerWidget* AIndianaUI::CreateCinematicPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUI.CreateCinematicPlayer");

	AIndianaUI_CreateCinematicPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaUI.ConstructUserWidget
// ()
// Parameters:
// ECheckBranches                 Branches                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UClass*                  WidgetClass                    (Parm, ZeroConstructor, IsPlainOldData)
// class UIndianaInterfaceUserWidget* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UIndianaInterfaceUserWidget* AIndianaUI::ConstructUserWidget(class UClass* WidgetClass, ECheckBranches* Branches)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUI.ConstructUserWidget");

	AIndianaUI_ConstructUserWidget_Params params;
	params.WidgetClass = WidgetClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Branches != nullptr)
		*Branches = params.Branches;

	return params.ReturnValue;
}


// Function Indiana.IndianaUI.ColorblindMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EColorVisionDeficiency         Deficiency                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            Severity                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bCorrection                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bCorrectionPreview             (Parm, ZeroConstructor, IsPlainOldData)

void AIndianaUI::STATIC_ColorblindMode(EColorVisionDeficiency Deficiency, int Severity, bool bCorrection, bool bCorrectionPreview)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUI.ColorblindMode");

	AIndianaUI_ColorblindMode_Params params;
	params.Deficiency = Deficiency;
	params.Severity = Severity;
	params.bCorrection = bCorrection;
	params.bCorrectionPreview = bCorrectionPreview;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUI.CloseWorkbench
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaUI::STATIC_CloseWorkbench()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUI.CloseWorkbench");

	AIndianaUI_CloseWorkbench_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUI.CloseGenericMoviePlayer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AIndianaUI::STATIC_CloseGenericMoviePlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUI.CloseGenericMoviePlayer");

	AIndianaUI_CloseGenericMoviePlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.IndianaUIFunctionLibrary.GetOpacityForComponentByType
// (BlueprintAuthorityOnly)
// Parameters:
// EIndianaUIOpacityType          Type                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UIndianaUIFunctionLibrary::GetOpacityForComponentByType(EIndianaUIOpacityType Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUIFunctionLibrary.GetOpacityForComponentByType");

	UIndianaUIFunctionLibrary_GetOpacityForComponentByType_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaUIFunctionLibrary.GetIndianaUI
// ()
// Parameters:
// ECheckBranches                 Branches                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class APlayerController*       Controller                     (Parm, ZeroConstructor, IsPlainOldData)
// class AIndianaUI*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AIndianaUI* UIndianaUIFunctionLibrary::GetIndianaUI(class APlayerController* Controller, ECheckBranches* Branches)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUIFunctionLibrary.GetIndianaUI");

	UIndianaUIFunctionLibrary_GetIndianaUI_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Branches != nullptr)
		*Branches = params.Branches;

	return params.ReturnValue;
}


// Function Indiana.IndianaUIFunctionLibrary.GetColorByType
// (BlueprintAuthorityOnly)
// Parameters:
// EIndianaUIColorType            Type                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FLinearColor UIndianaUIFunctionLibrary::GetColorByType(EIndianaUIColorType Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaUIFunctionLibrary.GetColorByType");

	UIndianaUIFunctionLibrary_GetColorByType_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.IndianaWorldSettings.K2_IsCurrentMap
// (BlueprintCosmetic)
// Parameters:
// class UMapInformation*         MapInfo                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AIndianaWorldSettings::K2_IsCurrentMap(class UMapInformation* MapInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.IndianaWorldSettings.K2_IsCurrentMap");

	AIndianaWorldSettings_K2_IsCurrentMap_Params params;
	params.MapInfo = MapInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.InputGuideWidget.OnInteractionProgressChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          CurrentProgressRatio           (Parm, ZeroConstructor, IsPlainOldData)

void UInputGuideWidget::STATIC_OnInteractionProgressChange(float CurrentProgressRatio)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InputGuideWidget.OnInteractionProgressChange");

	UInputGuideWidget_OnInteractionProgressChange_Params params;
	params.CurrentProgressRatio = CurrentProgressRatio;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InputGuideWidget.InteractChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void UInputGuideWidget::STATIC_InteractChanged(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InputGuideWidget.InteractChanged");

	UInputGuideWidget_InteractChanged_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InputGuideWidget.GetContentWidth
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UInputGuideWidget::GetContentWidth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InputGuideWidget.GetContentWidth");

	UInputGuideWidget_GetContentWidth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.InputLabelHoldWidget.UpdateFill
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UInputLabelHoldWidget::STATIC_UpdateFill()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InputLabelHoldWidget.UpdateFill");

	UInputLabelHoldWidget_UpdateFill_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InputLabelHoldWidget.SetWidth
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Width                          (Parm, ZeroConstructor, IsPlainOldData)

void UInputLabelHoldWidget::STATIC_SetWidth(float Width)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InputLabelHoldWidget.SetWidth");

	UInputLabelHoldWidget_SetWidth_Params params;
	params.Width = Width;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InputLabelHoldWidget.SetRadialFill
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          FillRatio                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          Opacity                        (Parm, ZeroConstructor, IsPlainOldData)

void UInputLabelHoldWidget::STATIC_SetRadialFill(float FillRatio, float Opacity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InputLabelHoldWidget.SetRadialFill");

	UInputLabelHoldWidget_SetRadialFill_Params params;
	params.FillRatio = FillRatio;
	params.Opacity = Opacity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InteractableComponent.GetInteractableComponent
// (BlueprintCosmetic)
// Parameters:
// class UChildActorComponent*    ChildActorComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UInteractableComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UInteractableComponent* UInteractableComponent::GetInteractableComponent(class UChildActorComponent* ChildActorComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InteractableComponent.GetInteractableComponent");

	UInteractableComponent_GetInteractableComponent_Params params;
	params.ChildActorComponent = ChildActorComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.InteractionInterface.GetInteractLocString
// ()
// Parameters:
// struct FLocString              ReturnValue                    (Parm, OutParm, ReturnParm)

struct FLocString UInteractionInterface::GetInteractLocString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InteractionInterface.GetInteractLocString");

	UInteractionInterface_GetInteractLocString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.InteractionInterface.GetInteraction
// (BlueprintAuthorityOnly, Net)
// Parameters:
// struct FInteractionDescription Description                    (ConstParm, Parm, OutParm, ReferenceParm)
// struct FInteractPayload        Payload                        (ConstParm, Parm, OutParm, ReferenceParm)
// float                          InteractDistance               (Parm, ZeroConstructor, IsPlainOldData)
// EInteractionType               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EInteractionType UInteractionInterface::GetInteraction(const struct FInteractionDescription& Description, const struct FInteractPayload& Payload, float InteractDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InteractionInterface.GetInteraction");

	UInteractionInterface_GetInteraction_Params params;
	params.Description = Description;
	params.Payload = Payload;
	params.InteractDistance = InteractDistance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.InteractionInterface.CanInteract
// ()
// Parameters:
// class AIndianaCharacter*       Initiator                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FInteractPayload        Payload                        (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInteractionInterface::CanInteract(class AIndianaCharacter* Initiator, const struct FInteractPayload& Payload)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InteractionInterface.CanInteract");

	UInteractionInterface_CanInteract_Params params;
	params.Initiator = Initiator;
	params.Payload = Payload;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.InventoryPageWidget.OnItemCompare
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bCompared                      (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryPageWidget::STATIC_OnItemCompare(bool bCompared)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryPageWidget.OnItemCompare");

	UInventoryPageWidget_OnItemCompare_Params params;
	params.bCompared = bCompared;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InventoryArmorPageWidget.SetEquippedArmorSlot
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EArmorSlot                     ArmorSlotIn                    (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryArmorPageWidget::STATIC_SetEquippedArmorSlot(EArmorSlot ArmorSlotIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryArmorPageWidget.SetEquippedArmorSlot");

	UInventoryArmorPageWidget_SetEquippedArmorSlot_Params params;
	params.ArmorSlotIn = ArmorSlotIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemViewerItemWidget.OnButtonUnhovered
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UItemViewerItemWidget::STATIC_OnButtonUnhovered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemViewerItemWidget.OnButtonUnhovered");

	UItemViewerItemWidget_OnButtonUnhovered_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemViewerItemWidget.OnButtonPressed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UItemViewerItemWidget::STATIC_OnButtonPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemViewerItemWidget.OnButtonPressed");

	UItemViewerItemWidget_OnButtonPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemViewerItemWidget.OnButtonHovered
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UItemViewerItemWidget::STATIC_OnButtonHovered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemViewerItemWidget.OnButtonHovered");

	UItemViewerItemWidget_OnButtonHovered_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemViewerItemWidget.OnButtonFocusLost
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UItemViewerItemWidget::STATIC_OnButtonFocusLost()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemViewerItemWidget.OnButtonFocusLost");

	UItemViewerItemWidget_OnButtonFocusLost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemViewerItemWidget.OnButtonFocused
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UItemViewerItemWidget::STATIC_OnButtonFocused()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemViewerItemWidget.OnButtonFocused");

	UItemViewerItemWidget_OnButtonFocused_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemViewerItemWidget.OnButtonClicked
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UItemViewerItemWidget::STATIC_OnButtonClicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemViewerItemWidget.OnButtonClicked");

	UItemViewerItemWidget_OnButtonClicked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InventoryItemWidget.GetDamageType
// ()
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UInventoryItemWidget::GetDamageType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryItemWidget.GetDamageType");

	UInventoryItemWidget_GetDamageType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.InventoryWeaponAmmoGroupWidget.OnHighlightChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bHighlight                     (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryWeaponAmmoGroupWidget::STATIC_OnHighlightChange(bool bHighlight)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryWeaponAmmoGroupWidget.OnHighlightChange");

	UInventoryWeaponAmmoGroupWidget_OnHighlightChange_Params params;
	params.bHighlight = bHighlight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InventoryWeaponAmmoWidget.SetIcon
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UTexture2D*              Icon                           (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryWeaponAmmoWidget::STATIC_SetIcon(class UTexture2D* Icon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryWeaponAmmoWidget.SetIcon");

	UInventoryWeaponAmmoWidget_SetIcon_Params params;
	params.Icon = Icon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InventoryWidget.OnWeaponStartEquip
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UInventoryWidget::STATIC_OnWeaponStartEquip(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryWidget.OnWeaponStartEquip");

	UInventoryWidget_OnWeaponStartEquip_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InventoryWidget.OnScrollingPageChangeStart
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UIndianaUserWidget*      UserWidget                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryWidget::STATIC_OnScrollingPageChangeStart(class UIndianaUserWidget* UserWidget, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryWidget.OnScrollingPageChangeStart");

	UInventoryWidget_OnScrollingPageChangeStart_Params params;
	params.UserWidget = UserWidget;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InventoryWidget.OnScrollingPageChangeComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UIndianaUserWidget*      UserWidget                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryWidget::STATIC_OnScrollingPageChangeComplete(class UIndianaUserWidget* UserWidget, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryWidget.OnScrollingPageChangeComplete");

	UInventoryWidget_OnScrollingPageChangeComplete_Params params;
	params.UserWidget = UserWidget;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InventoryWidget.OnItemRemoved
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)

void UInventoryWidget::STATIC_OnItemRemoved(const struct FItemStack& ItemStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryWidget.OnItemRemoved");

	UInventoryWidget_OnItemRemoved_Params params;
	params.ItemStack = ItemStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InventoryWidget.OnItemJunkStatusChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)

void UInventoryWidget::STATIC_OnItemJunkStatusChanged(const struct FItemStack& ItemStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryWidget.OnItemJunkStatusChanged");

	UInventoryWidget_OnItemJunkStatusChanged_Params params;
	params.ItemStack = ItemStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InventoryWidget.OnItemCountChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)

void UInventoryWidget::STATIC_OnItemCountChanged(const struct FItemStack& ItemStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryWidget.OnItemCountChanged");

	UInventoryWidget_OnItemCountChanged_Params params;
	params.ItemStack = ItemStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InventoryWidget.OnItemAdded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)

void UInventoryWidget::STATIC_OnItemAdded(const struct FItemStack& ItemStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryWidget.OnItemAdded");

	UInventoryWidget_OnItemAdded_Params params;
	params.ItemStack = ItemStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InventoryWidget.OnDragDrop_SwapWeaponSlot
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UIndianaDragDropOperation* Operation                      (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryWidget::STATIC_OnDragDrop_SwapWeaponSlot(class UIndianaDragDropOperation* Operation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryWidget.OnDragDrop_SwapWeaponSlot");

	UInventoryWidget_OnDragDrop_SwapWeaponSlot_Params params;
	params.Operation = Operation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InventoryWidget.OnDragDrop_SwapGadgetSlot
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UIndianaDragDropOperation* Operation                      (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryWidget::STATIC_OnDragDrop_SwapGadgetSlot(class UIndianaDragDropOperation* Operation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryWidget.OnDragDrop_SwapGadgetSlot");

	UInventoryWidget_OnDragDrop_SwapGadgetSlot_Params params;
	params.Operation = Operation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InventoryWidget.OnDragDrop_SwapDrugSlot
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UIndianaDragDropOperation* Operation                      (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryWidget::STATIC_OnDragDrop_SwapDrugSlot(class UIndianaDragDropOperation* Operation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryWidget.OnDragDrop_SwapDrugSlot");

	UInventoryWidget_OnDragDrop_SwapDrugSlot_Params params;
	params.Operation = Operation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InventoryWidget.OnDragDrop_SetWeaponSlot
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UIndianaDragDropOperation* Operation                      (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryWidget::STATIC_OnDragDrop_SetWeaponSlot(class UIndianaDragDropOperation* Operation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryWidget.OnDragDrop_SetWeaponSlot");

	UInventoryWidget_OnDragDrop_SetWeaponSlot_Params params;
	params.Operation = Operation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InventoryWidget.OnDragDrop_ItemViewerWeaponSwap
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UIndianaDragDropOperation* Operation                      (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryWidget::STATIC_OnDragDrop_ItemViewerWeaponSwap(class UIndianaDragDropOperation* Operation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryWidget.OnDragDrop_ItemViewerWeaponSwap");

	UInventoryWidget_OnDragDrop_ItemViewerWeaponSwap_Params params;
	params.Operation = Operation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InventoryWidget.OnDragDrop_ItemViewerInternalSwap
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UIndianaDragDropOperation* Operation                      (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryWidget::STATIC_OnDragDrop_ItemViewerInternalSwap(class UIndianaDragDropOperation* Operation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryWidget.OnDragDrop_ItemViewerInternalSwap");

	UInventoryWidget_OnDragDrop_ItemViewerInternalSwap_Params params;
	params.Operation = Operation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InventoryWidget.OnDragDrop_ItemViewerArmorSwap
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UIndianaDragDropOperation* Operation                      (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryWidget::STATIC_OnDragDrop_ItemViewerArmorSwap(class UIndianaDragDropOperation* Operation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryWidget.OnDragDrop_ItemViewerArmorSwap");

	UInventoryWidget_OnDragDrop_ItemViewerArmorSwap_Params params;
	params.Operation = Operation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InventoryWidget.OnDragDrop_DropItem
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UIndianaDragDropOperation* Operation                      (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryWidget::STATIC_OnDragDrop_DropItem(class UIndianaDragDropOperation* Operation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryWidget.OnDragDrop_DropItem");

	UInventoryWidget_OnDragDrop_DropItem_Params params;
	params.Operation = Operation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InventoryWidget.OnDragDrop_ClearGadgetSlot
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UIndianaDragDropOperation* Operation                      (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryWidget::STATIC_OnDragDrop_ClearGadgetSlot(class UIndianaDragDropOperation* Operation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryWidget.OnDragDrop_ClearGadgetSlot");

	UInventoryWidget_OnDragDrop_ClearGadgetSlot_Params params;
	params.Operation = Operation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InventoryWidget.OnDragDrop_ClearDrugSlot
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UIndianaDragDropOperation* Operation                      (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryWidget::STATIC_OnDragDrop_ClearDrugSlot(class UIndianaDragDropOperation* Operation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryWidget.OnDragDrop_ClearDrugSlot");

	UInventoryWidget_OnDragDrop_ClearDrugSlot_Params params;
	params.Operation = Operation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InventoryWidget.OnDragDrop_AssignGadgetSlot
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UIndianaDragDropOperation* Operation                      (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryWidget::STATIC_OnDragDrop_AssignGadgetSlot(class UIndianaDragDropOperation* Operation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryWidget.OnDragDrop_AssignGadgetSlot");

	UInventoryWidget_OnDragDrop_AssignGadgetSlot_Params params;
	params.Operation = Operation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.InventoryWidget.OnDragDrop_AssignDrugSlot
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UIndianaDragDropOperation* Operation                      (Parm, ZeroConstructor, IsPlainOldData)

void UInventoryWidget::STATIC_OnDragDrop_AssignDrugSlot(class UIndianaDragDropOperation* Operation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.InventoryWidget.OnDragDrop_AssignDrugSlot");

	UInventoryWidget_OnDragDrop_AssignDrugSlot_Params params;
	params.Operation = Operation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemContainerWidget.ShowContainer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UItemContainerWidget::STATIC_ShowContainer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemContainerWidget.ShowContainer");

	UItemContainerWidget_ShowContainer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemContainerWidget.OnItemRemoved
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)

void UItemContainerWidget::STATIC_OnItemRemoved(const struct FItemStack& ItemStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemContainerWidget.OnItemRemoved");

	UItemContainerWidget_OnItemRemoved_Params params;
	params.ItemStack = ItemStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemContainerWidget.OnItemCountChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)

void UItemContainerWidget::STATIC_OnItemCountChanged(const struct FItemStack& ItemStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemContainerWidget.OnItemCountChanged");

	UItemContainerWidget_OnItemCountChanged_Params params;
	params.ItemStack = ItemStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemContainerWidget.OnItemAdded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)

void UItemContainerWidget::STATIC_OnItemAdded(const struct FItemStack& ItemStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemContainerWidget.OnItemAdded");

	UItemContainerWidget_OnItemAdded_Params params;
	params.ItemStack = ItemStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemContainerWidget.HideContainer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UItemContainerWidget::STATIC_HideContainer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemContainerWidget.HideContainer");

	UItemContainerWidget_HideContainer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemDegradationAlertWidget.WeaponDamageStatusChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EItemDegradationState          DegradationState               (Parm, ZeroConstructor, IsPlainOldData)

void UItemDegradationAlertWidget::STATIC_WeaponDamageStatusChanged(EItemDegradationState DegradationState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemDegradationAlertWidget.WeaponDamageStatusChanged");

	UItemDegradationAlertWidget_WeaponDamageStatusChanged_Params params;
	params.DegradationState = DegradationState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemDegradationAlertWidget.OnUnequippedArmor
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EArmorSlot                     ArmorSlotIn                    (Parm, ZeroConstructor, IsPlainOldData)

void UItemDegradationAlertWidget::STATIC_OnUnequippedArmor(EArmorSlot ArmorSlotIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemDegradationAlertWidget.OnUnequippedArmor");

	UItemDegradationAlertWidget_OnUnequippedArmor_Params params;
	params.ArmorSlotIn = ArmorSlotIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemDegradationAlertWidget.OnHUDVisibilityChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void UItemDegradationAlertWidget::STATIC_OnHUDVisibilityChanged(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemDegradationAlertWidget.OnHUDVisibilityChanged");

	UItemDegradationAlertWidget_OnHUDVisibilityChanged_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemDegradationAlertWidget.OnEquipmentRepairVisibilityChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void UItemDegradationAlertWidget::STATIC_OnEquipmentRepairVisibilityChanged(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemDegradationAlertWidget.OnEquipmentRepairVisibilityChanged");

	UItemDegradationAlertWidget_OnEquipmentRepairVisibilityChanged_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemDegradationAlertWidget.HeadArmorDamageStatusChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EItemDegradationState          DegradationState               (Parm, ZeroConstructor, IsPlainOldData)

void UItemDegradationAlertWidget::STATIC_HeadArmorDamageStatusChanged(EItemDegradationState DegradationState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemDegradationAlertWidget.HeadArmorDamageStatusChanged");

	UItemDegradationAlertWidget_HeadArmorDamageStatusChanged_Params params;
	params.DegradationState = DegradationState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemDegradationAlertWidget.BodyArmorDamageStatusChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EItemDegradationState          DegradationState               (Parm, ZeroConstructor, IsPlainOldData)

void UItemDegradationAlertWidget::STATIC_BodyArmorDamageStatusChanged(EItemDegradationState DegradationState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemDegradationAlertWidget.BodyArmorDamageStatusChanged");

	UItemDegradationAlertWidget_BodyArmorDamageStatusChanged_Params params;
	params.DegradationState = DegradationState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemDegradationEntryWidget.PlaySevereDamageAnim
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UItemDegradationEntryWidget::STATIC_PlaySevereDamageAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemDegradationEntryWidget.PlaySevereDamageAnim");

	UItemDegradationEntryWidget_PlaySevereDamageAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemDegradationEntryWidget.PlayIntroDamagedAnim
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UItemDegradationEntryWidget::STATIC_PlayIntroDamagedAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemDegradationEntryWidget.PlayIntroDamagedAnim");

	UItemDegradationEntryWidget_PlayIntroDamagedAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemDegradationEntryWidget.KillAllAnims
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UItemDegradationEntryWidget::STATIC_KillAllAnims()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemDegradationEntryWidget.KillAllAnims");

	UItemDegradationEntryWidget_KillAllAnims_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemInspectorWidget.ZoomToggled
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bFullZoom                      (Parm, ZeroConstructor, IsPlainOldData)

void UItemInspectorWidget::STATIC_ZoomToggled(bool bFullZoom)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemInspectorWidget.ZoomToggled");

	UItemInspectorWidget_ZoomToggled_Params params;
	params.bFullZoom = bFullZoom;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemInspectorWidget.OnZoomToggled
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bFullZoom                      (Parm, ZeroConstructor, IsPlainOldData)

void UItemInspectorWidget::STATIC_OnZoomToggled(bool bFullZoom)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemInspectorWidget.OnZoomToggled");

	UItemInspectorWidget_OnZoomToggled_Params params;
	params.bFullZoom = bFullZoom;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemInspectorWidget.OnInputBack
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UItemInspectorWidget::STATIC_OnInputBack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemInspectorWidget.OnInputBack");

	UItemInspectorWidget_OnInputBack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemInspectorWidget.MouseScroll
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          MouseInput                     (Parm, ZeroConstructor, IsPlainOldData)

void UItemInspectorWidget::STATIC_MouseScroll(float MouseInput)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemInspectorWidget.MouseScroll");

	UItemInspectorWidget_MouseScroll_Params params;
	params.MouseInput = MouseInput;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemInspectorWidget.GamepadScroll
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          GamepadInput                   (Parm, ZeroConstructor, IsPlainOldData)

void UItemInspectorWidget::STATIC_GamepadScroll(float GamepadInput)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemInspectorWidget.GamepadScroll");

	UItemInspectorWidget_GamepadScroll_Params params;
	params.GamepadInput = GamepadInput;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemModdingWidget.OnInstallMod
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UItemModdingWidget::STATIC_OnInstallMod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemModdingWidget.OnInstallMod");

	UItemModdingWidget_OnInstallMod_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemModdingWidget.OnInputBack
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UItemModdingWidget::STATIC_OnInputBack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemModdingWidget.OnInputBack");

	UItemModdingWidget_OnInputBack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemRepairWidget.OnRepair
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UItemRepairWidget::STATIC_OnRepair()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemRepairWidget.OnRepair");

	UItemRepairWidget_OnRepair_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemRepairWidget.OnInputBack
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UItemRepairWidget::STATIC_OnInputBack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemRepairWidget.OnInputBack");

	UItemRepairWidget_OnInputBack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemStatsWidget.OnAlternateChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UItemStatsWidget::STATIC_OnAlternateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemStatsWidget.OnAlternateChanged");

	UItemStatsWidget_OnAlternateChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemToolTipWidget.SetBackgroundBrush
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UItemToolTipWidget::STATIC_SetBackgroundBrush()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemToolTipWidget.SetBackgroundBrush");

	UItemToolTipWidget_SetBackgroundBrush_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemToolTipWidget.FontSizeChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            NewModifier                    (Parm, ZeroConstructor, IsPlainOldData)

void UItemToolTipWidget::STATIC_FontSizeChanged(int NewModifier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemToolTipWidget.FontSizeChanged");

	UItemToolTipWidget_FontSizeChanged_Params params;
	params.NewModifier = NewModifier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemTransferWidget.OnPlayerItemRemoved
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              Item                           (ConstParm, Parm, OutParm, ReferenceParm)

void UItemTransferWidget::STATIC_OnPlayerItemRemoved(const struct FItemStack& Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemTransferWidget.OnPlayerItemRemoved");

	UItemTransferWidget_OnPlayerItemRemoved_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemTransferWidget.OnPlayerItemAdded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              Item                           (ConstParm, Parm, OutParm, ReferenceParm)

void UItemTransferWidget::STATIC_OnPlayerItemAdded(const struct FItemStack& Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemTransferWidget.OnPlayerItemAdded");

	UItemTransferWidget_OnPlayerItemAdded_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemTransferWidget.OnPlayerCountChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)

void UItemTransferWidget::STATIC_OnPlayerCountChanged(const struct FItemStack& ItemStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemTransferWidget.OnPlayerCountChanged");

	UItemTransferWidget_OnPlayerCountChanged_Params params;
	params.ItemStack = ItemStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemTransferWidget.OnItemCountChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)

void UItemTransferWidget::STATIC_OnItemCountChanged(const struct FItemStack& ItemStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemTransferWidget.OnItemCountChanged");

	UItemTransferWidget_OnItemCountChanged_Params params;
	params.ItemStack = ItemStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemTransferWidget.OnInventoryItemRemoved
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              Item                           (ConstParm, Parm, OutParm, ReferenceParm)

void UItemTransferWidget::STATIC_OnInventoryItemRemoved(const struct FItemStack& Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemTransferWidget.OnInventoryItemRemoved");

	UItemTransferWidget_OnInventoryItemRemoved_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemTransferWidget.OnInventoryItemAdded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              Item                           (ConstParm, Parm, OutParm, ReferenceParm)

void UItemTransferWidget::STATIC_OnInventoryItemAdded(const struct FItemStack& Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemTransferWidget.OnInventoryItemAdded");

	UItemTransferWidget_OnInventoryItemAdded_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemViewerPageWidget.PlayCollapseAnimation
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UItemViewerPageWidget::STATIC_PlayCollapseAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemViewerPageWidget.PlayCollapseAnimation");

	UItemViewerPageWidget_PlayCollapseAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ItemViewerWidget.OnScrollingComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UItemViewerWidget::STATIC_OnScrollingComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ItemViewerWidget.OnScrollingComplete");

	UItemViewerWidget_OnScrollingComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.JumpBehaviorStateInfo.OnOutroAnimationComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UJumpBehaviorStateInfo::STATIC_OnOutroAnimationComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.JumpBehaviorStateInfo.OnOutroAnimationComplete");

	UJumpBehaviorStateInfo_OnOutroAnimationComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.JumpBehaviorStateInfo.OnIntroAnimationComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UJumpBehaviorStateInfo::STATIC_OnIntroAnimationComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.JumpBehaviorStateInfo.OnIntroAnimationComplete");

	UJumpBehaviorStateInfo_OnIntroAnimationComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.KeybindDialogBoxWidget.SetNewBackingMaterialHeight
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          NewHeight                      (Parm, ZeroConstructor, IsPlainOldData)

void UKeybindDialogBoxWidget::STATIC_SetNewBackingMaterialHeight(float NewHeight)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.KeybindDialogBoxWidget.SetNewBackingMaterialHeight");

	UKeybindDialogBoxWidget_SetNewBackingMaterialHeight_Params params;
	params.NewHeight = NewHeight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.KeybindDialogBoxWidget.OnInputPress
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UKeybindDialogBoxWidget::STATIC_OnInputPress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.KeybindDialogBoxWidget.OnInputPress");

	UKeybindDialogBoxWidget_OnInputPress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.KeybindDialogBoxWidget.OnInputBack
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UKeybindDialogBoxWidget::STATIC_OnInputBack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.KeybindDialogBoxWidget.OnInputBack");

	UKeybindDialogBoxWidget_OnInputBack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.KeyBindsMenuWidget.OnBackButtonClicked
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UKeyBindsMenuWidget::STATIC_OnBackButtonClicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.KeyBindsMenuWidget.OnBackButtonClicked");

	UKeyBindsMenuWidget_OnBackButtonClicked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.KeyBindsMenuWidget.CreateRestoreDefaultsDialogBox
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UKeyBindsMenuWidget::STATIC_CreateRestoreDefaultsDialogBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.KeyBindsMenuWidget.CreateRestoreDefaultsDialogBox");

	UKeyBindsMenuWidget_CreateRestoreDefaultsDialogBox_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.KillCameraComponent.OnKill
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Victim                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FCauseDamageInfo        CauseDamageInfo                (ConstParm, Parm, OutParm, ReferenceParm)

void UKillCameraComponent::STATIC_OnKill(class AActor* Victim, const struct FCauseDamageInfo& CauseDamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.KillCameraComponent.OnKill");

	UKillCameraComponent_OnKill_Params params;
	params.Victim = Victim;
	params.CauseDamageInfo = CauseDamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.LedgerMapWidget.OnCompanionSelectionClosed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void ULedgerMapWidget::STATIC_OnCompanionSelectionClosed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LedgerMapWidget.OnCompanionSelectionClosed");

	ULedgerMapWidget_OnCompanionSelectionClosed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.LedgerMapWidget.OnBorderMouseDown
// (BlueprintCosmetic, NetReliable)
// Parameters:
// struct FGeometry               MyGeometry                     (Parm, IsPlainOldData)
// struct FPointerEvent           MouseEvent                     (ConstParm, Parm, OutParm, ReferenceParm)
// struct FEventReply             ReturnValue                    (Parm, OutParm, ReturnParm)

struct FEventReply ULedgerMapWidget::OnBorderMouseDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LedgerMapWidget.OnBorderMouseDown");

	ULedgerMapWidget_OnBorderMouseDown_Params params;
	params.MyGeometry = MyGeometry;
	params.MouseEvent = MouseEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.LedgerMapWidget.InitiateFastTravelFromCompanionSelect
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void ULedgerMapWidget::STATIC_InitiateFastTravelFromCompanionSelect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LedgerMapWidget.InitiateFastTravelFromCompanionSelect");

	ULedgerMapWidget_InitiateFastTravelFromCompanionSelect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.LedgerMapWidget.ActiveQuestChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void ULedgerMapWidget::STATIC_ActiveQuestChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LedgerMapWidget.ActiveQuestChanged");

	ULedgerMapWidget_ActiveQuestChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.LedgerWidget.UpdateCompanionTabs
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void ULedgerWidget::STATIC_UpdateCompanionTabs()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LedgerWidget.UpdateCompanionTabs");

	ULedgerWidget_UpdateCompanionTabs_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.LedgerWidget.OnSetCurrentPage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ELedgerPages                   Page                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAnimate                       (Parm, ZeroConstructor, IsPlainOldData)

void ULedgerWidget::STATIC_OnSetCurrentPage(ELedgerPages Page, bool bAnimate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LedgerWidget.OnSetCurrentPage");

	ULedgerWidget_OnSetCurrentPage_Params params;
	params.Page = Page;
	params.bAnimate = bAnimate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.LedgerWidget.OnItemAdded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)

void ULedgerWidget::STATIC_OnItemAdded(const struct FItemStack& ItemStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LedgerWidget.OnItemAdded");

	ULedgerWidget_OnItemAdded_Params params;
	params.ItemStack = ItemStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.LedgerWidget.FadeInSharedItemViewer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void ULedgerWidget::STATIC_FadeInSharedItemViewer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LedgerWidget.FadeInSharedItemViewer");

	ULedgerWidget_FadeInSharedItemViewer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.LevelOptionsWidget.OnControllerBack
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void ULevelOptionsWidget::STATIC_OnControllerBack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LevelOptionsWidget.OnControllerBack");

	ULevelOptionsWidget_OnControllerBack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.LevelUpNotificationWidget.PlayerCombatStateChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bIsInCombat                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void ULevelUpNotificationWidget::STATIC_PlayerCombatStateChanged(bool bIsInCombat, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LevelUpNotificationWidget.PlayerCombatStateChanged");

	ULevelUpNotificationWidget_PlayerCombatStateChanged_Params params;
	params.bIsInCombat = bIsInCombat;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.LevelUpNotificationWidget.OnTextAndSunFadeOutComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void ULevelUpNotificationWidget::STATIC_OnTextAndSunFadeOutComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LevelUpNotificationWidget.OnTextAndSunFadeOutComplete");

	ULevelUpNotificationWidget_OnTextAndSunFadeOutComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.LevelUpNotificationWidget.OnSkillUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ESkill                         Skill                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ULevelUpNotificationWidget::STATIC_OnSkillUpdated(ESkill Skill, int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LevelUpNotificationWidget.OnSkillUpdated");

	ULevelUpNotificationWidget_OnSkillUpdated_Params params;
	params.Skill = Skill;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.LevelUpNotificationWidget.OnProgressToSkillsPage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void ULevelUpNotificationWidget::STATIC_OnProgressToSkillsPage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LevelUpNotificationWidget.OnProgressToSkillsPage");

	ULevelUpNotificationWidget_OnProgressToSkillsPage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.LevelUpNotificationWidget.OnProgressToPerksPage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void ULevelUpNotificationWidget::STATIC_OnProgressToPerksPage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LevelUpNotificationWidget.OnProgressToPerksPage");

	ULevelUpNotificationWidget_OnProgressToPerksPage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.LevelUpNotificationWidget.OnPrimaryTextAndSunFadeInComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void ULevelUpNotificationWidget::STATIC_OnPrimaryTextAndSunFadeInComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LevelUpNotificationWidget.OnPrimaryTextAndSunFadeInComplete");

	ULevelUpNotificationWidget_OnPrimaryTextAndSunFadeInComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.LevelUpNotificationWidget.OnPerkAdded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void ULevelUpNotificationWidget::STATIC_OnPerkAdded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LevelUpNotificationWidget.OnPerkAdded");

	ULevelUpNotificationWidget_OnPerkAdded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.LevelUpNotificationWidget.OnLevelUpReminderVisibilityChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void ULevelUpNotificationWidget::STATIC_OnLevelUpReminderVisibilityChanged(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LevelUpNotificationWidget.OnLevelUpReminderVisibilityChanged");

	ULevelUpNotificationWidget_OnLevelUpReminderVisibilityChanged_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.LevelUpNotificationWidget.OnLevelUpNotificationVisibilityChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void ULevelUpNotificationWidget::STATIC_OnLevelUpNotificationVisibilityChanged(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LevelUpNotificationWidget.OnLevelUpNotificationVisibilityChanged");

	ULevelUpNotificationWidget_OnLevelUpNotificationVisibilityChanged_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.LevelUpNotificationWidget.OnLevelUpComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void ULevelUpNotificationWidget::STATIC_OnLevelUpComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LevelUpNotificationWidget.OnLevelUpComplete");

	ULevelUpNotificationWidget_OnLevelUpComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.LevelUpNotificationWidget.OnHUDVisibilityChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void ULevelUpNotificationWidget::STATIC_OnHUDVisibilityChanged(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LevelUpNotificationWidget.OnHUDVisibilityChanged");

	ULevelUpNotificationWidget_OnHUDVisibilityChanged_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.LevelUpNotificationWidget.OnGlowShrinkComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void ULevelUpNotificationWidget::STATIC_OnGlowShrinkComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LevelUpNotificationWidget.OnGlowShrinkComplete");

	ULevelUpNotificationWidget_OnGlowShrinkComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.LevelUpNotificationWidget.OnGlowGrowComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void ULevelUpNotificationWidget::STATIC_OnGlowGrowComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LevelUpNotificationWidget.OnGlowGrowComplete");

	ULevelUpNotificationWidget_OnGlowGrowComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.LevelUpNotificationWidget.OnGlowballComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void ULevelUpNotificationWidget::STATIC_OnGlowballComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LevelUpNotificationWidget.OnGlowballComplete");

	ULevelUpNotificationWidget_OnGlowballComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.LevelUpNotificationWidget.GetTextAndSunFadeOutAnimation
// ()
// Parameters:
// class UWidgetAnimation*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWidgetAnimation* ULevelUpNotificationWidget::GetTextAndSunFadeOutAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LevelUpNotificationWidget.GetTextAndSunFadeOutAnimation");

	ULevelUpNotificationWidget_GetTextAndSunFadeOutAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.LevelUpNotificationWidget.GetSunSpinAnimation
// ()
// Parameters:
// class UWidgetAnimation*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWidgetAnimation* ULevelUpNotificationWidget::GetSunSpinAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LevelUpNotificationWidget.GetSunSpinAnimation");

	ULevelUpNotificationWidget_GetSunSpinAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.LevelUpNotificationWidget.GetSecondaryTextFadeInAnimation
// ()
// Parameters:
// class UWidgetAnimation*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWidgetAnimation* ULevelUpNotificationWidget::GetSecondaryTextFadeInAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LevelUpNotificationWidget.GetSecondaryTextFadeInAnimation");

	ULevelUpNotificationWidget_GetSecondaryTextFadeInAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.LevelUpNotificationWidget.GetPrimaryTextGrowAnimation
// ()
// Parameters:
// class UWidgetAnimation*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWidgetAnimation* ULevelUpNotificationWidget::GetPrimaryTextGrowAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LevelUpNotificationWidget.GetPrimaryTextGrowAnimation");

	ULevelUpNotificationWidget_GetPrimaryTextGrowAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.LevelUpNotificationWidget.GetPrimaryTextAndSunFadeInAnimation
// ()
// Parameters:
// class UWidgetAnimation*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWidgetAnimation* ULevelUpNotificationWidget::GetPrimaryTextAndSunFadeInAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LevelUpNotificationWidget.GetPrimaryTextAndSunFadeInAnimation");

	ULevelUpNotificationWidget_GetPrimaryTextAndSunFadeInAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.LevelUpNotificationWidget.GetLevelUpReminderAnimation
// ()
// Parameters:
// class UWidgetAnimation*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWidgetAnimation* ULevelUpNotificationWidget::GetLevelUpReminderAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LevelUpNotificationWidget.GetLevelUpReminderAnimation");

	ULevelUpNotificationWidget_GetLevelUpReminderAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.LevelUpNotificationWidget.GetGlowShrinkAnimation
// ()
// Parameters:
// class UWidgetAnimation*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWidgetAnimation* ULevelUpNotificationWidget::GetGlowShrinkAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LevelUpNotificationWidget.GetGlowShrinkAnimation");

	ULevelUpNotificationWidget_GetGlowShrinkAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.LevelUpNotificationWidget.GetGlowGrowAnimation
// ()
// Parameters:
// class UWidgetAnimation*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWidgetAnimation* ULevelUpNotificationWidget::GetGlowGrowAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LevelUpNotificationWidget.GetGlowGrowAnimation");

	ULevelUpNotificationWidget_GetGlowGrowAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.LevelUpNotificationWidget.GetGlowFadeAnimation
// ()
// Parameters:
// class UWidgetAnimation*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWidgetAnimation* ULevelUpNotificationWidget::GetGlowFadeAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LevelUpNotificationWidget.GetGlowFadeAnimation");

	ULevelUpNotificationWidget_GetGlowFadeAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.LevelUpNotificationWidget.GetGlowballAnimation
// ()
// Parameters:
// class UWidgetAnimation*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWidgetAnimation* ULevelUpNotificationWidget::GetGlowballAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LevelUpNotificationWidget.GetGlowballAnimation");

	ULevelUpNotificationWidget_GetGlowballAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.LogList.AddNewFoundLog
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FLocString              ExaminableName                 (Parm)
// struct FLocString              ExaminableDescription          (Parm)

void ULogList::STATIC_AddNewFoundLog(const struct FLocString& ExaminableName, const struct FLocString& ExaminableDescription)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.LogList.AddNewFoundLog");

	ULogList_AddNewFoundLog_Params params;
	params.ExaminableName = ExaminableName;
	params.ExaminableDescription = ExaminableDescription;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuDLCManagerWidget.RefreshEntitlements
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainMenuDLCManagerWidget::STATIC_RefreshEntitlements()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuDLCManagerWidget.RefreshEntitlements");

	UMainMenuDLCManagerWidget_RefreshEntitlements_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuDLCWidget.OnButtonUnhoveredUnfocused
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainMenuDLCWidget::STATIC_OnButtonUnhoveredUnfocused()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuDLCWidget.OnButtonUnhoveredUnfocused");

	UMainMenuDLCWidget_OnButtonUnhoveredUnfocused_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuDLCWidget.OnButtonHoveredFocused
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainMenuDLCWidget::STATIC_OnButtonHoveredFocused()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuDLCWidget.OnButtonHoveredFocused");

	UMainMenuDLCWidget_OnButtonHoveredFocused_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.StartAutosaveSplash
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainMenuWidget::STATIC_StartAutosaveSplash()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.StartAutosaveSplash");

	UMainMenuWidget_StartAutosaveSplash_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.OpenMainScreen
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainMenuWidget::STATIC_OpenMainScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.OpenMainScreen");

	UMainMenuWidget_OpenMainScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.OpenExtrasScreen
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainMenuWidget::STATIC_OpenExtrasScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.OpenExtrasScreen");

	UMainMenuWidget_OpenExtrasScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.OpenDeliverablesScreen
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainMenuWidget::STATIC_OpenDeliverablesScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.OpenDeliverablesScreen");

	UMainMenuWidget_OpenDeliverablesScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.OpenCredits
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainMenuWidget::STATIC_OpenCredits()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.OpenCredits");

	UMainMenuWidget_OpenCredits_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.OnStartShowMainOptions
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainMenuWidget::STATIC_OnStartShowMainOptions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.OnStartShowMainOptions");

	UMainMenuWidget_OnStartShowMainOptions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.OnStartShowGammaSelection
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainMenuWidget::STATIC_OnStartShowGammaSelection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.OnStartShowGammaSelection");

	UMainMenuWidget_OnStartShowGammaSelection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.OnStartHideGammaSelection
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainMenuWidget::STATIC_OnStartHideGammaSelection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.OnStartHideGammaSelection");

	UMainMenuWidget_OnStartHideGammaSelection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.OnStartHideAnyTextPrompt
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainMenuWidget::STATIC_OnStartHideAnyTextPrompt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.OnStartHideAnyTextPrompt");

	UMainMenuWidget_OnStartHideAnyTextPrompt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.OnShowMainOptionsComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainMenuWidget::STATIC_OnShowMainOptionsComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.OnShowMainOptionsComplete");

	UMainMenuWidget_OnShowMainOptionsComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.OnShowMainOptions
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainMenuWidget::STATIC_OnShowMainOptions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.OnShowMainOptions");

	UMainMenuWidget_OnShowMainOptions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.OnShowLogo
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainMenuWidget::STATIC_OnShowLogo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.OnShowLogo");

	UMainMenuWidget_OnShowLogo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.OnShowInterface
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bShouldChangeLogo              (Parm, ZeroConstructor, IsPlainOldData)

void UMainMenuWidget::STATIC_OnShowInterface(bool bShouldChangeLogo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.OnShowInterface");

	UMainMenuWidget_OnShowInterface_Params params;
	params.bShouldChangeLogo = bShouldChangeLogo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.OnShowAnyTextPrompt
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainMenuWidget::STATIC_OnShowAnyTextPrompt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.OnShowAnyTextPrompt");

	UMainMenuWidget_OnShowAnyTextPrompt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.OnOfflineDLCCheckComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainMenuWidget::STATIC_OnOfflineDLCCheckComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.OnOfflineDLCCheckComplete");

	UMainMenuWidget_OnOfflineDLCCheckComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.OnLoadUserGameSettingsComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainMenuWidget::STATIC_OnLoadUserGameSettingsComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.OnLoadUserGameSettingsComplete");

	UMainMenuWidget_OnLoadUserGameSettingsComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.OnHideMainOptionsStart
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainMenuWidget::STATIC_OnHideMainOptionsStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.OnHideMainOptionsStart");

	UMainMenuWidget_OnHideMainOptionsStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.OnHideMainOptionsComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainMenuWidget::STATIC_OnHideMainOptionsComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.OnHideMainOptionsComplete");

	UMainMenuWidget_OnHideMainOptionsComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.OnHideLogo
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainMenuWidget::STATIC_OnHideLogo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.OnHideLogo");

	UMainMenuWidget_OnHideLogo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.OnHideInterface
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainMenuWidget::STATIC_OnHideInterface()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.OnHideInterface");

	UMainMenuWidget_OnHideInterface_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.OnGammaSelectionOpened
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainMenuWidget::STATIC_OnGammaSelectionOpened()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.OnGammaSelectionOpened");

	UMainMenuWidget_OnGammaSelectionOpened_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.OnGammaSelectionClosed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainMenuWidget::STATIC_OnGammaSelectionClosed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.OnGammaSelectionClosed");

	UMainMenuWidget_OnGammaSelectionClosed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.OnExternalMenuOpened
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainMenuWidget::STATIC_OnExternalMenuOpened()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.OnExternalMenuOpened");

	UMainMenuWidget_OnExternalMenuOpened_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.OnExternalMenuClosed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bForced                        (Parm, ZeroConstructor, IsPlainOldData)

void UMainMenuWidget::STATIC_OnExternalMenuClosed(bool bForced)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.OnExternalMenuClosed");

	UMainMenuWidget_OnExternalMenuClosed_Params params;
	params.bForced = bForced;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.OnDLCCheckComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainMenuWidget::STATIC_OnDLCCheckComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.OnDLCCheckComplete");

	UMainMenuWidget_OnDLCCheckComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.OnCreditsInterfaceOpened
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainMenuWidget::STATIC_OnCreditsInterfaceOpened()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.OnCreditsInterfaceOpened");

	UMainMenuWidget_OnCreditsInterfaceOpened_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.OnCreditsInterfaceClosed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bForced                        (Parm, ZeroConstructor, IsPlainOldData)

void UMainMenuWidget::STATIC_OnCreditsInterfaceClosed(bool bForced)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.OnCreditsInterfaceClosed");

	UMainMenuWidget_OnCreditsInterfaceClosed_Params params;
	params.bForced = bForced;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.OnAutosaveSplashComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainMenuWidget::STATIC_OnAutosaveSplashComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.OnAutosaveSplashComplete");

	UMainMenuWidget_OnAutosaveSplashComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.OnAnyTextPromptHideComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainMenuWidget::STATIC_OnAnyTextPromptHideComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.OnAnyTextPromptHideComplete");

	UMainMenuWidget_OnAnyTextPromptHideComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainMenuWidget.OnActiveUserChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EActiveUserChangeType          ChangeType                     (Parm, ZeroConstructor, IsPlainOldData)

void UMainMenuWidget::STATIC_OnActiveUserChanged(EActiveUserChangeType ChangeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainMenuWidget.OnActiveUserChanged");

	UMainMenuWidget_OnActiveUserChanged_Params params;
	params.ChangeType = ChangeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainOptionsWidget.OnSettingsMenuClosed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainOptionsWidget::STATIC_OnSettingsMenuClosed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainOptionsWidget.OnSettingsMenuClosed");

	UMainOptionsWidget_OnSettingsMenuClosed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainOptionsWidget.OnQueryLatestSaveFinished
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  LatestSaveName                 (Parm, ZeroConstructor)
// bool                           bHasSaves                      (Parm, ZeroConstructor, IsPlainOldData)

void UMainOptionsWidget::STATIC_OnQueryLatestSaveFinished(const class FString& LatestSaveName, bool bHasSaves)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainOptionsWidget.OnQueryLatestSaveFinished");

	UMainOptionsWidget_OnQueryLatestSaveFinished_Params params;
	params.LatestSaveName = LatestSaveName;
	params.bHasSaves = bHasSaves;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainOptionsWidget.OnLoadSaveMenuClosed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bForced                        (Parm, ZeroConstructor, IsPlainOldData)

void UMainOptionsWidget::STATIC_OnLoadSaveMenuClosed(bool bForced)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainOptionsWidget.OnLoadSaveMenuClosed");

	UMainOptionsWidget_OnLoadSaveMenuClosed_Params params;
	params.bForced = bForced;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainOptionsWidget.OnLoadComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  Filename                       (Parm, ZeroConstructor)
// ELoadGameResult                Result                         (Parm, ZeroConstructor, IsPlainOldData)

void UMainOptionsWidget::STATIC_OnLoadComplete(const class FString& Filename, ELoadGameResult Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainOptionsWidget.OnLoadComplete");

	UMainOptionsWidget_OnLoadComplete_Params params;
	params.Filename = Filename;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainOptionsWidget.OnActiveUserChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EActiveUserChangeType          ChangeType                     (Parm, ZeroConstructor, IsPlainOldData)

void UMainOptionsWidget::STATIC_OnActiveUserChanged(EActiveUserChangeType ChangeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainOptionsWidget.OnActiveUserChanged");

	UMainOptionsWidget_OnActiveUserChanged_Params params;
	params.ChangeType = ChangeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainOptionsWidget.InquireDLC2
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainOptionsWidget::STATIC_InquireDLC2()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainOptionsWidget.InquireDLC2");

	UMainOptionsWidget_InquireDLC2_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MainOptionsWidget.InquireDLC1
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMainOptionsWidget::STATIC_InquireDLC1()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MainOptionsWidget.InquireDLC1");

	UMainOptionsWidget_InquireDLC1_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MapRenderer.TakeRender
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AMapRenderer::STATIC_TakeRender()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MapRenderer.TakeRender");

	AMapRenderer_TakeRender_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MapTransitionNotification.StartAnimation
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMapTransitionNotification::STATIC_StartAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MapTransitionNotification.StartAnimation");

	UMapTransitionNotification_StartAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MapTransitionNotification.OnHUDVisibilityChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void UMapTransitionNotification::STATIC_OnHUDVisibilityChanged(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MapTransitionNotification.OnHUDVisibilityChanged");

	UMapTransitionNotification_OnHUDVisibilityChanged_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MapTransitionNotification.OnAreaNameModeChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UMapTransitionNotification::STATIC_OnAreaNameModeChanged(int ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MapTransitionNotification.OnAreaNameModeChanged");

	UMapTransitionNotification_OnAreaNameModeChanged_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MedKitAbilityWidget.UpdateDrugSlots
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            ConsumablesUsed                (Parm, ZeroConstructor, IsPlainOldData)

void UMedKitAbilityWidget::STATIC_UpdateDrugSlots(int ConsumablesUsed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MedKitAbilityWidget.UpdateDrugSlots");

	UMedKitAbilityWidget_UpdateDrugSlots_Params params;
	params.ConsumablesUsed = ConsumablesUsed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MedKitComponent.StartMedkit
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UMedKitComponent::STATIC_StartMedkit(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MedKitComponent.StartMedkit");

	UMedKitComponent_StartMedkit_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MedKitComponent.OnAnimNotifyEvent
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EAnimNotify                    AnimNotifyEvent                (Parm, ZeroConstructor, IsPlainOldData)

void UMedKitComponent::STATIC_OnAnimNotifyEvent(EAnimNotify AnimNotifyEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MedKitComponent.OnAnimNotifyEvent");

	UMedKitComponent_OnAnimNotifyEvent_Params params;
	params.AnimNotifyEvent = AnimNotifyEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MedKitComponent.OnAbilityMontageEnded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInterrupted                   (Parm, ZeroConstructor, IsPlainOldData)

void UMedKitComponent::STATIC_OnAbilityMontageEnded(class UAnimMontage* Montage, bool bInterrupted)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MedKitComponent.OnAbilityMontageEnded");

	UMedKitComponent_OnAbilityMontageEnded_Params params;
	params.Montage = Montage;
	params.bInterrupted = bInterrupted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MeleeMode.OnStatUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class URpgStat*                Stat                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UMeleeMode::STATIC_OnStatUpdated(class URpgStat* Stat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MeleeMode.OnStatUpdated");

	UMeleeMode_OnStatUpdated_Params params;
	params.Stat = Stat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MeleeSequencer.OnStatUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class URpgStat*                Stat                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UMeleeSequencer::STATIC_OnStatUpdated(class URpgStat* Stat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MeleeSequencer.OnStatUpdated");

	UMeleeSequencer_OnStatUpdated_Params params;
	params.Stat = Stat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MeleeSequencer.OnAbilityUnlocked
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EUnlockAbility                 Ability                        (Parm, ZeroConstructor, IsPlainOldData)

void UMeleeSequencer::STATIC_OnAbilityUnlocked(EUnlockAbility Ability)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MeleeSequencer.OnAbilityUnlocked");

	UMeleeSequencer_OnAbilityUnlocked_Params params;
	params.Ability = Ability;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MeleeSlotManagerComponent.OnAttackerNumMeleeSlotsRequiredChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaAiController*    AttackerController             (Parm, ZeroConstructor, IsPlainOldData)

void UMeleeSlotManagerComponent::STATIC_OnAttackerNumMeleeSlotsRequiredChanged(class AIndianaAiController* AttackerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MeleeSlotManagerComponent.OnAttackerNumMeleeSlotsRequiredChanged");

	UMeleeSlotManagerComponent_OnAttackerNumMeleeSlotsRequiredChanged_Params params;
	params.AttackerController = AttackerController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.WeaponVisuals.UninitializeBP
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UWeaponVisuals::STATIC_UninitializeBP()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponVisuals.UninitializeBP");

	UWeaponVisuals_UninitializeBP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.WeaponVisuals.TriggerEventBP
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EWeaponEvent                   WeaponEvent                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FEventEffectParams      Params                         (ConstParm, Parm, OutParm, ReferenceParm)

void UWeaponVisuals::STATIC_TriggerEventBP(EWeaponEvent WeaponEvent, const struct FEventEffectParams& Params)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponVisuals.TriggerEventBP");

	UWeaponVisuals_TriggerEventBP_Params params;
	params.WeaponEvent = WeaponEvent;
	params.Params = Params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.WeaponVisuals.TriggerDamageTypeMuzzleFx
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UWeaponVisuals::STATIC_TriggerDamageTypeMuzzleFx()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponVisuals.TriggerDamageTypeMuzzleFx");

	UWeaponVisuals_TriggerDamageTypeMuzzleFx_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.WeaponVisuals.TriggerCustomEventBP
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   EventName                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FEventEffectParams      Params                         (ConstParm, Parm, OutParm, ReferenceParm)

void UWeaponVisuals::STATIC_TriggerCustomEventBP(const struct FName& EventName, const struct FEventEffectParams& Params)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponVisuals.TriggerCustomEventBP");

	UWeaponVisuals_TriggerCustomEventBP_Params params;
	params.EventName = EventName;
	params.Params = Params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.WeaponVisuals.TriggerCustomEvent
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   EventName                      (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponVisuals::STATIC_TriggerCustomEvent(const struct FName& EventName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponVisuals.TriggerCustomEvent");

	UWeaponVisuals_TriggerCustomEvent_Params params;
	params.EventName = EventName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.WeaponVisuals.TickBP
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponVisuals::STATIC_TickBP(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponVisuals.TickBP");

	UWeaponVisuals_TickBP_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.WeaponVisuals.StopCustomEventBP
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   EventName                      (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponVisuals::STATIC_StopCustomEventBP(const struct FName& EventName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponVisuals.StopCustomEventBP");

	UWeaponVisuals_StopCustomEventBP_Params params;
	params.EventName = EventName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.WeaponVisuals.StopCustomEvent
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   EventName                      (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponVisuals::STATIC_StopCustomEvent(const struct FName& EventName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponVisuals.StopCustomEvent");

	UWeaponVisuals_StopCustomEvent_Params params;
	params.EventName = EventName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.WeaponVisuals.LeaveStateBP
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EWeaponState                   WeaponState                    (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponVisuals::STATIC_LeaveStateBP(EWeaponState WeaponState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponVisuals.LeaveStateBP");

	UWeaponVisuals_LeaveStateBP_Params params;
	params.WeaponState = WeaponState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.WeaponVisuals.LeaveCustomStateBP
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   EventName                      (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponVisuals::STATIC_LeaveCustomStateBP(const struct FName& EventName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponVisuals.LeaveCustomStateBP");

	UWeaponVisuals_LeaveCustomStateBP_Params params;
	params.EventName = EventName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.WeaponVisuals.LeaveCustomState
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   StateName                      (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponVisuals::STATIC_LeaveCustomState(const struct FName& StateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponVisuals.LeaveCustomState");

	UWeaponVisuals_LeaveCustomState_Params params;
	params.StateName = StateName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.WeaponVisuals.InterruptEventBP
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EWeaponEvent                   WeaponEvent                    (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponVisuals::STATIC_InterruptEventBP(EWeaponEvent WeaponEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponVisuals.InterruptEventBP");

	UWeaponVisuals_InterruptEventBP_Params params;
	params.WeaponEvent = WeaponEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.WeaponVisuals.InitializeBP
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  NewTarget                      (Parm, ZeroConstructor, IsPlainOldData)
// class UWeapon*                 NewWeapon                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UWeaponVisuals::STATIC_InitializeBP(class AActor* NewTarget, class UWeapon* NewWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponVisuals.InitializeBP");

	UWeaponVisuals_InitializeBP_Params params;
	params.NewTarget = NewTarget;
	params.NewWeapon = NewWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.WeaponVisuals.EnterStateBP
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EWeaponState                   WeaponState                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FEventEffectParams      Params                         (ConstParm, Parm, OutParm, ReferenceParm)

void UWeaponVisuals::STATIC_EnterStateBP(EWeaponState WeaponState, const struct FEventEffectParams& Params)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponVisuals.EnterStateBP");

	UWeaponVisuals_EnterStateBP_Params params;
	params.WeaponState = WeaponState;
	params.Params = Params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.WeaponVisuals.EnterCustomStateBP
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   EventName                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FEventEffectParams      Params                         (ConstParm, Parm, OutParm, ReferenceParm)

void UWeaponVisuals::STATIC_EnterCustomStateBP(const struct FName& EventName, const struct FEventEffectParams& Params)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponVisuals.EnterCustomStateBP");

	UWeaponVisuals_EnterCustomStateBP_Params params;
	params.EventName = EventName;
	params.Params = Params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.WeaponVisuals.EnterCustomState
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   StateName                      (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponVisuals::STATIC_EnterCustomState(const struct FName& StateName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponVisuals.EnterCustomState");

	UWeaponVisuals_EnterCustomState_Params params;
	params.StateName = StateName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.WeaponVisuals.CreateLerpTimer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FLerpTimer              TimerProperties                (ConstParm, Parm, OutParm, ReferenceParm)

void UWeaponVisuals::STATIC_CreateLerpTimer(const struct FLerpTimer& TimerProperties)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponVisuals.CreateLerpTimer");

	UWeaponVisuals_CreateLerpTimer_Params params;
	params.TimerProperties = TimerProperties;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.WeaponVisuals.ClearLerpTimers
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UWeaponVisuals::STATIC_ClearLerpTimers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponVisuals.ClearLerpTimers");

	UWeaponVisuals_ClearLerpTimers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MoveToBehaviorStateInfo.OnTakeDamage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FCauseDamageInfo        CauseDamageInfo                (ConstParm, Parm, OutParm, ReferenceParm)

void UMoveToBehaviorStateInfo::STATIC_OnTakeDamage(const struct FCauseDamageInfo& CauseDamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MoveToBehaviorStateInfo.OnTakeDamage");

	UMoveToBehaviorStateInfo_OnTakeDamage_Params params;
	params.CauseDamageInfo = CauseDamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MoviePlayerWidget.StopMovie
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bWasSkipped                    (Parm, ZeroConstructor, IsPlainOldData)

void UMoviePlayerWidget::STATIC_StopMovie(bool bWasSkipped)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MoviePlayerWidget.StopMovie");

	UMoviePlayerWidget_StopMovie_Params params;
	params.bWasSkipped = bWasSkipped;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MoviePlayerWidget.PlayMovie
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UFileMediaSource*        Movie                          (Parm, ZeroConstructor, IsPlainOldData)

void UMoviePlayerWidget::STATIC_PlayMovie(class UFileMediaSource* Movie)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MoviePlayerWidget.PlayMovie");

	UMoviePlayerWidget_PlayMovie_Params params;
	params.Movie = Movie;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MoviePlayerWidget.PauseMovie
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMoviePlayerWidget::STATIC_PauseMovie()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MoviePlayerWidget.PauseMovie");

	UMoviePlayerWidget_PauseMovie_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MoviePlayerWidget.OnMovieFinished
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMoviePlayerWidget::STATIC_OnMovieFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MoviePlayerWidget.OnMovieFinished");

	UMoviePlayerWidget_OnMovieFinished_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MoviePlayerWidget.OnAttemptCancel
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMoviePlayerWidget::STATIC_OnAttemptCancel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MoviePlayerWidget.OnAttemptCancel");

	UMoviePlayerWidget_OnAttemptCancel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MoviePlayerWidget.InitiateFadeOut
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMoviePlayerWidget::STATIC_InitiateFadeOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MoviePlayerWidget.InitiateFadeOut");

	UMoviePlayerWidget_InitiateFadeOut_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MoviePlayerWidget.InitiateFadeIn
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UMoviePlayerWidget::STATIC_InitiateFadeIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MoviePlayerWidget.InitiateFadeIn");

	UMoviePlayerWidget_InitiateFadeIn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MultiStatusEffect.OnChildCleared
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UStatusEffect*           ChildEffect                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UMultiStatusEffect::STATIC_OnChildCleared(class UStatusEffect* ChildEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MultiStatusEffect.OnChildCleared");

	UMultiStatusEffect_OnChildCleared_Params params;
	params.ChildEffect = ChildEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MusicManager.SetMusicOverride_BP
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UMusicTrackData*         OverrideTrack                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UMusicManager::STATIC_SetMusicOverride_BP(class UMusicTrackData* OverrideTrack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MusicManager.SetMusicOverride_BP");

	UMusicManager_SetMusicOverride_BP_Params params;
	params.OverrideTrack = OverrideTrack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MusicManager.OnPreMapLoad
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  MapName                        (Parm, ZeroConstructor)

void UMusicManager::STATIC_OnPreMapLoad(const class FString& MapName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MusicManager.OnPreMapLoad");

	UMusicManager_OnPreMapLoad_Params params;
	params.MapName = MapName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.MusicManager.OnPostMapLoad
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWorld*                  World                          (Parm, ZeroConstructor, IsPlainOldData)

void UMusicManager::STATIC_OnPostMapLoad(class UWorld* World)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.MusicManager.OnPostMapLoad");

	UMusicManager_OnPostMapLoad_Params params;
	params.World = World;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ObjectiveWaypointGameDataReference.GetOverridesPreviousWaypoint
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UObjectiveWaypointGameDataReference::GetOverridesPreviousWaypoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ObjectiveWaypointGameDataReference.GetOverridesPreviousWaypoint");

	UObjectiveWaypointGameDataReference_GetOverridesPreviousWaypoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ObjectiveWaypointGameDataReference.GetGameObject
// ()
// Parameters:
// struct FGuid                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FGuid UObjectiveWaypointGameDataReference::GetGameObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ObjectiveWaypointGameDataReference.GetGameObject");

	UObjectiveWaypointGameDataReference_GetGameObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ObjectiveWaypointGameDataReference.GetDisplayOverrideWithGender
// (BlueprintCosmetic)
// Parameters:
// EGender                        CharacterGender                (Parm, ZeroConstructor, IsPlainOldData)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UObjectiveWaypointGameDataReference::GetDisplayOverrideWithGender(EGender CharacterGender)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ObjectiveWaypointGameDataReference.GetDisplayOverrideWithGender");

	UObjectiveWaypointGameDataReference_GetDisplayOverrideWithGender_Params params;
	params.CharacterGender = CharacterGender;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ObjectiveWaypointGameDataReference.GetDisplayOverrideID
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UObjectiveWaypointGameDataReference::GetDisplayOverrideID()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ObjectiveWaypointGameDataReference.GetDisplayOverrideID");

	UObjectiveWaypointGameDataReference_GetDisplayOverrideID_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ObjectiveWaypointGameDataReference.GetDisplayOverride
// ()
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UObjectiveWaypointGameDataReference::GetDisplayOverride()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ObjectiveWaypointGameDataReference.GetDisplayOverride");

	UObjectiveWaypointGameDataReference_GetDisplayOverride_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.OCLAudioComponent.Stop
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EOCLEventType                  Type                           (Parm, ZeroConstructor, IsPlainOldData)

void UOCLAudioComponent::STATIC_Stop(EOCLEventType Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OCLAudioComponent.Stop");

	UOCLAudioComponent_Stop_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OCLAudioComponent.Play
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EOCLEventType                  Type                           (Parm, ZeroConstructor, IsPlainOldData)

void UOCLAudioComponent::STATIC_Play(EOCLEventType Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OCLAudioComponent.Play");

	UOCLAudioComponent_Play_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OCLComponent.UnsealOCL
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bFireOCLUnsealedEvent          (Parm, ZeroConstructor, IsPlainOldData)

void UOCLComponent::STATIC_UnsealOCL(bool bFireOCLUnsealedEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OCLComponent.UnsealOCL");

	UOCLComponent_UnsealOCL_Params params;
	params.bFireOCLUnsealedEvent = bFireOCLUnsealedEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OCLComponent.UnlockOCL
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bFireOCLUnlockedEvent          (Parm, ZeroConstructor, IsPlainOldData)

void UOCLComponent::STATIC_UnlockOCL(bool bFireOCLUnlockedEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OCLComponent.UnlockOCL");

	UOCLComponent_UnlockOCL_Params params;
	params.bFireOCLUnlockedEvent = bFireOCLUnlockedEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OCLComponent.UnbarOCL
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bFireOCLUnbarredEvent          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bEnterLockedState              (Parm, ZeroConstructor, IsPlainOldData)

void UOCLComponent::STATIC_UnbarOCL(bool bFireOCLUnbarredEvent, bool bEnterLockedState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OCLComponent.UnbarOCL");

	UOCLComponent_UnbarOCL_Params params;
	params.bFireOCLUnbarredEvent = bFireOCLUnbarredEvent;
	params.bEnterLockedState = bEnterLockedState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OCLComponent.SignalOCLAnimationComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UOCLComponent::STATIC_SignalOCLAnimationComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OCLComponent.SignalOCLAnimationComplete");

	UOCLComponent_SignalOCLAnimationComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OCLComponent.SealOCL
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bFireOCLSealedEvent            (Parm, ZeroConstructor, IsPlainOldData)

void UOCLComponent::STATIC_SealOCL(bool bFireOCLSealedEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OCLComponent.SealOCL");

	UOCLComponent_SealOCL_Params params;
	params.bFireOCLSealedEvent = bFireOCLSealedEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OCLComponent.LockOCL
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bFireOCLLockedEvent            (Parm, ZeroConstructor, IsPlainOldData)

void UOCLComponent::STATIC_LockOCL(bool bFireOCLLockedEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OCLComponent.LockOCL");

	UOCLComponent_LockOCL_Params params;
	params.bFireOCLLockedEvent = bFireOCLLockedEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OCLComponent.IsSealing
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UOCLComponent::IsSealing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OCLComponent.IsSealing");

	UOCLComponent_IsSealing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.OCLComponent.IsSealed
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UOCLComponent::IsSealed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OCLComponent.IsSealed");

	UOCLComponent_IsSealed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.OCLComponent.IsOpening
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UOCLComponent::IsOpening()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OCLComponent.IsOpening");

	UOCLComponent_IsOpening_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.OCLComponent.IsOpen
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UOCLComponent::IsOpen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OCLComponent.IsOpen");

	UOCLComponent_IsOpen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.OCLComponent.IsLocked
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UOCLComponent::IsLocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OCLComponent.IsLocked");

	UOCLComponent_IsLocked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.OCLComponent.IsClosing
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UOCLComponent::IsClosing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OCLComponent.IsClosing");

	UOCLComponent_IsClosing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.OCLComponent.IsClosed
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UOCLComponent::IsClosed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OCLComponent.IsClosed");

	UOCLComponent_IsClosed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.OCLComponent.IsBarred
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UOCLComponent::IsBarred()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OCLComponent.IsBarred");

	UOCLComponent_IsBarred_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.OCLComponent.GetExactLockpickDifficulty
// ()
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UOCLComponent::GetExactLockpickDifficulty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OCLComponent.GetExactLockpickDifficulty");

	UOCLComponent_GetExactLockpickDifficulty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.OCLComponent.GetCurrentState
// ()
// Parameters:
// EOCLState                      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EOCLState UOCLComponent::GetCurrentState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OCLComponent.GetCurrentState");

	UOCLComponent_GetCurrentState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.OCLComponent.BarOCL
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bFireOCLBarredEvent            (Parm, ZeroConstructor, IsPlainOldData)

void UOCLComponent::STATIC_BarOCL(bool bFireOCLBarredEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OCLComponent.BarOCL");

	UOCLComponent_BarOCL_Params params;
	params.bFireOCLBarredEvent = bFireOCLBarredEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OCLComponent.AttemptUnlock
// (BlueprintCosmetic)
// Parameters:
// class AActor*                  Initiator                      (Parm, ZeroConstructor, IsPlainOldData)
// EOCLResult                     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EOCLResult UOCLComponent::AttemptUnlock(class AActor* Initiator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OCLComponent.AttemptUnlock");

	UOCLComponent_AttemptUnlock_Params params;
	params.Initiator = Initiator;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.OCLComponent.AttemptOpen
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic)
// Parameters:
// class AActor*                  Initiator                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bForce                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSeal                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIgnoreLockStatus              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIgnoreStartEvent              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIgnoreEndEvent                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIgnoreSound                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInstantAnimation              (Parm, ZeroConstructor, IsPlainOldData)
// EOCLResult                     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EOCLResult UOCLComponent::AttemptOpen(class AActor* Initiator, bool bForce, bool bSeal, bool bIgnoreLockStatus, bool bIgnoreStartEvent, bool bIgnoreEndEvent, bool bIgnoreSound, bool bInstantAnimation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OCLComponent.AttemptOpen");

	UOCLComponent_AttemptOpen_Params params;
	params.Initiator = Initiator;
	params.bForce = bForce;
	params.bSeal = bSeal;
	params.bIgnoreLockStatus = bIgnoreLockStatus;
	params.bIgnoreStartEvent = bIgnoreStartEvent;
	params.bIgnoreEndEvent = bIgnoreEndEvent;
	params.bIgnoreSound = bIgnoreSound;
	params.bInstantAnimation = bInstantAnimation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.OCLComponent.AttemptClose
// ()
// Parameters:
// class AActor*                  Initiator                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bForce                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Block                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSeal                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIgnoreLockStatus              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIgnoreStartEvent              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIgnoreEndEvent                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIgnoreSound                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInstantAnimation              (Parm, ZeroConstructor, IsPlainOldData)
// EOCLResult                     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EOCLResult UOCLComponent::AttemptClose(class AActor* Initiator, bool bForce, bool Block, bool bSeal, bool bIgnoreLockStatus, bool bIgnoreStartEvent, bool bIgnoreEndEvent, bool bIgnoreSound, bool bInstantAnimation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OCLComponent.AttemptClose");

	UOCLComponent_AttemptClose_Params params;
	params.Initiator = Initiator;
	params.bForce = bForce;
	params.Block = Block;
	params.bSeal = bSeal;
	params.bIgnoreLockStatus = bIgnoreLockStatus;
	params.bIgnoreStartEvent = bIgnoreStartEvent;
	params.bIgnoreEndEvent = bIgnoreEndEvent;
	params.bIgnoreSound = bIgnoreSound;
	params.bInstantAnimation = bInstantAnimation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.OnRailsComponent.OnCompHit
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UPrimitiveComponent*     HitComp                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UOnRailsComponent::STATIC_OnCompHit(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnRailsComponent.OnCompHit");

	UOnRailsComponent_OnCompHit_Params params;
	params.HitComp = HitComp;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnRailsComponent.OnCharacterDeath
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FCauseDamageInfo        CDI                            (ConstParm, Parm, OutParm, ReferenceParm)

void UOnRailsComponent::STATIC_OnCharacterDeath(const struct FCauseDamageInfo& CDI)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnRailsComponent.OnCharacterDeath");

	UOnRailsComponent_OnCharacterDeath_Params params;
	params.CDI = CDI;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.OnRailsComponent.IsMovingForward
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UOnRailsComponent::IsMovingForward()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnRailsComponent.IsMovingForward");

	UOnRailsComponent_IsMovingForward_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.OnRailsComponent.IsMoving
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UOnRailsComponent::IsMoving()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnRailsComponent.IsMoving");

	UOnRailsComponent_IsMoving_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.OnRailsComponent.HasVantageForActor
// (BlueprintCosmetic)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UOnRailsComponent::HasVantageForActor(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnRailsComponent.HasVantageForActor");

	UOnRailsComponent_HasVantageForActor_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.OnRailsComponent.FurthestLocationOnSpline
// ()
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UOnRailsComponent::FurthestLocationOnSpline()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnRailsComponent.FurthestLocationOnSpline");

	UOnRailsComponent_FurthestLocationOnSpline_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.OnRailsComponent.FindVantageForLocation
// (BlueprintAuthorityOnly, BlueprintCosmetic)
// Parameters:
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UOnRailsComponent::FindVantageForLocation(const struct FVector& Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnRailsComponent.FindVantageForLocation");

	UOnRailsComponent_FindVantageForLocation_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.OnRailsComponent.FindVantageForActor
// (BlueprintCosmetic)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UOnRailsComponent::FindVantageForActor(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OnRailsComponent.FindVantageForActor");

	UOnRailsComponent_FindVantageForActor_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.OptionSliderWidget.OnSliderValueChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FSliderEvent            Event                          (ConstParm, Parm, OutParm, ReferenceParm)

void UOptionSliderWidget::STATIC_OnSliderValueChanged(const struct FSliderEvent& Event)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.OptionSliderWidget.OnSliderValueChanged");

	UOptionSliderWidget_OnSliderValueChanged_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ParticlePool.ParticleFreed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UParticleSystemComponent* Particle                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UParticlePool::STATIC_ParticleFreed(class UParticleSystemComponent* Particle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ParticlePool.ParticleFreed");

	UParticlePool_ParticleFreed_Params params;
	params.Particle = Particle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PauseMenuWidget.OnSettingsMenuClosed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UPauseMenuWidget::STATIC_OnSettingsMenuClosed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PauseMenuWidget.OnSettingsMenuClosed");

	UPauseMenuWidget_OnSettingsMenuClosed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PauseMenuWidget.OnSaveLoadMenuClosed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bForced                        (Parm, ZeroConstructor, IsPlainOldData)

void UPauseMenuWidget::STATIC_OnSaveLoadMenuClosed(bool bForced)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PauseMenuWidget.OnSaveLoadMenuClosed");

	UPauseMenuWidget_OnSaveLoadMenuClosed_Params params;
	params.bForced = bForced;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PauseMenuWidget.OnSaveGameComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ESaveGameResult                SaveResult                     (Parm, ZeroConstructor, IsPlainOldData)
// ESaveGameType                  SaveType                       (Parm, ZeroConstructor, IsPlainOldData)

void UPauseMenuWidget::STATIC_OnSaveGameComplete(ESaveGameResult SaveResult, ESaveGameType SaveType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PauseMenuWidget.OnSaveGameComplete");

	UPauseMenuWidget_OnSaveGameComplete_Params params;
	params.SaveResult = SaveResult;
	params.SaveType = SaveType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PauseMenuWidget.OnInputBack
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UPauseMenuWidget::STATIC_OnInputBack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PauseMenuWidget.OnInputBack");

	UPauseMenuWidget_OnInputBack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PerksListEntry.UpdateButtonBrush
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bPendingPurchase               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bActuallyPurchased             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSuppressed                    (Parm, ZeroConstructor, IsPlainOldData)

void UPerksListEntry::STATIC_UpdateButtonBrush(bool bPendingPurchase, bool bActuallyPurchased, bool bSuppressed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PerksListEntry.UpdateButtonBrush");

	UPerksListEntry_UpdateButtonBrush_Params params;
	params.bPendingPurchase = bPendingPurchase;
	params.bActuallyPurchased = bActuallyPurchased;
	params.bSuppressed = bSuppressed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PerksListEntry.OnPerkClickedValid
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UPerksListEntry::STATIC_OnPerkClickedValid()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PerksListEntry.OnPerkClickedValid");

	UPerksListEntry_OnPerkClickedValid_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PerksListEntry.GetUnpurchasedIcon
// ()
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UPerksListEntry::GetUnpurchasedIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PerksListEntry.GetUnpurchasedIcon");

	UPerksListEntry_GetUnpurchasedIcon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.PerksListEntry.GetSuppressedIcon
// ()
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UPerksListEntry::GetSuppressedIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PerksListEntry.GetSuppressedIcon");

	UPerksListEntry_GetSuppressedIcon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.PerksListEntry.GetPurchasedIcon
// ()
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UPerksListEntry::GetPurchasedIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PerksListEntry.GetPurchasedIcon");

	UPerksListEntry_GetPurchasedIcon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.PerksTierWidget.GetTextOpacity
// (BlueprintAuthorityOnly)
// Parameters:
// bool                           bUnlocked                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPerksTierWidget::GetTextOpacity(bool bUnlocked)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PerksTierWidget.GetTextOpacity");

	UPerksTierWidget_GetTextOpacity_Params params;
	params.bUnlocked = bUnlocked;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.PerksTierWidget.GetImageOpacity
// (BlueprintAuthorityOnly)
// Parameters:
// bool                           bUnlocked                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPerksTierWidget::GetImageOpacity(bool bUnlocked)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PerksTierWidget.GetImageOpacity");

	UPerksTierWidget_GetImageOpacity_Params params;
	params.bUnlocked = bUnlocked;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.PerksTierWidget.GetColorType
// (Final)
// Parameters:
// bool                           bUnlocked                      (Parm, ZeroConstructor, IsPlainOldData)
// EIndianaUIColorType            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EIndianaUIColorType UPerksTierWidget::GetColorType(bool bUnlocked)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PerksTierWidget.GetColorType");

	UPerksTierWidget_GetColorType_Params params;
	params.bUnlocked = bUnlocked;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.PersonalSpaceComponent.OnNewStateOfBeing
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EStateOfBeing                  NewStateOfBeing                (Parm, ZeroConstructor, IsPlainOldData)
// EStateOfBeing                  OldStateOfBeing                (Parm, ZeroConstructor, IsPlainOldData)

void UPersonalSpaceComponent::STATIC_OnNewStateOfBeing(EStateOfBeing NewStateOfBeing, EStateOfBeing OldStateOfBeing)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PersonalSpaceComponent.OnNewStateOfBeing");

	UPersonalSpaceComponent_OnNewStateOfBeing_Params params;
	params.NewStateOfBeing = NewStateOfBeing;
	params.OldStateOfBeing = OldStateOfBeing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PersuadeBehaviorStateInfo.OnTakeDamage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FCauseDamageInfo        CauseDamageInfo                (ConstParm, Parm, OutParm, ReferenceParm)

void UPersuadeBehaviorStateInfo::STATIC_OnTakeDamage(const struct FCauseDamageInfo& CauseDamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PersuadeBehaviorStateInfo.OnTakeDamage");

	UPersuadeBehaviorStateInfo_OnTakeDamage_Params params;
	params.CauseDamageInfo = CauseDamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Pickup.ShutdownDropPhysics
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bUpdateTransforms              (Parm, ZeroConstructor, IsPlainOldData)

void APickup::STATIC_ShutdownDropPhysics(bool bUpdateTransforms)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Pickup.ShutdownDropPhysics");

	APickup_ShutdownDropPhysics_Params params;
	params.bUpdateTransforms = bUpdateTransforms;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Pickup.SetupDropPhysics
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void APickup::STATIC_SetupDropPhysics()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Pickup.SetupDropPhysics");

	APickup_SetupDropPhysics_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Pickup.OnPhysicsWake
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UPrimitiveComponent*     WakingComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   BoneName                       (Parm, ZeroConstructor, IsPlainOldData)

void APickup::STATIC_OnPhysicsWake(class UPrimitiveComponent* WakingComponent, const struct FName& BoneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Pickup.OnPhysicsWake");

	APickup_OnPhysicsWake_Params params;
	params.WakingComponent = WakingComponent;
	params.BoneName = BoneName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Pickup.OnPhysicsSleep
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UPrimitiveComponent*     SleepingComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   BoneName                       (Parm, ZeroConstructor, IsPlainOldData)

void APickup::STATIC_OnPhysicsSleep(class UPrimitiveComponent* SleepingComponent, const struct FName& BoneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Pickup.OnPhysicsSleep");

	APickup_OnPhysicsSleep_Params params;
	params.SleepingComponent = SleepingComponent;
	params.BoneName = BoneName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Pickup.GetItem
// ()
// Parameters:
// class UItem*                   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UItem* APickup::GetItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Pickup.GetItem");

	APickup_GetItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.PlayAnimationAction.OnMontageBlendingOut
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInterrupted                   (Parm, ZeroConstructor, IsPlainOldData)

void UPlayAnimationAction::STATIC_OnMontageBlendingOut(class UAnimMontage* Montage, bool bInterrupted)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayAnimationAction.OnMontageBlendingOut");

	UPlayAnimationAction_OnMontageBlendingOut_Params params;
	params.Montage = Montage;
	params.bInterrupted = bInterrupted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerDeathComponent.OnLanded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          DistanceFallen                 (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerDeathComponent::STATIC_OnLanded(float DistanceFallen)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerDeathComponent.OnLanded");

	UPlayerDeathComponent_OnLanded_Params params;
	params.DistanceFallen = DistanceFallen;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerDeathComponent.OnAnimNotifyEvent
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EAnimNotify                    AnimNotifyEvent                (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerDeathComponent::STATIC_OnAnimNotifyEvent(EAnimNotify AnimNotifyEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerDeathComponent.OnAnimNotifyEvent");

	UPlayerDeathComponent_OnAnimNotifyEvent_Params params;
	params.AnimNotifyEvent = AnimNotifyEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerDeathComponent.FadeToBlackComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UPlayerDeathComponent::STATIC_FadeToBlackComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerDeathComponent.FadeToBlackComplete");

	UPlayerDeathComponent_FadeToBlackComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerDeathComponent.DeathAnimComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UPlayerDeathComponent::STATIC_DeathAnimComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerDeathComponent.DeathAnimComplete");

	UPlayerDeathComponent_DeathAnimComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerEnvironmentInteractionComponent.OnOccupiedNavAreaChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UClass*                  PrevOccupiedArea               (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  CurrentOccupiedArea            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UPlayerEnvironmentInteractionComponent::STATIC_OnOccupiedNavAreaChanged(class UClass* PrevOccupiedArea, class UClass* CurrentOccupiedArea)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerEnvironmentInteractionComponent.OnOccupiedNavAreaChanged");

	UPlayerEnvironmentInteractionComponent_OnOccupiedNavAreaChanged_Params params;
	params.PrevOccupiedArea = PrevOccupiedArea;
	params.CurrentOccupiedArea = CurrentOccupiedArea;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerEnvironmentInteractionComponent.OnCombatStateChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bIsInCombat                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerEnvironmentInteractionComponent::STATIC_OnCombatStateChange(bool bIsInCombat, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerEnvironmentInteractionComponent.OnCombatStateChange");

	UPlayerEnvironmentInteractionComponent_OnCombatStateChange_Params params;
	params.bIsInCombat = bIsInCombat;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerHealthComponent.SurvivalModeUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bSurvivalMode                  (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerHealthComponent::STATIC_SurvivalModeUpdated(bool bSurvivalMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerHealthComponent.SurvivalModeUpdated");

	UPlayerHealthComponent_SurvivalModeUpdated_Params params;
	params.bSurvivalMode = bSurvivalMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerHealthComponent.PlayerWaitInitiated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          SecondsPassed                  (Parm, ZeroConstructor, IsPlainOldData)
// ERestType                      RestType                       (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerHealthComponent::STATIC_PlayerWaitInitiated(float SecondsPassed, ERestType RestType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerHealthComponent.PlayerWaitInitiated");

	UPlayerHealthComponent_PlayerWaitInitiated_Params params;
	params.SecondsPassed = SecondsPassed;
	params.RestType = RestType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerHealthComponent.GetThirst
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPlayerHealthComponent::GetThirst()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerHealthComponent.GetThirst");

	UPlayerHealthComponent_GetThirst_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.PlayerHealthComponent.GetMaxFastTravelThirst
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPlayerHealthComponent::GetMaxFastTravelThirst()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerHealthComponent.GetMaxFastTravelThirst");

	UPlayerHealthComponent_GetMaxFastTravelThirst_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.PlayerHealthComponent.GetMaxFastTravelHunger
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPlayerHealthComponent::GetMaxFastTravelHunger()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerHealthComponent.GetMaxFastTravelHunger");

	UPlayerHealthComponent_GetMaxFastTravelHunger_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.PlayerHealthComponent.GetMaxFastTravelExhaustion
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPlayerHealthComponent::GetMaxFastTravelExhaustion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerHealthComponent.GetMaxFastTravelExhaustion");

	UPlayerHealthComponent_GetMaxFastTravelExhaustion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.PlayerHealthComponent.GetLethalThirst
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPlayerHealthComponent::GetLethalThirst()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerHealthComponent.GetLethalThirst");

	UPlayerHealthComponent_GetLethalThirst_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.PlayerHealthComponent.GetLethalHunger
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPlayerHealthComponent::GetLethalHunger()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerHealthComponent.GetLethalHunger");

	UPlayerHealthComponent_GetLethalHunger_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.PlayerHealthComponent.GetLethalExhaustion
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPlayerHealthComponent::GetLethalExhaustion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerHealthComponent.GetLethalExhaustion");

	UPlayerHealthComponent_GetLethalExhaustion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.PlayerHealthComponent.GetHunger
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPlayerHealthComponent::GetHunger()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerHealthComponent.GetHunger");

	UPlayerHealthComponent_GetHunger_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.PlayerHealthComponent.GetExhaustion
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UPlayerHealthComponent::GetExhaustion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerHealthComponent.GetExhaustion");

	UPlayerHealthComponent_GetExhaustion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.PlayerHealthComponent.FastTravelInitiated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UTravelDestinationData*  TravelData                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          TimePassed                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bTravelFromMapLedger           (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerHealthComponent::STATIC_FastTravelInitiated(class UTravelDestinationData* TravelData, float TimePassed, bool bTravelFromMapLedger)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerHealthComponent.FastTravelInitiated");

	UPlayerHealthComponent_FastTravelInitiated_Params params;
	params.TravelData = TravelData;
	params.TimePassed = TimePassed;
	params.bTravelFromMapLedger = bTravelFromMapLedger;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerHealthComponent.AdjustThirst
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Amount                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromFastTravel                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bTravelFromMapLedger           (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerHealthComponent::STATIC_AdjustThirst(float Amount, bool bFromFastTravel, bool bTravelFromMapLedger)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerHealthComponent.AdjustThirst");

	UPlayerHealthComponent_AdjustThirst_Params params;
	params.Amount = Amount;
	params.bFromFastTravel = bFromFastTravel;
	params.bTravelFromMapLedger = bTravelFromMapLedger;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerHealthComponent.AdjustSurvivalStats
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          HungerGained                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ThirstGained                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ExhaustionGained               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromFastTravel                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bTravelFromMapLedger           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bForced                        (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerHealthComponent::STATIC_AdjustSurvivalStats(float HungerGained, float ThirstGained, float ExhaustionGained, bool bFromFastTravel, bool bTravelFromMapLedger, bool bForced)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerHealthComponent.AdjustSurvivalStats");

	UPlayerHealthComponent_AdjustSurvivalStats_Params params;
	params.HungerGained = HungerGained;
	params.ThirstGained = ThirstGained;
	params.ExhaustionGained = ExhaustionGained;
	params.bFromFastTravel = bFromFastTravel;
	params.bTravelFromMapLedger = bTravelFromMapLedger;
	params.bForced = bForced;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerHealthComponent.AdjustHunger
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Amount                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromFastTravel                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bTravelFromMapLedger           (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerHealthComponent::STATIC_AdjustHunger(float Amount, bool bFromFastTravel, bool bTravelFromMapLedger)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerHealthComponent.AdjustHunger");

	UPlayerHealthComponent_AdjustHunger_Params params;
	params.Amount = Amount;
	params.bFromFastTravel = bFromFastTravel;
	params.bTravelFromMapLedger = bTravelFromMapLedger;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerHealthComponent.AdjustExhaustion
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Amount                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromFastTravel                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bTravelFromMapLedger           (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerHealthComponent::STATIC_AdjustExhaustion(float Amount, bool bFromFastTravel, bool bTravelFromMapLedger)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerHealthComponent.AdjustExhaustion");

	UPlayerHealthComponent_AdjustExhaustion_Params params;
	params.Amount = Amount;
	params.bFromFastTravel = bFromFastTravel;
	params.bTravelFromMapLedger = bTravelFromMapLedger;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerHealthComponent.AddThirst
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Thirst                         (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerHealthComponent::STATIC_AddThirst(float Thirst)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerHealthComponent.AddThirst");

	UPlayerHealthComponent_AddThirst_Params params;
	params.Thirst = Thirst;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerHealthComponent.AddHunger
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Hunger                         (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerHealthComponent::STATIC_AddHunger(float Hunger)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerHealthComponent.AddHunger");

	UPlayerHealthComponent_AddHunger_Params params;
	params.Hunger = Hunger;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerHealthComponent.AddExhaustion
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Exhaustion                     (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerHealthComponent::STATIC_AddExhaustion(float Exhaustion)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerHealthComponent.AddExhaustion");

	UPlayerHealthComponent_AddExhaustion_Params params;
	params.Exhaustion = Exhaustion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInfoComponent.StopCurrentAudioLog
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UPlayerInfoComponent::STATIC_StopCurrentAudioLog()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInfoComponent.StopCurrentAudioLog");

	UPlayerInfoComponent_StopCurrentAudioLog_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInfoComponent.SetGenderDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EGender                        GenderIn                       (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerInfoComponent::STATIC_SetGenderDebug(EGender GenderIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInfoComponent.SetGenderDebug");

	UPlayerInfoComponent_SetGenderDebug_Params params;
	params.GenderIn = GenderIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInfoComponent.SetFlawAsOfferable
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UClass*                  Flaw                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          OfferChance                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIgnoreTimer                   (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerInfoComponent::STATIC_SetFlawAsOfferable(class UClass* Flaw, float OfferChance, bool bIgnoreTimer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInfoComponent.SetFlawAsOfferable");

	UPlayerInfoComponent_SetFlawAsOfferable_Params params;
	params.Flaw = Flaw;
	params.OfferChance = OfferChance;
	params.bIgnoreTimer = bIgnoreTimer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInfoComponent.SetAptitudeDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  AptitudeName                   (Parm, ZeroConstructor)

void UPlayerInfoComponent::STATIC_SetAptitudeDebug(const class FString& AptitudeName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInfoComponent.SetAptitudeDebug");

	UPlayerInfoComponent_SetAptitudeDebug_Params params;
	params.AptitudeName = AptitudeName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInfoComponent.ResumeCurrentAudioLog
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UPlayerInfoComponent::STATIC_ResumeCurrentAudioLog()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInfoComponent.ResumeCurrentAudioLog");

	UPlayerInfoComponent_ResumeCurrentAudioLog_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInfoComponent.RespecSkillPoints
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UPlayerInfoComponent::STATIC_RespecSkillPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInfoComponent.RespecSkillPoints");

	UPlayerInfoComponent_RespecSkillPoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInfoComponent.RespecPerks
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bNoCost                        (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerInfoComponent::STATIC_RespecPerks(bool bNoCost)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInfoComponent.RespecPerks");

	UPlayerInfoComponent_RespecPerks_Params params;
	params.bNoCost = bNoCost;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInfoComponent.ResetQuest
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  QuestName                      (Parm, ZeroConstructor)
// TArray<int>                    ResetEventIDs                  (Parm, ZeroConstructor)

void UPlayerInfoComponent::STATIC_ResetQuest(const class FString& QuestName, TArray<int> ResetEventIDs)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInfoComponent.ResetQuest");

	UPlayerInfoComponent_ResetQuest_Params params;
	params.QuestName = QuestName;
	params.ResetEventIDs = ResetEventIDs;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInfoComponent.ResetFlawOfferTimer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UPlayerInfoComponent::STATIC_ResetFlawOfferTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInfoComponent.ResetFlawOfferTimer");

	UPlayerInfoComponent_ResetFlawOfferTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInfoComponent.QuestTriggerAddendum
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  QuestName                      (Parm, ZeroConstructor)
// int                            AddendumNode                   (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerInfoComponent::STATIC_QuestTriggerAddendum(const class FString& QuestName, int AddendumNode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInfoComponent.QuestTriggerAddendum");

	UPlayerInfoComponent_QuestTriggerAddendum_Params params;
	params.QuestName = QuestName;
	params.AddendumNode = AddendumNode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInfoComponent.QuestStart
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  QuestName                      (Parm, ZeroConstructor)

void UPlayerInfoComponent::STATIC_QuestStart(const class FString& QuestName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInfoComponent.QuestStart");

	UPlayerInfoComponent_QuestStart_Params params;
	params.QuestName = QuestName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInfoComponent.QuestListAll
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UPlayerInfoComponent::STATIC_QuestListAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInfoComponent.QuestListAll");

	UPlayerInfoComponent_QuestListAll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInfoComponent.QuestFail
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  QuestName                      (Parm, ZeroConstructor)

void UPlayerInfoComponent::STATIC_QuestFail(const class FString& QuestName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInfoComponent.QuestFail");

	UPlayerInfoComponent_QuestFail_Params params;
	params.QuestName = QuestName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInfoComponent.QuestComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  QuestName                      (Parm, ZeroConstructor)

void UPlayerInfoComponent::STATIC_QuestComplete(const class FString& QuestName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInfoComponent.QuestComplete");

	UPlayerInfoComponent_QuestComplete_Params params;
	params.QuestName = QuestName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInfoComponent.PlayAudioLog
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            AudioLogIndex                  (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerInfoComponent::STATIC_PlayAudioLog(int AudioLogIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInfoComponent.PlayAudioLog");

	UPlayerInfoComponent_PlayAudioLog_Params params;
	params.AudioLogIndex = AudioLogIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInfoComponent.PauseCurrentAudioLog
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UPlayerInfoComponent::STATIC_PauseCurrentAudioLog()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInfoComponent.PauseCurrentAudioLog");

	UPlayerInfoComponent_PauseCurrentAudioLog_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInfoComponent.OnCombatStateChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bInCombat                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerInfoComponent::STATIC_OnCombatStateChanged(bool bInCombat, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInfoComponent.OnCombatStateChanged");

	UPlayerInfoComponent_OnCombatStateChanged_Params params;
	params.bInCombat = bInCombat;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInfoComponent.IsPlayingAudioLog
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPlayerInfoComponent::IsPlayingAudioLog()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInfoComponent.IsPlayingAudioLog");

	UPlayerInfoComponent_IsPlayingAudioLog_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.PlayerInfoComponent.FlawOfferRejectDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UPlayerInfoComponent::STATIC_FlawOfferRejectDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInfoComponent.FlawOfferRejectDebug");

	UPlayerInfoComponent_FlawOfferRejectDebug_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInfoComponent.FlawOfferDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  FlawName                       (Parm, ZeroConstructor)

void UPlayerInfoComponent::STATIC_FlawOfferDebug(const class FString& FlawName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInfoComponent.FlawOfferDebug");

	UPlayerInfoComponent_FlawOfferDebug_Params params;
	params.FlawName = FlawName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInfoComponent.FlawOfferAcceptDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UPlayerInfoComponent::STATIC_FlawOfferAcceptDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInfoComponent.FlawOfferAcceptDebug");

	UPlayerInfoComponent_FlawOfferAcceptDebug_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInfoComponent.FlawClearOfferDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UPlayerInfoComponent::STATIC_FlawClearOfferDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInfoComponent.FlawClearOfferDebug");

	UPlayerInfoComponent_FlawClearOfferDebug_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInfoComponent.FlawClearDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  FlawName                       (Parm, ZeroConstructor)

void UPlayerInfoComponent::STATIC_FlawClearDebug(const class FString& FlawName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInfoComponent.FlawClearDebug");

	UPlayerInfoComponent_FlawClearDebug_Params params;
	params.FlawName = FlawName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInfoComponent.FlawAddDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  FlawName                       (Parm, ZeroConstructor)

void UPlayerInfoComponent::STATIC_FlawAddDebug(const class FString& FlawName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInfoComponent.FlawAddDebug");

	UPlayerInfoComponent_FlawAddDebug_Params params;
	params.FlawName = FlawName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInfoComponent.EnableFlawOffers
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UPlayerInfoComponent::STATIC_EnableFlawOffers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInfoComponent.EnableFlawOffers");

	UPlayerInfoComponent_EnableFlawOffers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInfoComponent.DisableFlawOffers
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UPlayerInfoComponent::STATIC_DisableFlawOffers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInfoComponent.DisableFlawOffers");

	UPlayerInfoComponent_DisableFlawOffers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInfoComponent.AddXPDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            XP                             (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerInfoComponent::STATIC_AddXPDebug(int XP)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInfoComponent.AddXPDebug");

	UPlayerInfoComponent_AddXPDebug_Params params;
	params.XP = XP;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInfoComponent.AddAudioLog
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FAudioLogDefinition     AudioLogDefinition             (Parm, OutParm)

void UPlayerInfoComponent::STATIC_AddAudioLog(struct FAudioLogDefinition* AudioLogDefinition)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInfoComponent.AddAudioLog");

	UPlayerInfoComponent_AddAudioLog_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (AudioLogDefinition != nullptr)
		*AudioLogDefinition = params.AudioLogDefinition;
}


// Function Indiana.PlayerInteractionComponent.OnHUDVisibilityChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerInteractionComponent::STATIC_OnHUDVisibilityChanged(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInteractionComponent.OnHUDVisibilityChanged");

	UPlayerInteractionComponent_OnHUDVisibilityChanged_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInteractionComponent.OnHighlightModeChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerInteractionComponent::STATIC_OnHighlightModeChanged(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInteractionComponent.OnHighlightModeChanged");

	UPlayerInteractionComponent_OnHighlightModeChanged_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInteractionComponent.OnDiscrepencyAmplifierActivated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bActivated                     (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerInteractionComponent::STATIC_OnDiscrepencyAmplifierActivated(bool bActivated)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInteractionComponent.OnDiscrepencyAmplifierActivated");

	UPlayerInteractionComponent_OnDiscrepencyAmplifierActivated_Params params;
	params.bActivated = bActivated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInventoryComponent.VendorRepairItemDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   ItemName                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UPlayerInventoryComponent::STATIC_VendorRepairItemDebug(const struct FName& ItemName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInventoryComponent.VendorRepairItemDebug");

	UPlayerInventoryComponent_VendorRepairItemDebug_Params params;
	params.ItemName = ItemName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInventoryComponent.SetWeaponHealthDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Percent                        (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerInventoryComponent::STATIC_SetWeaponHealthDebug(float Percent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInventoryComponent.SetWeaponHealthDebug");

	UPlayerInventoryComponent_SetWeaponHealthDebug_Params params;
	params.Percent = Percent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInventoryComponent.SetItemHealthDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   ItemName                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float                          Percent                        (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerInventoryComponent::STATIC_SetItemHealthDebug(const struct FName& ItemName, float Percent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInventoryComponent.SetItemHealthDebug");

	UPlayerInventoryComponent_SetItemHealthDebug_Params params;
	params.ItemName = ItemName;
	params.Percent = Percent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInventoryComponent.SetHelmetHealthDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Percent                        (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerInventoryComponent::STATIC_SetHelmetHealthDebug(float Percent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInventoryComponent.SetHelmetHealthDebug");

	UPlayerInventoryComponent_SetHelmetHealthDebug_Params params;
	params.Percent = Percent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInventoryComponent.SetArmorHealthDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Percent                        (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerInventoryComponent::STATIC_SetArmorHealthDebug(float Percent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInventoryComponent.SetArmorHealthDebug");

	UPlayerInventoryComponent_SetArmorHealthDebug_Params params;
	params.Percent = Percent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInventoryComponent.RepairItemDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   ItemName                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           bFieldRepair                   (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerInventoryComponent::STATIC_RepairItemDebug(const struct FName& ItemName, bool bFieldRepair)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInventoryComponent.RepairItemDebug");

	UPlayerInventoryComponent_RepairItemDebug_Params params;
	params.ItemName = ItemName;
	params.bFieldRepair = bFieldRepair;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInventoryComponent.OnStatUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class URpgStat*                Stat                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UPlayerInventoryComponent::STATIC_OnStatUpdated(class URpgStat* Stat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInventoryComponent.OnStatUpdated");

	UPlayerInventoryComponent_OnStatUpdated_Params params;
	params.Stat = Stat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInventoryComponent.OnCompanionRegistered
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaAiCharacter*     Character                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAdded                         (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerInventoryComponent::STATIC_OnCompanionRegistered(class AIndianaAiCharacter* Character, bool bAdded)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInventoryComponent.OnCompanionRegistered");

	UPlayerInventoryComponent_OnCompanionRegistered_Params params;
	params.Character = Character;
	params.bAdded = bAdded;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInventoryComponent.IgnoreEncumbrance
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bIgnored                       (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerInventoryComponent::STATIC_IgnoreEncumbrance(bool bIgnored)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInventoryComponent.IgnoreEncumbrance");

	UPlayerInventoryComponent_IgnoreEncumbrance_Params params;
	params.bIgnored = bIgnored;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInventoryComponent.GiveTools
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UPlayerInventoryComponent::STATIC_GiveTools()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInventoryComponent.GiveTools");

	UPlayerInventoryComponent_GiveTools_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerInventoryComponent.BreakDownItemDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   ItemName                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           bFieldBreakdown                (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerInventoryComponent::STATIC_BreakDownItemDebug(const struct FName& ItemName, bool bFieldBreakdown)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerInventoryComponent.BreakDownItemDebug");

	UPlayerInventoryComponent_BreakDownItemDebug_Params params;
	params.ItemName = ItemName;
	params.bFieldBreakdown = bFieldBreakdown;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerMovementComponent.OnUnlockAbilityChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EUnlockAbility                 Ability                        (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerMovementComponent::STATIC_OnUnlockAbilityChanged(EUnlockAbility Ability)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerMovementComponent.OnUnlockAbilityChanged");

	UPlayerMovementComponent_OnUnlockAbilityChanged_Params params;
	params.Ability = Ability;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerMovementComponent.OnTakeFallingDamage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          FallingDamage                  (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerMovementComponent::STATIC_OnTakeFallingDamage(float FallingDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerMovementComponent.OnTakeFallingDamage");

	UPlayerMovementComponent_OnTakeFallingDamage_Params params;
	params.FallingDamage = FallingDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerMovementComponent.ControllerSensitivityUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          SensitivityIn                  (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerMovementComponent::STATIC_ControllerSensitivityUpdated(float SensitivityIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerMovementComponent.ControllerSensitivityUpdated");

	UPlayerMovementComponent_ControllerSensitivityUpdated_Params params;
	params.SensitivityIn = SensitivityIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerMovementComponent.ControllerADSSensitivityUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          SensititivityIn                (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerMovementComponent::STATIC_ControllerADSSensitivityUpdated(float SensititivityIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerMovementComponent.ControllerADSSensitivityUpdated");

	UPlayerMovementComponent_ControllerADSSensitivityUpdated_Params params;
	params.SensititivityIn = SensititivityIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerMovementComponent.AcrophobiaEnableDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerMovementComponent::STATIC_AcrophobiaEnableDebug(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerMovementComponent.AcrophobiaEnableDebug");

	UPlayerMovementComponent_AcrophobiaEnableDebug_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerShoutComponent.OnCombatStateChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bIsInCombat                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerShoutComponent::STATIC_OnCombatStateChange(bool bIsInCombat, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerShoutComponent.OnCombatStateChange");

	UPlayerShoutComponent_OnCombatStateChange_Params params;
	params.bIsInCombat = bIsInCombat;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerStatsWidget.SetXPRatio
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          XPRatio                        (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerStatsWidget::STATIC_SetXPRatio(float XPRatio)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerStatsWidget.SetXPRatio");

	UPlayerStatsWidget_SetXPRatio_Params params;
	params.XPRatio = XPRatio;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerStatsWidget.OnPlayerWeightChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UPlayerStatsWidget::STATIC_OnPlayerWeightChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerStatsWidget.OnPlayerWeightChange");

	UPlayerStatsWidget_OnPlayerWeightChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerStatsWidget.OnLevelChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            NewLevel                       (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerStatsWidget::STATIC_OnLevelChanged(int NewLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerStatsWidget.OnLevelChanged");

	UPlayerStatsWidget_OnLevelChanged_Params params;
	params.NewLevel = NewLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerStatsWidget.OnItemPartsChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            WeaponParts                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            ArmorParts                     (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerStatsWidget::STATIC_OnItemPartsChanged(int WeaponParts, int ArmorParts)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerStatsWidget.OnItemPartsChanged");

	UPlayerStatsWidget_OnItemPartsChanged_Params params;
	params.WeaponParts = WeaponParts;
	params.ArmorParts = ArmorParts;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerStatsWidget.OnItemEquipped
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UItem*                   ItemEquipped                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UPlayerStatsWidget::STATIC_OnItemEquipped(class UItem* ItemEquipped)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerStatsWidget.OnItemEquipped");

	UPlayerStatsWidget_OnItemEquipped_Params params;
	params.ItemEquipped = ItemEquipped;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerTargetingComponent.KillTarget
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UPlayerTargetingComponent::STATIC_KillTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerTargetingComponent.KillTarget");

	UPlayerTargetingComponent_KillTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PlayerTargetingComponent.DrawPlayerTargetingTrace
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          PersistTime                    (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerTargetingComponent::STATIC_DrawPlayerTargetingTrace(float PersistTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PlayerTargetingComponent.DrawPlayerTargetingTrace");

	UPlayerTargetingComponent_DrawPlayerTargetingTrace_Params params;
	params.PersistTime = PersistTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PointOfInterest.OnBeginOverlap
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  OverlappedActor                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)

void APointOfInterest::STATIC_OnBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PointOfInterest.OnBeginOverlap");

	APointOfInterest_OnBeginOverlap_Params params;
	params.OverlappedActor = OverlappedActor;
	params.OtherActor = OtherActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PointOfNoReturnRollbackData.FixQuestsBP
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UPointOfNoReturnRollbackData::STATIC_FixQuestsBP()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PointOfNoReturnRollbackData.FixQuestsBP");

	UPointOfNoReturnRollbackData_FixQuestsBP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PointOfNoReturnRollbackData.FixItemsBP
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UPointOfNoReturnRollbackData::STATIC_FixItemsBP()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PointOfNoReturnRollbackData.FixItemsBP");

	UPointOfNoReturnRollbackData_FixItemsBP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PointOfNoReturnRollbackData.FixGlobalVarsBP
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UPointOfNoReturnRollbackData::STATIC_FixGlobalVarsBP()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PointOfNoReturnRollbackData.FixGlobalVarsBP");

	UPointOfNoReturnRollbackData_FixGlobalVarsBP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.PointOfNoReturnRollbackData.FixConversationsBP
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UPointOfNoReturnRollbackData::STATIC_FixConversationsBP()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.PointOfNoReturnRollbackData.FixConversationsBP");

	UPointOfNoReturnRollbackData_FixConversationsBP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Projectile.OnHit
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UPrimitiveComponent*     HitComp                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AProjectile::STATIC_OnHit(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Projectile.OnHit");

	AProjectile_OnHit_Params params;
	params.HitComp = HitComp;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Projectile.OnDamageEndOverlap
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void AProjectile::STATIC_OnDamageEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Projectile.OnDamageEndOverlap");

	AProjectile_OnDamageEndOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Projectile.OnDamageBeginOverlap
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AProjectile::STATIC_OnDamageBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Projectile.OnDamageBeginOverlap");

	AProjectile_OnDamageBeginOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Projectile.OnBounce
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FHitResult              ImpactResult                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 ImpactVelocity                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AProjectile::STATIC_OnBounce(const struct FHitResult& ImpactResult, const struct FVector& ImpactVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Projectile.OnBounce");

	AProjectile_OnBounce_Params params;
	params.ImpactResult = ImpactResult;
	params.ImpactVelocity = ImpactVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Projectile.GetOverlapCollisionSize
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AProjectile::GetOverlapCollisionSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Projectile.GetOverlapCollisionSize");

	AProjectile_GetOverlapCollisionSize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Projectile.GetCollisionSize
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AProjectile::GetCollisionSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Projectile.GetCollisionSize");

	AProjectile_GetCollisionSize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Projectile.GetChargeAmount
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AProjectile::GetChargeAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Projectile.GetChargeAmount");

	AProjectile_GetChargeAmount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.QuestAddendumWidget.OnObjectiveStatusChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ECompletionStatus              ObjectiveCompletion            (Parm, ZeroConstructor, IsPlainOldData)

void UQuestAddendumWidget::STATIC_OnObjectiveStatusChange(ECompletionStatus ObjectiveCompletion)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestAddendumWidget.OnObjectiveStatusChange");

	UQuestAddendumWidget_OnObjectiveStatusChange_Params params;
	params.ObjectiveCompletion = ObjectiveCompletion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.QuestJournalWidget.OnQuestImageLoaded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UQuestJournalWidget::STATIC_OnQuestImageLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestJournalWidget.OnQuestImageLoaded");

	UQuestJournalWidget_OnQuestImageLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.QuestListEntryWidget.SetQuestCompletionStatus
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EQuestState                    QuestState                     (Parm, ZeroConstructor, IsPlainOldData)

void UQuestListEntryWidget::STATIC_SetQuestCompletionStatus(EQuestState QuestState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestListEntryWidget.SetQuestCompletionStatus");

	UQuestListEntryWidget_SetQuestCompletionStatus_Params params;
	params.QuestState = QuestState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.QuestListEntryWidget.SetActiveQuest
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bActive                        (Parm, ZeroConstructor, IsPlainOldData)

void UQuestListEntryWidget::STATIC_SetActiveQuest(bool bActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestListEntryWidget.SetActiveQuest");

	UQuestListEntryWidget_SetActiveQuest_Params params;
	params.bActive = bActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.QuestLogComboBoxWidget.OnValueChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  SelectedItem                   (Parm, ZeroConstructor)
// TEnumAsByte<ESelectInfo>       SelectionType                  (Parm, ZeroConstructor, IsPlainOldData)

void UQuestLogComboBoxWidget::STATIC_OnValueChanged(const class FString& SelectedItem, TEnumAsByte<ESelectInfo> SelectionType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestLogComboBoxWidget.OnValueChanged");

	UQuestLogComboBoxWidget_OnValueChanged_Params params;
	params.SelectedItem = SelectedItem;
	params.SelectionType = SelectionType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.QuestLogComboBoxWidget.OnSortOptionIncrement
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UQuestLogComboBoxWidget::STATIC_OnSortOptionIncrement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestLogComboBoxWidget.OnSortOptionIncrement");

	UQuestLogComboBoxWidget_OnSortOptionIncrement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.QuestLogEntryWidget.OnQuestUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UQuestLogEntryWidget::STATIC_OnQuestUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestLogEntryWidget.OnQuestUpdated");

	UQuestLogEntryWidget_OnQuestUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.QuestLogEntryWidget.OnQuestTextFadeOutComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UQuestLogEntryWidget::STATIC_OnQuestTextFadeOutComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestLogEntryWidget.OnQuestTextFadeOutComplete");

	UQuestLogEntryWidget_OnQuestTextFadeOutComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.QuestLogEntryWidget.OnQuestTextFadeInComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UQuestLogEntryWidget::STATIC_OnQuestTextFadeInComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestLogEntryWidget.OnQuestTextFadeInComplete");

	UQuestLogEntryWidget_OnQuestTextFadeInComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.QuestLogEntryWidget.OnQuestFailed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UQuestLogEntryWidget::STATIC_OnQuestFailed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestLogEntryWidget.OnQuestFailed");

	UQuestLogEntryWidget_OnQuestFailed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.QuestLogEntryWidget.OnQuestCompleted
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UQuestLogEntryWidget::STATIC_OnQuestCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestLogEntryWidget.OnQuestCompleted");

	UQuestLogEntryWidget_OnQuestCompleted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.QuestLogEntryWidget.OnQuestAnimationStartOrUpdateComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UQuestLogEntryWidget::STATIC_OnQuestAnimationStartOrUpdateComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestLogEntryWidget.OnQuestAnimationStartOrUpdateComplete");

	UQuestLogEntryWidget_OnQuestAnimationStartOrUpdateComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.QuestLogEntryWidget.OnQuestAnimationFinishedComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UQuestLogEntryWidget::STATIC_OnQuestAnimationFinishedComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestLogEntryWidget.OnQuestAnimationFinishedComplete");

	UQuestLogEntryWidget_OnQuestAnimationFinishedComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.QuestLogEntryWidget.FadeOutQuestText
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UQuestLogEntryWidget::STATIC_FadeOutQuestText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestLogEntryWidget.FadeOutQuestText");

	UQuestLogEntryWidget_FadeOutQuestText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.QuestLogEntryWidget.FadeInQuestText
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UQuestLogEntryWidget::STATIC_FadeInQuestText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestLogEntryWidget.FadeInQuestText");

	UQuestLogEntryWidget_FadeInQuestText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.QuestLogWidget.OnQuestUpdateModeChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UQuestLogWidget::STATIC_OnQuestUpdateModeChanged(int ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestLogWidget.OnQuestUpdateModeChanged");

	UQuestLogWidget_OnQuestUpdateModeChanged_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.QuestLogWidget.OnHUDVisibilityChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisibleIn                     (Parm, ZeroConstructor, IsPlainOldData)

void UQuestLogWidget::STATIC_OnHUDVisibilityChanged(bool bVisibleIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestLogWidget.OnHUDVisibilityChanged");

	UQuestLogWidget_OnHUDVisibilityChanged_Params params;
	params.bVisibleIn = bVisibleIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.QuestLogWidget.OnFadeOutComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UQuestLogWidget::STATIC_OnFadeOutComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestLogWidget.OnFadeOutComplete");

	UQuestLogWidget_OnFadeOutComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.QuestLogWidget.OnFadeInComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UQuestLogWidget::STATIC_OnFadeInComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestLogWidget.OnFadeInComplete");

	UQuestLogWidget_OnFadeInComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.QuestLogWidget.FadeOutContents
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UQuestLogWidget::STATIC_FadeOutContents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestLogWidget.FadeOutContents");

	UQuestLogWidget_FadeOutContents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.QuestLogWidget.FadeInContents
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UQuestLogWidget::STATIC_FadeInContents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestLogWidget.FadeInContents");

	UQuestLogWidget_FadeInContents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.QuestObjectiveEntryWidget.StartFailAnim
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UQuestObjectiveEntryWidget::STATIC_StartFailAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestObjectiveEntryWidget.StartFailAnim");

	UQuestObjectiveEntryWidget_StartFailAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.QuestObjectiveEntryWidget.StartCompleteAnim
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UQuestObjectiveEntryWidget::STATIC_StartCompleteAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestObjectiveEntryWidget.StartCompleteAnim");

	UQuestObjectiveEntryWidget_StartCompleteAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.QuestObjectiveEntryWidget.OnOutroComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UQuestObjectiveEntryWidget::STATIC_OnOutroComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestObjectiveEntryWidget.OnOutroComplete");

	UQuestObjectiveEntryWidget_OnOutroComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.QuestObjectiveEntryWidget.OnObjectiveUpdateAnimComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UQuestObjectiveEntryWidget::STATIC_OnObjectiveUpdateAnimComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestObjectiveEntryWidget.OnObjectiveUpdateAnimComplete");

	UQuestObjectiveEntryWidget_OnObjectiveUpdateAnimComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.QuestObjectiveEntryWidget.OnObjectiveMadeInactive
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UQuestObjectiveEntryWidget::STATIC_OnObjectiveMadeInactive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestObjectiveEntryWidget.OnObjectiveMadeInactive");

	UQuestObjectiveEntryWidget_OnObjectiveMadeInactive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.QuestObjectiveEntryWidget.OnObjectiveMadeActive
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UQuestObjectiveEntryWidget::STATIC_OnObjectiveMadeActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestObjectiveEntryWidget.OnObjectiveMadeActive");

	UQuestObjectiveEntryWidget_OnObjectiveMadeActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.QuestObjectiveEntryWidget.OnIntroComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UQuestObjectiveEntryWidget::STATIC_OnIntroComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestObjectiveEntryWidget.OnIntroComplete");

	UQuestObjectiveEntryWidget_OnIntroComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.QuestObjectiveTitleWidget.OnObjectiveStatusChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ECompletionStatus              ObjectiveStatus                (Parm, ZeroConstructor, IsPlainOldData)

void UQuestObjectiveTitleWidget::STATIC_OnObjectiveStatusChange(ECompletionStatus ObjectiveStatus)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestObjectiveTitleWidget.OnObjectiveStatusChange");

	UQuestObjectiveTitleWidget_OnObjectiveStatusChange_Params params;
	params.ObjectiveStatus = ObjectiveStatus;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.QuestObjectiveWidget.OnObjectiveStatusChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ECompletionStatus              ObjectiveStatus                (Parm, ZeroConstructor, IsPlainOldData)

void UQuestObjectiveWidget::STATIC_OnObjectiveStatusChange(ECompletionStatus ObjectiveStatus)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.QuestObjectiveWidget.OnObjectiveStatusChange");

	UQuestObjectiveWidget_OnObjectiveStatusChange_Params params;
	params.ObjectiveStatus = ObjectiveStatus;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.RadialContextMenuWidget.OnRadialMenuSelection
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void URadialContextMenuWidget::STATIC_OnRadialMenuSelection(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.RadialContextMenuWidget.OnRadialMenuSelection");

	URadialContextMenuWidget_OnRadialMenuSelection_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.RadialWidget.OnSectionConfirmedAux
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void URadialWidget::STATIC_OnSectionConfirmedAux()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.RadialWidget.OnSectionConfirmedAux");

	URadialWidget_OnSectionConfirmedAux_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.RadialWidget.OnSectionConfirmed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void URadialWidget::STATIC_OnSectionConfirmed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.RadialWidget.OnSectionConfirmed");

	URadialWidget_OnSectionConfirmed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.RadialWidget.OnRadialScroll
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void URadialWidget::STATIC_OnRadialScroll(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.RadialWidget.OnRadialScroll");

	URadialWidget_OnRadialScroll_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ReactionComponent.TriggerDebugCameraShake
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Strength                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          X                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Y                              (Parm, ZeroConstructor, IsPlainOldData)

void UReactionComponent::STATIC_TriggerDebugCameraShake(float Strength, float X, float Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ReactionComponent.TriggerDebugCameraShake");

	UReactionComponent_TriggerDebugCameraShake_Params params;
	params.Strength = Strength;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ReactionComponent.OnTakeDamage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FCauseDamageInfo        CDI                            (ConstParm, Parm, OutParm, ReferenceParm)

void UReactionComponent::STATIC_OnTakeDamage(const struct FCauseDamageInfo& CDI)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ReactionComponent.OnTakeDamage");

	UReactionComponent_OnTakeDamage_Params params;
	params.CDI = CDI;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ReputationSummaryWidget.RemoveReputationBackgroundOnMinimize
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UReputationSummaryWidget::STATIC_RemoveReputationBackgroundOnMinimize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ReputationSummaryWidget.RemoveReputationBackgroundOnMinimize");

	UReputationSummaryWidget_RemoveReputationBackgroundOnMinimize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ReputationSummaryWidget.OnFactionReputationChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UFactionData*            FactionData                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// EReputationType                ReputationType                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData)
// class UReputationData*         ReputationBefore               (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UReputationData*         ReputationAfter                (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UReputationSummaryWidget::STATIC_OnFactionReputationChanged(class UFactionData* FactionData, EReputationType ReputationType, int Amount, class UReputationData* ReputationBefore, class UReputationData* ReputationAfter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ReputationSummaryWidget.OnFactionReputationChanged");

	UReputationSummaryWidget_OnFactionReputationChanged_Params params;
	params.FactionData = FactionData;
	params.ReputationType = ReputationType;
	params.Amount = Amount;
	params.ReputationBefore = ReputationBefore;
	params.ReputationAfter = ReputationAfter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ReputationSummaryWidget.InitReputationBackgroundOnMaximize
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UReputationSummaryWidget::STATIC_InitReputationBackgroundOnMaximize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ReputationSummaryWidget.InitReputationBackgroundOnMaximize");

	UReputationSummaryWidget_InitReputationBackgroundOnMaximize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.RestrictedArea.IsEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ARestrictedArea::IsEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.RestrictedArea.IsEnabled");

	ARestrictedArea_IsEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.ReticleWidget.ShrinkTTDRotator
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UReticleWidget::STATIC_ShrinkTTDRotator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ReticleWidget.ShrinkTTDRotator");

	UReticleWidget_ShrinkTTDRotator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ReticleWidget.SetTTDProgressRatio
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          NewTTDRatio                    (Parm, ZeroConstructor, IsPlainOldData)

void UReticleWidget::STATIC_SetTTDProgressRatio(float NewTTDRatio)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ReticleWidget.SetTTDProgressRatio");

	UReticleWidget_SetTTDProgressRatio_Params params;
	params.NewTTDRatio = NewTTDRatio;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ReticleWidget.OnTTDTargetLost
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UReticleWidget::STATIC_OnTTDTargetLost()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ReticleWidget.OnTTDTargetLost");

	UReticleWidget_OnTTDTargetLost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ReticleWidget.OnTTDTargetAcquired
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UReticleWidget::STATIC_OnTTDTargetAcquired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ReticleWidget.OnTTDTargetAcquired");

	UReticleWidget_OnTTDTargetAcquired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ReticleWidget.OnTTDReticleMeterModeChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void UReticleWidget::STATIC_OnTTDReticleMeterModeChanged(int bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ReticleWidget.OnTTDReticleMeterModeChanged");

	UReticleWidget_OnTTDReticleMeterModeChanged_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ReticleWidget.OnReticleModeChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UReticleWidget::STATIC_OnReticleModeChanged(int ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ReticleWidget.OnReticleModeChanged");

	UReticleWidget_OnReticleModeChanged_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ReticleWidget.OnHUDVisibilityChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void UReticleWidget::STATIC_OnHUDVisibilityChanged(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ReticleWidget.OnHUDVisibilityChanged");

	UReticleWidget_OnHUDVisibilityChanged_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ReticleWidget.OnCombatStateChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bCombatIn                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void UReticleWidget::STATIC_OnCombatStateChanged(bool bCombatIn, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ReticleWidget.OnCombatStateChanged");

	UReticleWidget_OnCombatStateChanged_Params params;
	params.bCombatIn = bCombatIn;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ReticleWidget.ExpandTTDRotator
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UReticleWidget::STATIC_ExpandTTDRotator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ReticleWidget.ExpandTTDRotator");

	UReticleWidget_ExpandTTDRotator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.RpgStatComponent.SetModifier
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UObject*                 SourceObject                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// int                            SourceId                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FStatModifierDescription StatModifier                   (ConstParm, Parm, OutParm, ReferenceParm)

void URpgStatComponent::STATIC_SetModifier(class UObject* SourceObject, int SourceId, const struct FStatModifierDescription& StatModifier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.RpgStatComponent.SetModifier");

	URpgStatComponent_SetModifier_Params params;
	params.SourceObject = SourceObject;
	params.SourceId = SourceId;
	params.StatModifier = StatModifier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.RpgStatComponent.RpgStatShowStat
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  Stat                           (Parm, ZeroConstructor)

void URpgStatComponent::STATIC_RpgStatShowStat(const class FString& Stat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.RpgStatComponent.RpgStatShowStat");

	URpgStatComponent_RpgStatShowStat_Params params;
	params.Stat = Stat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.RpgStatComponent.RpgStatShowAll
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void URpgStatComponent::STATIC_RpgStatShowAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.RpgStatComponent.RpgStatShowAll");

	URpgStatComponent_RpgStatShowAll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.RpgStatComponent.RpgStatRemoveModifierDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   Stat                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void URpgStatComponent::STATIC_RpgStatRemoveModifierDebug(const struct FName& Stat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.RpgStatComponent.RpgStatRemoveModifierDebug");

	URpgStatComponent_RpgStatRemoveModifierDebug_Params params;
	params.Stat = Stat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.RpgStatComponent.RpgStatAddModifierDebug
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   Stat                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void URpgStatComponent::STATIC_RpgStatAddModifierDebug(const struct FName& Stat, float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.RpgStatComponent.RpgStatAddModifierDebug");

	URpgStatComponent_RpgStatAddModifierDebug_Params params;
	params.Stat = Stat;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.RpgStatComponent.RemoveModifier
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UObject*                 SourceObject                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// int                            SourceId                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FStatModifierDescription StatModifier                   (ConstParm, Parm, OutParm, ReferenceParm)

void URpgStatComponent::STATIC_RemoveModifier(class UObject* SourceObject, int SourceId, const struct FStatModifierDescription& StatModifier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.RpgStatComponent.RemoveModifier");

	URpgStatComponent_RemoveModifier_Params params;
	params.SourceObject = SourceObject;
	params.SourceId = SourceId;
	params.StatModifier = StatModifier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.RpgStatComponent.OnCollectionStatUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class URpgStat*                Stat                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void URpgStatComponent::STATIC_OnCollectionStatUpdated(class URpgStat* Stat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.RpgStatComponent.OnCollectionStatUpdated");

	URpgStatComponent_OnCollectionStatUpdated_Params params;
	params.Stat = Stat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.RpgStatComponent.GetValue
// ()
// Parameters:
// class URpgStat*                Stat                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// ERpgStatGroupMask              StatGroupMask                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          InputValue                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float URpgStatComponent::GetValue(class URpgStat* Stat, ERpgStatGroupMask StatGroupMask, float InputValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.RpgStatComponent.GetValue");

	URpgStatComponent_GetValue_Params params;
	params.Stat = Stat;
	params.StatGroupMask = StatGroupMask;
	params.InputValue = InputValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.SaveGameManager.SaveUserGameSettings
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bSettingsPotentiallyChanged    (Parm, ZeroConstructor, IsPlainOldData)

void USaveGameManager::STATIC_SaveUserGameSettings(bool bSettingsPotentiallyChanged)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SaveGameManager.SaveUserGameSettings");

	USaveGameManager_SaveUserGameSettings_Params params;
	params.bSettingsPotentiallyChanged = bSettingsPotentiallyChanged;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SaveGameManager.SaveGame
// (RequiredAPI)
// Parameters:
// class FString                  Filename                       (Parm, ZeroConstructor)
// bool                           bIgnoreSuperNova               (Parm, ZeroConstructor, IsPlainOldData)
// ESaveGameType                  SaveGameType                   (Parm, ZeroConstructor, IsPlainOldData)
// ESaveGameResult                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ESaveGameResult USaveGameManager::SaveGame(const class FString& Filename, bool bIgnoreSuperNova, ESaveGameType SaveGameType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SaveGameManager.SaveGame");

	USaveGameManager_SaveGame_Params params;
	params.Filename = Filename;
	params.bIgnoreSuperNova = bIgnoreSuperNova;
	params.SaveGameType = SaveGameType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.SaveGameManager.RequestPostGameSave
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USaveGameManager::STATIC_RequestPostGameSave()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SaveGameManager.RequestPostGameSave");

	USaveGameManager_RequestPostGameSave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SaveGameManager.RequestPointOfNoReturnSave
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USaveGameManager::STATIC_RequestPointOfNoReturnSave()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SaveGameManager.RequestPointOfNoReturnSave");

	USaveGameManager_RequestPointOfNoReturnSave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SaveGameManager.RequestPointOfNoReturnRollbackSave
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USaveGameManager::STATIC_RequestPointOfNoReturnRollbackSave()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SaveGameManager.RequestPointOfNoReturnRollbackSave");

	USaveGameManager_RequestPointOfNoReturnRollbackSave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SaveGameManager.RequestBeforeSkipSave
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USaveGameManager::STATIC_RequestBeforeSkipSave()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SaveGameManager.RequestBeforeSkipSave");

	USaveGameManager_RequestBeforeSkipSave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SaveGameManager.RequestBeforeEVTransitionSave
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USaveGameManager::STATIC_RequestBeforeEVTransitionSave()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SaveGameManager.RequestBeforeEVTransitionSave");

	USaveGameManager_RequestBeforeEVTransitionSave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SaveGameManager.RequestAutosave
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bAllowOnSuperNova              (Parm, ZeroConstructor, IsPlainOldData)

void USaveGameManager::STATIC_RequestAutosave(bool bAllowOnSuperNova)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SaveGameManager.RequestAutosave");

	USaveGameManager_RequestAutosave_Params params;
	params.bAllowOnSuperNova = bAllowOnSuperNova;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SaveGameManager.Quicksave
// ()
// Parameters:
// ESaveGameResult                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ESaveGameResult USaveGameManager::Quicksave()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SaveGameManager.Quicksave");

	USaveGameManager_Quicksave_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.SaveGameManager.Quickload
// ()
// Parameters:
// ELoadGameResult                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ELoadGameResult USaveGameManager::Quickload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SaveGameManager.Quickload");

	USaveGameManager_Quickload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.SaveGameManager.PointOfNoReturnSave
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USaveGameManager::STATIC_PointOfNoReturnSave()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SaveGameManager.PointOfNoReturnSave");

	USaveGameManager_PointOfNoReturnSave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SaveGameManager.PointOfNoReturnRollbackSave
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USaveGameManager::STATIC_PointOfNoReturnRollbackSave()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SaveGameManager.PointOfNoReturnRollbackSave");

	USaveGameManager_PointOfNoReturnRollbackSave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SaveGameManager.OnPromptedSaveSaveMenuClosed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bForced                        (Parm, ZeroConstructor, IsPlainOldData)

void USaveGameManager::STATIC_OnPromptedSaveSaveMenuClosed(bool bForced)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SaveGameManager.OnPromptedSaveSaveMenuClosed");

	USaveGameManager_OnPromptedSaveSaveMenuClosed_Params params;
	params.bForced = bForced;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SaveGameManager.OnActorDestroyed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void USaveGameManager::STATIC_OnActorDestroyed(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SaveGameManager.OnActorDestroyed");

	USaveGameManager_OnActorDestroyed_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SaveGameManager.LoadUserGameSettings
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USaveGameManager::STATIC_LoadUserGameSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SaveGameManager.LoadUserGameSettings");

	USaveGameManager_LoadUserGameSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SaveGameManager.LoadGame
// (Final)
// Parameters:
// class FString                  Filename                       (Parm, ZeroConstructor)
// bool                           bPreValidateMetadata           (Parm, ZeroConstructor, IsPlainOldData)
// ELoadGameResult                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ELoadGameResult USaveGameManager::LoadGame(const class FString& Filename, bool bPreValidateMetadata)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SaveGameManager.LoadGame");

	USaveGameManager_LoadGame_Params params;
	params.Filename = Filename;
	params.bPreValidateMetadata = bPreValidateMetadata;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.SaveGameManager.EnsureSignIn
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USaveGameManager::EnsureSignIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SaveGameManager.EnsureSignIn");

	USaveGameManager_EnsureSignIn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.SaveGameManager.DisableSaves
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bDisable                       (Parm, ZeroConstructor, IsPlainOldData)

void USaveGameManager::STATIC_DisableSaves(bool bDisable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SaveGameManager.DisableSaves");

	USaveGameManager_DisableSaves_Params params;
	params.bDisable = bDisable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SaveGameManager.DeleteGame
// ()
// Parameters:
// class FString                  Filename                       (Parm, ZeroConstructor)
// EDeleteGameResult              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EDeleteGameResult USaveGameManager::DeleteGame(const class FString& Filename)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SaveGameManager.DeleteGame");

	USaveGameManager_DeleteGame_Params params;
	params.Filename = Filename;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.SaveGameManager.CheckCanSaveGame
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USaveGameManager::STATIC_CheckCanSaveGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SaveGameManager.CheckCanSaveGame");

	USaveGameManager_CheckCanSaveGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SaveGameManager.BeforeEVTransitionSave
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USaveGameManager::STATIC_BeforeEVTransitionSave()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SaveGameManager.BeforeEVTransitionSave");

	USaveGameManager_BeforeEVTransitionSave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SaveGameManager.Autosave
// (RequiredAPI)
// Parameters:
// EAutoSaveType                  AutoSaveType                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIgnoreSuperNova               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USaveGameManager::Autosave(EAutoSaveType AutoSaveType, bool bIgnoreSuperNova)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SaveGameManager.Autosave");

	USaveGameManager_Autosave_Params params;
	params.AutoSaveType = AutoSaveType;
	params.bIgnoreSuperNova = bIgnoreSuperNova;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.SaveLoadMenuWidget.OnSaveDataRequestFinished
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USaveLoadMenuWidget::STATIC_OnSaveDataRequestFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SaveLoadMenuWidget.OnSaveDataRequestFinished");

	USaveLoadMenuWidget_OnSaveDataRequestFinished_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SaveLoadMenuWidget.OnPS4LoadInturrupted
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  SaveName                       (Parm, ZeroConstructor)

void USaveLoadMenuWidget::STATIC_OnPS4LoadInturrupted(const class FString& SaveName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SaveLoadMenuWidget.OnPS4LoadInturrupted");

	USaveLoadMenuWidget_OnPS4LoadInturrupted_Params params;
	params.SaveName = SaveName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SaveLoadMenuWidget.OnLoadComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  Filename                       (Parm, ZeroConstructor)
// ELoadGameResult                Result                         (Parm, ZeroConstructor, IsPlainOldData)

void USaveLoadMenuWidget::STATIC_OnLoadComplete(const class FString& Filename, ELoadGameResult Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SaveLoadMenuWidget.OnLoadComplete");

	USaveLoadMenuWidget_OnLoadComplete_Params params;
	params.Filename = Filename;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SaveLoadMenuWidget.OnExitInterface
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USaveLoadMenuWidget::STATIC_OnExitInterface()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SaveLoadMenuWidget.OnExitInterface");

	USaveLoadMenuWidget_OnExitInterface_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SaveLoadMenuWidget.OnActiveUserChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EActiveUserChangeType          ChangeType                     (Parm, ZeroConstructor, IsPlainOldData)

void USaveLoadMenuWidget::STATIC_OnActiveUserChanged(EActiveUserChangeType ChangeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SaveLoadMenuWidget.OnActiveUserChanged");

	USaveLoadMenuWidget_OnActiveUserChanged_Params params;
	params.ChangeType = ChangeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SaveLoadMenuWidget.DeleteSave
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USaveLoadMenuWidget::STATIC_DeleteSave()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SaveLoadMenuWidget.DeleteSave");

	USaveLoadMenuWidget_DeleteSave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SavingWidget.ShowSavingWidget
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USavingWidget::STATIC_ShowSavingWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SavingWidget.ShowSavingWidget");

	USavingWidget_ShowSavingWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SavingWidget.OnHUDVisibilityChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void USavingWidget::STATIC_OnHUDVisibilityChanged(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SavingWidget.OnHUDVisibilityChanged");

	USavingWidget_OnHUDVisibilityChanged_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SavingWidget.HideSavingWidget
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ESaveGameResult                SaveGameResult                 (Parm, ZeroConstructor, IsPlainOldData)
// ESaveGameType                  SaveGameType                   (Parm, ZeroConstructor, IsPlainOldData)

void USavingWidget::STATIC_HideSavingWidget(ESaveGameResult SaveGameResult, ESaveGameType SaveGameType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SavingWidget.HideSavingWidget");

	USavingWidget_HideSavingWidget_Params params;
	params.SaveGameResult = SaveGameResult;
	params.SaveGameType = SaveGameType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ScalableImage.SizeSettingChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            SizeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UScalableImage::STATIC_SizeSettingChanged(int SizeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ScalableImage.SizeSettingChanged");

	UScalableImage_SizeSettingChanged_Params params;
	params.SizeIn = SizeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.UnsealOCL
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   OCLObjectID                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UScripts::STATIC_UnsealOCL(const struct FGuid& OCLObjectID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.UnsealOCL");

	UScripts_UnsealOCL_Params params;
	params.OCLObjectID = OCLObjectID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.UnlockOCL
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   OCLObjectID                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UScripts::STATIC_UnlockOCL(const struct FGuid& OCLObjectID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.UnlockOCL");

	UScripts_UnlockOCL_Params params;
	params.OCLObjectID = OCLObjectID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.UnlockComputer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   ComputerObjectID               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UScripts::STATIC_UnlockComputer(const struct FGuid& ComputerObjectID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.UnlockComputer");

	UScripts_UnlockComputer_Params params;
	params.ComputerObjectID = ComputerObjectID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.UnlockCompanion
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   CompanionID                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UScripts::STATIC_UnlockCompanion(const struct FGuid& CompanionID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.UnlockCompanion");

	UScripts_UnlockCompanion_Params params;
	params.CompanionID = CompanionID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.UnbarOCL
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   OCLObjectID                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UScripts::STATIC_UnbarOCL(const struct FGuid& OCLObjectID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.UnbarOCL");

	UScripts_UnbarOCL_Params params;
	params.OCLObjectID = OCLObjectID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.TriggerQuestFailState
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   QuestID                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            EndStateID                     (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_TriggerQuestFailState(const struct FGuid& QuestID, int EndStateID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.TriggerQuestFailState");

	UScripts_TriggerQuestFailState_Params params;
	params.QuestID = QuestID;
	params.EndStateID = EndStateID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.TriggerQuestEndState
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   QuestID                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            EndStateID                     (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_TriggerQuestEndState(const struct FGuid& QuestID, int EndStateID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.TriggerQuestEndState");

	UScripts_TriggerQuestEndState_Params params;
	params.QuestID = QuestID;
	params.EndStateID = EndStateID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.TriggerQuestAddendum
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   QuestID                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            AddendumID                     (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_TriggerQuestAddendum(const struct FGuid& QuestID, int AddendumID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.TriggerQuestAddendum");

	UScripts_TriggerQuestAddendum_Params params;
	params.QuestID = QuestID;
	params.AddendumID = AddendumID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.TravelToDestination
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  TravelDestination              (Parm, ZeroConstructor)
// bool                           bTriggerAutosave               (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_TravelToDestination(const class FString& TravelDestination, bool bTriggerAutosave)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.TravelToDestination");

	UScripts_TravelToDestination_Params params;
	params.TravelDestination = TravelDestination;
	params.bTriggerAutosave = bTriggerAutosave;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.TakeItemValue
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  Item                           (Parm, ZeroConstructor)

void UScripts::STATIC_TakeItemValue(const class FString& Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.TakeItemValue");

	UScripts_TakeItemValue_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.StartQuestWithAlternateDescription
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   QuestID                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            QuestDescriptionID             (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_StartQuestWithAlternateDescription(const struct FGuid& QuestID, int QuestDescriptionID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.StartQuestWithAlternateDescription");

	UScripts_StartQuestWithAlternateDescription_Params params;
	params.QuestID = QuestID;
	params.QuestDescriptionID = QuestDescriptionID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.StartQuest
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   QuestID                        (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_StartQuest(const struct FGuid& QuestID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.StartQuest");

	UScripts_StartQuest_Params params;
	params.QuestID = QuestID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.ShowBeacon
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   BeaconObjectID                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UScripts::STATIC_ShowBeacon(const struct FGuid& BeaconObjectID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.ShowBeacon");

	UScripts_ShowBeacon_Params params;
	params.BeaconObjectID = BeaconObjectID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetTrackedQuest
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   QuestID                        (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetTrackedQuest(const struct FGuid& QuestID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetTrackedQuest");

	UScripts_SetTrackedQuest_Params params;
	params.QuestID = QuestID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetTeamRelationship
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  SourceTeam                     (Parm, ZeroConstructor)
// class FString                  OtherTeam                      (Parm, OutParm, ZeroConstructor)
// TEnumAsByte<ETeamAttitude>     Relationship                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bMutual                        (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetTeamRelationship(const class FString& SourceTeam, TEnumAsByte<ETeamAttitude> Relationship, bool bMutual, class FString* OtherTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetTeamRelationship");

	UScripts_SetTeamRelationship_Params params;
	params.SourceTeam = SourceTeam;
	params.Relationship = Relationship;
	params.bMutual = bMutual;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OtherTeam != nullptr)
		*OtherTeam = params.OtherTeam;
}


// Function Indiana.Scripts.SetTalkIdleOverride
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   TalkIdleOverrideName           (Parm, ZeroConstructor, IsPlainOldData)
// EEmotion                       Emotion                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          Delay                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Persist                        (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetTalkIdleOverride(const struct FGuid& Actor, const struct FName& TalkIdleOverrideName, EEmotion Emotion, float Delay, float Duration, bool Persist)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetTalkIdleOverride");

	UScripts_SetTalkIdleOverride_Params params;
	params.Actor = Actor;
	params.TalkIdleOverrideName = TalkIdleOverrideName;
	params.Emotion = Emotion;
	params.Delay = Delay;
	params.Duration = Duration;
	params.Persist = Persist;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetSpeakersTalkIdleOverride
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   TalkIdleOverrideName           (Parm, ZeroConstructor, IsPlainOldData)
// EEmotion                       Emotion                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          Delay                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Persist                        (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetSpeakersTalkIdleOverride(const struct FName& TalkIdleOverrideName, EEmotion Emotion, float Delay, float Duration, bool Persist)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetSpeakersTalkIdleOverride");

	UScripts_SetSpeakersTalkIdleOverride_Params params;
	params.TalkIdleOverrideName = TalkIdleOverrideName;
	params.Emotion = Emotion;
	params.Delay = Delay;
	params.Duration = Duration;
	params.Persist = Persist;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetSpeakersEmotionWithDelay
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EEmotion                       Emotion                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          EmotionDelay                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Persist                        (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetSpeakersEmotionWithDelay(EEmotion Emotion, float EmotionDelay, float Duration, bool Persist)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetSpeakersEmotionWithDelay");

	UScripts_SetSpeakersEmotionWithDelay_Params params;
	params.Emotion = Emotion;
	params.EmotionDelay = EmotionDelay;
	params.Duration = Duration;
	params.Persist = Persist;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetSpeakersEmotionFull
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EEmotion                       Emotion                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          Delay                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          HeadStrength                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Persist                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           AffectHead                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           AffectBody                     (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetSpeakersEmotionFull(EEmotion Emotion, float Delay, float Duration, float HeadStrength, bool Persist, bool AffectHead, bool AffectBody)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetSpeakersEmotionFull");

	UScripts_SetSpeakersEmotionFull_Params params;
	params.Emotion = Emotion;
	params.Delay = Delay;
	params.Duration = Duration;
	params.HeadStrength = HeadStrength;
	params.Persist = Persist;
	params.AffectHead = AffectHead;
	params.AffectBody = AffectBody;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetSpeakersEmotion
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EEmotion                       Emotion                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Persist                        (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetSpeakersEmotion(EEmotion Emotion, float Duration, bool Persist)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetSpeakersEmotion");

	UScripts_SetSpeakersEmotion_Params params;
	params.Emotion = Emotion;
	params.Duration = Duration;
	params.Persist = Persist;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetSpeakersDefaultEmotion
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EEmotion                       Emotion                        (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetSpeakersDefaultEmotion(EEmotion Emotion)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetSpeakersDefaultEmotion");

	UScripts_SetSpeakersDefaultEmotion_Params params;
	params.Emotion = Emotion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetSlideshowImageKey
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  ImageKey                       (Parm, OutParm, ZeroConstructor)

void UScripts::STATIC_SetSlideshowImageKey(class FString* ImageKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetSlideshowImageKey");

	UScripts_SetSlideshowImageKey_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (ImageKey != nullptr)
		*ImageKey = params.ImageKey;
}


// Function Indiana.Scripts.SetQuestAlternateDescription
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   QuestID                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            QuestDescriptionID             (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetQuestAlternateDescription(const struct FGuid& QuestID, int QuestDescriptionID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetQuestAlternateDescription");

	UScripts_SetQuestAlternateDescription_Params params;
	params.QuestID = QuestID;
	params.QuestDescriptionID = QuestDescriptionID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetPosture
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EPosture                       Posture                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          Delay                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Persist                        (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetPosture(EPosture Posture, float Delay, float Duration, bool Persist)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetPosture");

	UScripts_SetPosture_Params params;
	params.Posture = Posture;
	params.Delay = Delay;
	params.Duration = Duration;
	params.Persist = Persist;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetPointOfInterestDiscovered
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  PointOfInterestData            (Parm, ZeroConstructor)
// bool                           bCanAwardXP                    (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetPointOfInterestDiscovered(const class FString& PointOfInterestData, bool bCanAwardXP)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetPointOfInterestDiscovered");

	UScripts_SetPointOfInterestDiscovered_Params params;
	params.PointOfInterestData = PointOfInterestData;
	params.bCanAwardXP = bCanAwardXP;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetPlayerVisitedTravelDestination
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  TravelDestination              (Parm, ZeroConstructor)

void UScripts::STATIC_SetPlayerVisitedTravelDestination(const class FString& TravelDestination)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetPlayerVisitedTravelDestination");

	UScripts_SetPlayerVisitedTravelDestination_Params params;
	params.TravelDestination = TravelDestination;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetPlayerVisitedRegion
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  TravelRegion                   (Parm, ZeroConstructor)

void UScripts::STATIC_SetPlayerVisitedRegion(const class FString& TravelRegion)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetPlayerVisitedRegion");

	UScripts_SetPlayerVisitedRegion_Params params;
	params.TravelRegion = TravelRegion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetPlayerTravelDestinationLocked
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  TravelDestination              (Parm, ZeroConstructor)
// bool                           bLocked                        (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetPlayerTravelDestinationLocked(const class FString& TravelDestination, bool bLocked)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetPlayerTravelDestinationLocked");

	UScripts_SetPlayerTravelDestinationLocked_Params params;
	params.TravelDestination = TravelDestination;
	params.bLocked = bLocked;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetPlayerTravelDestinationHidden
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  TravelDestination              (Parm, ZeroConstructor)
// bool                           bHidden                        (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetPlayerTravelDestinationHidden(const class FString& TravelDestination, bool bHidden)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetPlayerTravelDestinationHidden");

	UScripts_SetPlayerTravelDestinationHidden_Params params;
	params.TravelDestination = TravelDestination;
	params.bHidden = bHidden;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetPlayerShipLocation
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  ShipDestination                (Parm, ZeroConstructor)

void UScripts::STATIC_SetPlayerShipLocation(const class FString& ShipDestination)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetPlayerShipLocation");

	UScripts_SetPlayerShipLocation_Params params;
	params.ShipDestination = ShipDestination;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetPlayerRelationshipToHostile
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   CharacterID                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UScripts::STATIC_SetPlayerRelationshipToHostile(const struct FGuid& CharacterID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetPlayerRelationshipToHostile");

	UScripts_SetPlayerRelationshipToHostile_Params params;
	params.CharacterID = CharacterID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetPlayerOwnershipOfItemTypeInContainer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   ContainerID                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class FString                  Item                           (Parm, ZeroConstructor)
// bool                           bPlayerOwned                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bClearNonPlayerOwnership       (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetPlayerOwnershipOfItemTypeInContainer(const struct FGuid& ContainerID, const class FString& Item, bool bPlayerOwned, bool bClearNonPlayerOwnership)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetPlayerOwnershipOfItemTypeInContainer");

	UScripts_SetPlayerOwnershipOfItemTypeInContainer_Params params;
	params.ContainerID = ContainerID;
	params.Item = Item;
	params.bPlayerOwned = bPlayerOwned;
	params.bClearNonPlayerOwnership = bClearNonPlayerOwnership;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetPlayerOwnershipOfItemsInContainer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   ContainerID                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           bPlayerOwned                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bClearNonPlayerOwnership       (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetPlayerOwnershipOfItemsInContainer(const struct FGuid& ContainerID, bool bPlayerOwned, bool bClearNonPlayerOwnership)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetPlayerOwnershipOfItemsInContainer");

	UScripts_SetPlayerOwnershipOfItemsInContainer_Params params;
	params.ContainerID = ContainerID;
	params.bPlayerOwned = bPlayerOwned;
	params.bClearNonPlayerOwnership = bClearNonPlayerOwnership;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetPlayerAwareOfTravelDestination
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  TravelDestination              (Parm, ZeroConstructor)

void UScripts::STATIC_SetPlayerAwareOfTravelDestination(const class FString& TravelDestination)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetPlayerAwareOfTravelDestination");

	UScripts_SetPlayerAwareOfTravelDestination_Params params;
	params.TravelDestination = TravelDestination;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetPlayerAwareOfRegion
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  TravelRegion                   (Parm, ZeroConstructor)

void UScripts::STATIC_SetPlayerAwareOfRegion(const class FString& TravelRegion)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetPlayerAwareOfRegion");

	UScripts_SetPlayerAwareOfRegion_Params params;
	params.TravelRegion = TravelRegion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetPickupPlayerOwnership
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   PickupID                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           bPlayerOwned                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bClearNonPlayerOwnership       (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetPickupPlayerOwnership(const struct FGuid& PickupID, bool bPlayerOwned, bool bClearNonPlayerOwnership)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetPickupPlayerOwnership");

	UScripts_SetPickupPlayerOwnership_Params params;
	params.PickupID = PickupID;
	params.bPlayerOwned = bPlayerOwned;
	params.bClearNonPlayerOwnership = bClearNonPlayerOwnership;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetPickupNonPlayerOwnership
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   PickupID                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FGuid                   Actor                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           bClearPlayerOwnership          (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetPickupNonPlayerOwnership(const struct FGuid& PickupID, const struct FGuid& Actor, bool bClearPlayerOwnership)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetPickupNonPlayerOwnership");

	UScripts_SetPickupNonPlayerOwnership_Params params;
	params.PickupID = PickupID;
	params.Actor = Actor;
	params.bClearPlayerOwnership = bClearPlayerOwnership;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetPickupFactionOwnership
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   PickupID                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class FString                  Faction                        (Parm, ZeroConstructor)
// bool                           bClearPlayerOwnership          (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetPickupFactionOwnership(const struct FGuid& PickupID, const class FString& Faction, bool bClearPlayerOwnership)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetPickupFactionOwnership");

	UScripts_SetPickupFactionOwnership_Params params;
	params.PickupID = PickupID;
	params.Faction = Faction;
	params.bClearPlayerOwnership = bClearPlayerOwnership;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetObjectiveAlternateDescription
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   QuestID                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            ObjectiveID                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            ObjectiveDescriptionID         (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetObjectiveAlternateDescription(const struct FGuid& QuestID, int ObjectiveID, int ObjectiveDescriptionID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetObjectiveAlternateDescription");

	UScripts_SetObjectiveAlternateDescription_Params params;
	params.QuestID = QuestID;
	params.ObjectiveID = ObjectiveID;
	params.ObjectiveDescriptionID = ObjectiveDescriptionID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetNonPlayerOwnershipOfItemTypeInContainer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   ContainerID                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class FString                  Item                           (Parm, ZeroConstructor)
// struct FGuid                   Actor                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           bClearPlayerOwnership          (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetNonPlayerOwnershipOfItemTypeInContainer(const struct FGuid& ContainerID, const class FString& Item, const struct FGuid& Actor, bool bClearPlayerOwnership)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetNonPlayerOwnershipOfItemTypeInContainer");

	UScripts_SetNonPlayerOwnershipOfItemTypeInContainer_Params params;
	params.ContainerID = ContainerID;
	params.Item = Item;
	params.Actor = Actor;
	params.bClearPlayerOwnership = bClearPlayerOwnership;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetNonPlayerOwnershipOfItemsInContainer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   ContainerID                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FGuid                   Actor                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           bClearPlayerOwnership          (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetNonPlayerOwnershipOfItemsInContainer(const struct FGuid& ContainerID, const struct FGuid& Actor, bool bClearPlayerOwnership)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetNonPlayerOwnershipOfItemsInContainer");

	UScripts_SetNonPlayerOwnershipOfItemsInContainer_Params params;
	params.ContainerID = ContainerID;
	params.Actor = Actor;
	params.bClearPlayerOwnership = bClearPlayerOwnership;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetMusicOverride
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  OverrideTrack                  (Parm, ZeroConstructor)

void UScripts::STATIC_SetMusicOverride(const class FString& OverrideTrack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetMusicOverride");

	UScripts_SetMusicOverride_Params params;
	params.OverrideTrack = OverrideTrack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetInterrogationComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EInterrogationResult           Result                         (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetInterrogationComplete(EInterrogationResult Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetInterrogationComplete");

	UScripts_SetInterrogationComplete_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetGlobalVariableValue
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGlobalVariable         Variable                       (ConstParm, Parm, OutParm, ReferenceParm)
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetGlobalVariableValue(const struct FGlobalVariable& Variable, int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetGlobalVariableValue");

	UScripts_SetGlobalVariableValue_Params params;
	params.Variable = Variable;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetGlobalValue
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  VariableName                   (Parm, ZeroConstructor)
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetGlobalValue(const class FString& VariableName, int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetGlobalValue");

	UScripts_SetGlobalValue_Params params;
	params.VariableName = VariableName;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetGlobalIfGlobal
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  ConditionVariableName          (Parm, ZeroConstructor)
// int                            ConditionValue                 (Parm, ZeroConstructor, IsPlainOldData)
// class FString                  VariableName                   (Parm, ZeroConstructor)
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetGlobalIfGlobal(const class FString& ConditionVariableName, int ConditionValue, const class FString& VariableName, int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetGlobalIfGlobal");

	UScripts_SetGlobalIfGlobal_Params params;
	params.ConditionVariableName = ConditionVariableName;
	params.ConditionValue = ConditionValue;
	params.VariableName = VariableName;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetFactionOwnershipOfItemTypeInContainer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   ContainerID                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class FString                  Item                           (Parm, ZeroConstructor)
// class FString                  Faction                        (Parm, ZeroConstructor)
// bool                           bClearPlayerOwnership          (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetFactionOwnershipOfItemTypeInContainer(const struct FGuid& ContainerID, const class FString& Item, const class FString& Faction, bool bClearPlayerOwnership)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetFactionOwnershipOfItemTypeInContainer");

	UScripts_SetFactionOwnershipOfItemTypeInContainer_Params params;
	params.ContainerID = ContainerID;
	params.Item = Item;
	params.Faction = Faction;
	params.bClearPlayerOwnership = bClearPlayerOwnership;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetFactionOwnershipOfItemsInContainer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   ContainerID                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class FString                  Faction                        (Parm, ZeroConstructor)
// bool                           bClearPlayerOwnership          (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetFactionOwnershipOfItemsInContainer(const struct FGuid& ContainerID, const class FString& Faction, bool bClearPlayerOwnership)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetFactionOwnershipOfItemsInContainer");

	UScripts_SetFactionOwnershipOfItemsInContainer_Params params;
	params.ContainerID = ContainerID;
	params.Faction = Faction;
	params.bClearPlayerOwnership = bClearPlayerOwnership;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetFactionEncountered
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  Faction                        (Parm, ZeroConstructor)

void UScripts::STATIC_SetFactionEncountered(const class FString& Faction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetFactionEncountered");

	UScripts_SetFactionEncountered_Params params;
	params.Faction = Faction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetEmotionWithDelay
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// EEmotion                       Emotion                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          EmotionDelay                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Persist                        (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetEmotionWithDelay(const struct FGuid& Actor, EEmotion Emotion, float EmotionDelay, float Duration, bool Persist)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetEmotionWithDelay");

	UScripts_SetEmotionWithDelay_Params params;
	params.Actor = Actor;
	params.Emotion = Emotion;
	params.EmotionDelay = EmotionDelay;
	params.Duration = Duration;
	params.Persist = Persist;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetEmotionFull
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// EEmotion                       Emotion                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          Delay                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          HeadStrength                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Persist                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           AffectHead                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           AffectBody                     (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetEmotionFull(const struct FGuid& Actor, EEmotion Emotion, float Delay, float Duration, float HeadStrength, bool Persist, bool AffectHead, bool AffectBody)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetEmotionFull");

	UScripts_SetEmotionFull_Params params;
	params.Actor = Actor;
	params.Emotion = Emotion;
	params.Delay = Delay;
	params.Duration = Duration;
	params.HeadStrength = HeadStrength;
	params.Persist = Persist;
	params.AffectHead = AffectHead;
	params.AffectBody = AffectBody;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetEmotion
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// EEmotion                       Emotion                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Persist                        (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetEmotion(const struct FGuid& Actor, EEmotion Emotion, float Duration, bool Persist)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetEmotion");

	UScripts_SetEmotion_Params params;
	params.Actor = Actor;
	params.Emotion = Emotion;
	params.Duration = Duration;
	params.Persist = Persist;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetDefaultEmotion
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// EEmotion                       Emotion                        (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetDefaultEmotion(const struct FGuid& Actor, EEmotion Emotion)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetDefaultEmotion");

	UScripts_SetDefaultEmotion_Params params;
	params.Actor = Actor;
	params.Emotion = Emotion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetConversationTargetActor
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FGuid                   Target                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRotateBody                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bStickyTarget                  (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetConversationTargetActor(const struct FGuid& Actor, const struct FGuid& Target, bool bRotateBody, bool bStickyTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetConversationTargetActor");

	UScripts_SetConversationTargetActor_Params params;
	params.Actor = Actor;
	params.Target = Target;
	params.bRotateBody = bRotateBody;
	params.bStickyTarget = bStickyTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetConversationHeadTargetActor
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FGuid                   Target                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bStickyTarget                  (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetConversationHeadTargetActor(const struct FGuid& Actor, const struct FGuid& Target, bool bStickyTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetConversationHeadTargetActor");

	UScripts_SetConversationHeadTargetActor_Params params;
	params.Actor = Actor;
	params.Target = Target;
	params.bStickyTarget = bStickyTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetConversationEyesTargetActor
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FGuid                   Target                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bStickyTarget                  (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetConversationEyesTargetActor(const struct FGuid& Actor, const struct FGuid& Target, bool bStickyTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetConversationEyesTargetActor");

	UScripts_SetConversationEyesTargetActor_Params params;
	params.Actor = Actor;
	params.Target = Target;
	params.bStickyTarget = bStickyTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetConversationBodyTargetActor
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FGuid                   Target                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bStickyTarget                  (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetConversationBodyTargetActor(const struct FGuid& Actor, const struct FGuid& Target, bool bStickyTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetConversationBodyTargetActor");

	UScripts_SetConversationBodyTargetActor_Params params;
	params.Actor = Actor;
	params.Target = Target;
	params.bStickyTarget = bStickyTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetCompanionWantsToTalk
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ESpecialObsidianID             CompanionID                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bWantsToTalk                   (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_SetCompanionWantsToTalk(ESpecialObsidianID CompanionID, bool bWantsToTalk)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetCompanionWantsToTalk");

	UScripts_SetCompanionWantsToTalk_Params params;
	params.CompanionID = CompanionID;
	params.bWantsToTalk = bWantsToTalk;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SetCharacterTeam_AvoidUsingThis
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   CharacterID                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class FString                  Team                           (Parm, ZeroConstructor)

void UScripts::STATIC_SetCharacterTeam_AvoidUsingThis(const struct FGuid& CharacterID, const class FString& Team)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SetCharacterTeam_AvoidUsingThis");

	UScripts_SetCharacterTeam_AvoidUsingThis_Params params;
	params.CharacterID = CharacterID;
	params.Team = Team;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.SealOCL
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   OCLObjectID                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UScripts::STATIC_SealOCL(const struct FGuid& OCLObjectID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.SealOCL");

	UScripts_SealOCL_Params params;
	params.OCLObjectID = OCLObjectID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.ResumeMusic
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UScripts::STATIC_ResumeMusic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.ResumeMusic");

	UScripts_ResumeMusic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.ResetRPGSystems
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UScripts::STATIC_ResetRPGSystems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.ResetRPGSystems");

	UScripts_ResetRPGSystems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.ReplaceCompanionInSlot
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   PotientalCompanionID           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// ECompanionSlot                 CommpanionSlot                 (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_ReplaceCompanionInSlot(const struct FGuid& PotientalCompanionID, ECompanionSlot CommpanionSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.ReplaceCompanionInSlot");

	UScripts_ReplaceCompanionInSlot_Params params;
	params.PotientalCompanionID = PotientalCompanionID;
	params.CommpanionSlot = CommpanionSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.RemoveItemFromActor
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   ActorId                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class FString                  Item                           (Parm, ZeroConstructor)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_RemoveItemFromActor(const struct FGuid& ActorId, const class FString& Item, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.RemoveItemFromActor");

	UScripts_RemoveItemFromActor_Params params;
	params.ActorId = ActorId;
	params.Item = Item;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.RemoveItem
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  Item                           (Parm, ZeroConstructor)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_RemoveItem(const class FString& Item, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.RemoveItem");

	UScripts_RemoveItem_Params params;
	params.Item = Item;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.RemoveCurrency
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   ActorId                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_RemoveCurrency(const struct FGuid& ActorId, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.RemoveCurrency");

	UScripts_RemoveCurrency_Params params;
	params.ActorId = ActorId;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.RemoveCompanionFromParty
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   CompanionID                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UScripts::STATIC_RemoveCompanionFromParty(const struct FGuid& CompanionID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.RemoveCompanionFromParty");

	UScripts_RemoveCompanionFromParty_Params params;
	params.CompanionID = CompanionID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.RemoteEvent
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  EventName                      (Parm, ZeroConstructor)

void UScripts::STATIC_RemoteEvent(const class FString& EventName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.RemoteEvent");

	UScripts_RemoteEvent_Params params;
	params.EventName = EventName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.RegisterNamedTimestamp
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  TimestampName                  (Parm, ZeroConstructor)

void UScripts::STATIC_RegisterNamedTimestamp(const class FString& TimestampName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.RegisterNamedTimestamp");

	UScripts_RegisterNamedTimestamp_Params params;
	params.TimestampName = TimestampName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.RandomizeGlobalValueWithGlobals
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  VariableName                   (Parm, ZeroConstructor)
// class FString                  MinValueGlobal                 (Parm, ZeroConstructor)
// class FString                  MaxValueGlobal                 (Parm, ZeroConstructor)

void UScripts::STATIC_RandomizeGlobalValueWithGlobals(const class FString& VariableName, const class FString& MinValueGlobal, const class FString& MaxValueGlobal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.RandomizeGlobalValueWithGlobals");

	UScripts_RandomizeGlobalValueWithGlobals_Params params;
	params.VariableName = VariableName;
	params.MinValueGlobal = MinValueGlobal;
	params.MaxValueGlobal = MaxValueGlobal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.RandomizeGlobalValue
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  VariableName                   (Parm, ZeroConstructor)
// int                            MinValue                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            MaxValue                       (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_RandomizeGlobalValue(const class FString& VariableName, int MinValue, int MaxValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.RandomizeGlobalValue");

	UScripts_RandomizeGlobalValue_Params params;
	params.VariableName = VariableName;
	params.MinValue = MinValue;
	params.MaxValue = MaxValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.PlayConversationChatterEvent
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EChatterEventType              ChatterEvent                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bConversationNode              (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_PlayConversationChatterEvent(EChatterEventType ChatterEvent, bool bConversationNode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.PlayConversationChatterEvent");

	UScripts_PlayConversationChatterEvent_Params params;
	params.ChatterEvent = ChatterEvent;
	params.bConversationNode = bConversationNode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.PauseMusic
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UScripts::STATIC_PauseMusic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.PauseMusic");

	UScripts_PauseMusic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.OpenOCL
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   OCLObjectID                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UScripts::STATIC_OpenOCL(const struct FGuid& OCLObjectID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.OpenOCL");

	UScripts_OpenOCL_Params params;
	params.OCLObjectID = OCLObjectID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.MentionQuest
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   QuestID                        (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_MentionQuest(const struct FGuid& QuestID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.MentionQuest");

	UScripts_MentionQuest_Params params;
	params.QuestID = QuestID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.MentionPointOfInterest
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  PointOfInterestData            (Parm, ZeroConstructor)

void UScripts::STATIC_MentionPointOfInterest(const class FString& PointOfInterestData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.MentionPointOfInterest");

	UScripts_MentionPointOfInterest_Params params;
	params.PointOfInterestData = PointOfInterestData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.MarkConversationNodeAsRead
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   ConversationID                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            NodeID                         (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_MarkConversationNodeAsRead(const struct FGuid& ConversationID, int NodeID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.MarkConversationNodeAsRead");

	UScripts_MarkConversationNodeAsRead_Params params;
	params.ConversationID = ConversationID;
	params.NodeID = NodeID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.MakePointOfInterestDiscoverable
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  PointOfInterestData            (Parm, ZeroConstructor)
// bool                           bStillHidden                   (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_MakePointOfInterestDiscoverable(const class FString& PointOfInterestData, bool bStillHidden)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.MakePointOfInterestDiscoverable");

	UScripts_MakePointOfInterestDiscoverable_Params params;
	params.PointOfInterestData = PointOfInterestData;
	params.bStillHidden = bStillHidden;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.LockOCL
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   OCLObjectID                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UScripts::STATIC_LockOCL(const struct FGuid& OCLObjectID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.LockOCL");

	UScripts_LockOCL_Params params;
	params.OCLObjectID = OCLObjectID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.LockComputer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   ComputerObjectID               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UScripts::STATIC_LockComputer(const struct FGuid& ComputerObjectID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.LockComputer");

	UScripts_LockComputer_Params params;
	params.ComputerObjectID = ComputerObjectID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.KillNPC
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   Character                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UScripts::STATIC_KillNPC(const struct FGuid& Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.KillNPC");

	UScripts_KillNPC_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.IncrementGlobalValue
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  VariableName                   (Parm, ZeroConstructor)
// int                            IncrementValue                 (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_IncrementGlobalValue(const class FString& VariableName, int IncrementValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.IncrementGlobalValue");

	UScripts_IncrementGlobalValue_Params params;
	params.VariableName = VariableName;
	params.IncrementValue = IncrementValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.HidePointOfInterest
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  PointOfInterestData            (Parm, ZeroConstructor)

void UScripts::STATIC_HidePointOfInterest(const class FString& PointOfInterestData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.HidePointOfInterest");

	UScripts_HidePointOfInterest_Params params;
	params.PointOfInterestData = PointOfInterestData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.HideBeacon
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   BeaconObjectID                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UScripts::STATIC_HideBeacon(const struct FGuid& BeaconObjectID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.HideBeacon");

	UScripts_HideBeacon_Params params;
	params.BeaconObjectID = BeaconObjectID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.GivePerkToActor
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   ActorId                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class FString                  Perk                           (Parm, ZeroConstructor)

void UScripts::STATIC_GivePerkToActor(const struct FGuid& ActorId, const class FString& Perk)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.GivePerkToActor");

	UScripts_GivePerkToActor_Params params;
	params.ActorId = ActorId;
	params.Perk = Perk;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.GiveLoot
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  LootTableData                  (Parm, ZeroConstructor)

void UScripts::STATIC_GiveLoot(const class FString& LootTableData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.GiveLoot");

	UScripts_GiveLoot_Params params;
	params.LootTableData = LootTableData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.GiveItemToActor
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   ActorIdID                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class FString                  Item                           (Parm, ZeroConstructor)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_GiveItemToActor(const struct FGuid& ActorIdID, const class FString& Item, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.GiveItemToActor");

	UScripts_GiveItemToActor_Params params;
	params.ActorIdID = ActorIdID;
	params.Item = Item;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.GiveItem
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  Item                           (Parm, ZeroConstructor)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_GiveItem(const class FString& Item, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.GiveItem");

	UScripts_GiveItem_Params params;
	params.Item = Item;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.GiveCurrency
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   ActorId                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_GiveCurrency(const struct FGuid& ActorId, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.GiveCurrency");

	UScripts_GiveCurrency_Params params;
	params.ActorId = ActorId;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.GetCompanionMoral
// (BlueprintAuthorityOnly)
// Parameters:
// ESpecialObsidianID             CompanionID                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UScripts::GetCompanionMoral(ESpecialObsidianID CompanionID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.GetCompanionMoral");

	UScripts_GetCompanionMoral_Params params;
	params.CompanionID = CompanionID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Scripts.DynamicallyReplaceCompanion
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ESpecialObsidianID             OldCompanionID                 (Parm, ZeroConstructor, IsPlainOldData)
// ESpecialObsidianID             NewCompanionID                 (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_DynamicallyReplaceCompanion(ESpecialObsidianID OldCompanionID, ESpecialObsidianID NewCompanionID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.DynamicallyReplaceCompanion");

	UScripts_DynamicallyReplaceCompanion_Params params;
	params.OldCompanionID = OldCompanionID;
	params.NewCompanionID = NewCompanionID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.DismissCompanion
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ESpecialObsidianID             CompanionID                    (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_DismissCompanion(ESpecialObsidianID CompanionID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.DismissCompanion");

	UScripts_DismissCompanion_Params params;
	params.CompanionID = CompanionID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.DisarmTrap
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   TrapObjectID                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UScripts::STATIC_DisarmTrap(const struct FGuid& TrapObjectID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.DisarmTrap");

	UScripts_DisarmTrap_Params params;
	params.TrapObjectID = TrapObjectID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.DebugPrintMessage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  Message                        (Parm, ZeroConstructor)

void UScripts::STATIC_DebugPrintMessage(const class FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.DebugPrintMessage");

	UScripts_DebugPrintMessage_Params params;
	params.Message = Message;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.DebugAdvanceQuest
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   QuestID                        (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_DebugAdvanceQuest(const struct FGuid& QuestID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.DebugAdvanceQuest");

	UScripts_DebugAdvanceQuest_Params params;
	params.QuestID = QuestID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.CloseOCL
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   OCLObjectID                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           Block                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSeal                          (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_CloseOCL(const struct FGuid& OCLObjectID, bool Block, bool bSeal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.CloseOCL");

	UScripts_CloseOCL_Params params;
	params.OCLObjectID = OCLObjectID;
	params.Block = Block;
	params.bSeal = bSeal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.ClearTalkIdleOverrideOnNextEmotionChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_ClearTalkIdleOverrideOnNextEmotionChange(const struct FGuid& Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.ClearTalkIdleOverrideOnNextEmotionChange");

	UScripts_ClearTalkIdleOverrideOnNextEmotionChange_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.ClearTalkIdleOverride
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// EEmotion                       Emotion                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Persist                        (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_ClearTalkIdleOverride(const struct FGuid& Actor, EEmotion Emotion, float Duration, bool Persist)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.ClearTalkIdleOverride");

	UScripts_ClearTalkIdleOverride_Params params;
	params.Actor = Actor;
	params.Emotion = Emotion;
	params.Duration = Duration;
	params.Persist = Persist;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.ClearSpeakersTalkIdleOverrideOnNextEmotionChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UScripts::STATIC_ClearSpeakersTalkIdleOverrideOnNextEmotionChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.ClearSpeakersTalkIdleOverrideOnNextEmotionChange");

	UScripts_ClearSpeakersTalkIdleOverrideOnNextEmotionChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.ClearSpeakersTalkIdleOverride
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EEmotion                       Emotion                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Persist                        (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_ClearSpeakersTalkIdleOverride(EEmotion Emotion, float Duration, bool Persist)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.ClearSpeakersTalkIdleOverride");

	UScripts_ClearSpeakersTalkIdleOverride_Params params;
	params.Emotion = Emotion;
	params.Duration = Duration;
	params.Persist = Persist;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.ClearSpeakersDefaultEmotion
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UScripts::STATIC_ClearSpeakersDefaultEmotion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.ClearSpeakersDefaultEmotion");

	UScripts_ClearSpeakersDefaultEmotion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.ClearPickupOwnerships
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   PickupID                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           bClearPlayerOwnership          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bClearNonPlayerOwnership       (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_ClearPickupOwnerships(const struct FGuid& PickupID, bool bClearPlayerOwnership, bool bClearNonPlayerOwnership)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.ClearPickupOwnerships");

	UScripts_ClearPickupOwnerships_Params params;
	params.PickupID = PickupID;
	params.bClearPlayerOwnership = bClearPlayerOwnership;
	params.bClearNonPlayerOwnership = bClearNonPlayerOwnership;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.ClearOwnershipsOfItemTypeInContainer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   ContainerID                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class FString                  Item                           (Parm, ZeroConstructor)
// bool                           bClearPlayerOwnership          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bClearNonPlayerOwnership       (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_ClearOwnershipsOfItemTypeInContainer(const struct FGuid& ContainerID, const class FString& Item, bool bClearPlayerOwnership, bool bClearNonPlayerOwnership)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.ClearOwnershipsOfItemTypeInContainer");

	UScripts_ClearOwnershipsOfItemTypeInContainer_Params params;
	params.ContainerID = ContainerID;
	params.Item = Item;
	params.bClearPlayerOwnership = bClearPlayerOwnership;
	params.bClearNonPlayerOwnership = bClearNonPlayerOwnership;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.ClearOwnershipsOfItemsInContainer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   ContainerID                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           bClearPlayerOwnership          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bClearNonPlayerOwnership       (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_ClearOwnershipsOfItemsInContainer(const struct FGuid& ContainerID, bool bClearPlayerOwnership, bool bClearNonPlayerOwnership)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.ClearOwnershipsOfItemsInContainer");

	UScripts_ClearOwnershipsOfItemsInContainer_Params params;
	params.ContainerID = ContainerID;
	params.bClearPlayerOwnership = bClearPlayerOwnership;
	params.bClearNonPlayerOwnership = bClearNonPlayerOwnership;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.ClearNamedTimestamp
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  TimestampName                  (Parm, ZeroConstructor)

void UScripts::STATIC_ClearNamedTimestamp(const class FString& TimestampName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.ClearNamedTimestamp");

	UScripts_ClearNamedTimestamp_Params params;
	params.TimestampName = TimestampName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.ClearMusicOverride
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UScripts::STATIC_ClearMusicOverride()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.ClearMusicOverride");

	UScripts_ClearMusicOverride_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.ClearFactionRecentHostilityToPlayer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  Faction                        (Parm, ZeroConstructor)

void UScripts::STATIC_ClearFactionRecentHostilityToPlayer(const class FString& Faction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.ClearFactionRecentHostilityToPlayer");

	UScripts_ClearFactionRecentHostilityToPlayer_Params params;
	params.Faction = Faction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.ClearEmotion
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_ClearEmotion(const struct FGuid& Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.ClearEmotion");

	UScripts_ClearEmotion_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.ClearDefaultEmotion
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_ClearDefaultEmotion(const struct FGuid& Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.ClearDefaultEmotion");

	UScripts_ClearDefaultEmotion_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.ClearConversationTargetActor
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bStickyTarget                  (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_ClearConversationTargetActor(const struct FGuid& Actor, bool bStickyTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.ClearConversationTargetActor");

	UScripts_ClearConversationTargetActor_Params params;
	params.Actor = Actor;
	params.bStickyTarget = bStickyTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.ClearConversationNodeAsRead
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   ConversationID                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            NodeID                         (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_ClearConversationNodeAsRead(const struct FGuid& ConversationID, int NodeID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.ClearConversationNodeAsRead");

	UScripts_ClearConversationNodeAsRead_Params params;
	params.ConversationID = ConversationID;
	params.NodeID = NodeID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.ClearConversationHeadTargetActor
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bStickyTarget                  (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_ClearConversationHeadTargetActor(const struct FGuid& Actor, bool bStickyTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.ClearConversationHeadTargetActor");

	UScripts_ClearConversationHeadTargetActor_Params params;
	params.Actor = Actor;
	params.bStickyTarget = bStickyTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.ClearConversationEyesTargetActor
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bStickyTarget                  (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_ClearConversationEyesTargetActor(const struct FGuid& Actor, bool bStickyTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.ClearConversationEyesTargetActor");

	UScripts_ClearConversationEyesTargetActor_Params params;
	params.Actor = Actor;
	params.bStickyTarget = bStickyTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.ClearConversationBodyTargetActor
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bStickyTarget                  (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_ClearConversationBodyTargetActor(const struct FGuid& Actor, bool bStickyTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.ClearConversationBodyTargetActor");

	UScripts_ClearConversationBodyTargetActor_Params params;
	params.Actor = Actor;
	params.bStickyTarget = bStickyTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.CallGlobalScript
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   GlobalScriptID                 (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_CallGlobalScript(const struct FGuid& GlobalScriptID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.CallGlobalScript");

	UScripts_CallGlobalScript_Params params;
	params.GlobalScriptID = GlobalScriptID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.Bribe
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  VariableName                   (Parm, ZeroConstructor)

void UScripts::STATIC_Bribe(const class FString& VariableName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.Bribe");

	UScripts_Bribe_Params params;
	params.VariableName = VariableName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.BeginTradeWithSpeaker
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UScripts::STATIC_BeginTradeWithSpeaker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.BeginTradeWithSpeaker");

	UScripts_BeginTradeWithSpeaker_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.BarOCL
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   OCLObjectID                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UScripts::STATIC_BarOCL(const struct FGuid& OCLObjectID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.BarOCL");

	UScripts_BarOCL_Params params;
	params.OCLObjectID = OCLObjectID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.AttemptEnableHazard
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   HazardActorID                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_AttemptEnableHazard(const struct FGuid& HazardActorID, bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.AttemptEnableHazard");

	UScripts_AttemptEnableHazard_Params params;
	params.HazardActorID = HazardActorID;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.ArmTrap
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   TrapObjectID                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UScripts::STATIC_ArmTrap(const struct FGuid& TrapObjectID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.ArmTrap");

	UScripts_ArmTrap_Params params;
	params.TrapObjectID = TrapObjectID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.AdvanceToHour
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            TargetHour                     (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_AdvanceToHour(int TargetHour)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.AdvanceToHour");

	UScripts_AdvanceToHour_Params params;
	params.TargetHour = TargetHour;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.AdvanceTime
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Days                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          Hours                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          Minutes                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          Seconds                        (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_AdvanceTime(float Days, float Hours, float Minutes, float Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.AdvanceTime");

	UScripts_AdvanceTime_Params params;
	params.Days = Days;
	params.Hours = Hours;
	params.Minutes = Minutes;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.AdvanceSeconds
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Seconds                        (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_AdvanceSeconds(float Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.AdvanceSeconds");

	UScripts_AdvanceSeconds_Params params;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.AdvanceQuest
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   QuestID                        (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_AdvanceQuest(const struct FGuid& QuestID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.AdvanceQuest");

	UScripts_AdvanceQuest_Params params;
	params.QuestID = QuestID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.AdvanceMinutes
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Minutes                        (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_AdvanceMinutes(float Minutes)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.AdvanceMinutes");

	UScripts_AdvanceMinutes_Params params;
	params.Minutes = Minutes;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.AdvanceHours
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Hours                          (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_AdvanceHours(float Hours)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.AdvanceHours");

	UScripts_AdvanceHours_Params params;
	params.Hours = Hours;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.AdvanceDays
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Days                           (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_AdvanceDays(float Days)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.AdvanceDays");

	UScripts_AdvanceDays_Params params;
	params.Days = Days;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.AdjustFactionReputation
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  Faction                        (Parm, ZeroConstructor)
// EReputationType                ReputationType                 (Parm, ZeroConstructor, IsPlainOldData)
// EReputationIncrementType       IncrementType                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            CustomAmount                   (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_AdjustFactionReputation(const class FString& Faction, EReputationType ReputationType, EReputationIncrementType IncrementType, int CustomAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.AdjustFactionReputation");

	UScripts_AdjustFactionReputation_Params params;
	params.Faction = Faction;
	params.ReputationType = ReputationType;
	params.IncrementType = IncrementType;
	params.CustomAmount = CustomAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.AdjustCompanionMoral
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ESpecialObsidianID             CompanionID                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bPositiveMoralAdjustment       (Parm, ZeroConstructor, IsPlainOldData)
// EMoraleContribution            Contribution                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          CustomAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bOnlyActivePartyMembers        (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_AdjustCompanionMoral(ESpecialObsidianID CompanionID, bool bPositiveMoralAdjustment, EMoraleContribution Contribution, float CustomAmount, bool bOnlyActivePartyMembers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.AdjustCompanionMoral");

	UScripts_AdjustCompanionMoral_Params params;
	params.CompanionID = CompanionID;
	params.bPositiveMoralAdjustment = bPositiveMoralAdjustment;
	params.Contribution = Contribution;
	params.CustomAmount = CustomAmount;
	params.bOnlyActivePartyMembers = bOnlyActivePartyMembers;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.AddCompanionToParty
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   CompanionID                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UScripts::STATIC_AddCompanionToParty(const struct FGuid& CompanionID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.AddCompanionToParty");

	UScripts_AddCompanionToParty_Params params;
	params.CompanionID = CompanionID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.AddAudioLogBP
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UAudioLogDataAsset*      audiolog                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bPlayOnPickup                  (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_AddAudioLogBP(class UAudioLogDataAsset* audiolog, bool bPlayOnPickup)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.AddAudioLogBP");

	UScripts_AddAudioLogBP_Params params;
	params.audiolog = audiolog;
	params.bPlayOnPickup = bPlayOnPickup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.AddAudioLog
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  audiolog                       (Parm, ZeroConstructor)
// bool                           bPlayOnPickup                  (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_AddAudioLog(const class FString& audiolog, bool bPlayOnPickup)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.AddAudioLog");

	UScripts_AddAudioLog_Params params;
	params.audiolog = audiolog;
	params.bPlayOnPickup = bPlayOnPickup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.AchievementIncrement
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   AchievementName                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void UScripts::STATIC_AchievementIncrement(const struct FName& AchievementName, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.AchievementIncrement");

	UScripts_AchievementIncrement_Params params;
	params.AchievementName = AchievementName;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.AchievementGameOver
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UScripts::STATIC_AchievementGameOver()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.AchievementGameOver");

	UScripts_AchievementGameOver_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Scripts.AchievementCompleted
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FName                   AchievementName                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UScripts::STATIC_AchievementCompleted(const struct FName& AchievementName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Scripts.AchievementCompleted");

	UScripts_AchievementCompleted_Params params;
	params.AchievementName = AchievementName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SelectedNotificationWidget.StopFadeOutAnimation
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USelectedNotificationWidget::STATIC_StopFadeOutAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SelectedNotificationWidget.StopFadeOutAnimation");

	USelectedNotificationWidget_StopFadeOutAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SelectedNotificationWidget.PlayNotificationAnimation
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USelectedNotificationWidget::STATIC_PlayNotificationAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SelectedNotificationWidget.PlayNotificationAnimation");

	USelectedNotificationWidget_PlayNotificationAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SelectedNotificationWidget.PlayFadeOutAnimation
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USelectedNotificationWidget::STATIC_PlayFadeOutAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SelectedNotificationWidget.PlayFadeOutAnimation");

	USelectedNotificationWidget_PlayFadeOutAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SelectedNotificationWidget.OnFadeRightAnimationEnd
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USelectedNotificationWidget::STATIC_OnFadeRightAnimationEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SelectedNotificationWidget.OnFadeRightAnimationEnd");

	USelectedNotificationWidget_OnFadeRightAnimationEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SelectedNotificationWidget.OnFadeOutAnimationEnd
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USelectedNotificationWidget::STATIC_OnFadeOutAnimationEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SelectedNotificationWidget.OnFadeOutAnimationEnd");

	USelectedNotificationWidget_OnFadeOutAnimationEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuButtonSlotWidget.OnButtonClicked
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USettingsMenuButtonSlotWidget::STATIC_OnButtonClicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuButtonSlotWidget.OnButtonClicked");

	USettingsMenuButtonSlotWidget_OnButtonClicked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuCheckBoxWidget.OnValueChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UButtonBase*             Button                         (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void USettingsMenuCheckBoxWidget::STATIC_OnValueChanged(class UButtonBase* Button)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuCheckBoxWidget.OnValueChanged");

	USettingsMenuCheckBoxWidget_OnValueChanged_Params params;
	params.Button = Button;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuComboBoxWidget.OnValueChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  SelectedItem                   (Parm, ZeroConstructor)
// TEnumAsByte<ESelectInfo>       SelectionType                  (Parm, ZeroConstructor, IsPlainOldData)

void USettingsMenuComboBoxWidget::STATIC_OnValueChanged(const class FString& SelectedItem, TEnumAsByte<ESelectInfo> SelectionType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuComboBoxWidget.OnValueChanged");

	USettingsMenuComboBoxWidget_OnValueChanged_Params params;
	params.SelectedItem = SelectedItem;
	params.SelectionType = SelectionType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuInputKeySelector.OnRightClicked
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USettingsMenuInputKeySelector::STATIC_OnRightClicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuInputKeySelector.OnRightClicked");

	USettingsMenuInputKeySelector_OnRightClicked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuInputKeySelector.OnClicked
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USettingsMenuInputKeySelector::STATIC_OnClicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuInputKeySelector.OnClicked");

	USettingsMenuInputKeySelector_OnClicked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuKeyRebindWidget.OnSecondaryIsSelectingKeyChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bIsSelectingKey                (Parm, ZeroConstructor, IsPlainOldData)

void USettingsMenuKeyRebindWidget::STATIC_OnSecondaryIsSelectingKeyChanged(bool bIsSelectingKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuKeyRebindWidget.OnSecondaryIsSelectingKeyChanged");

	USettingsMenuKeyRebindWidget_OnSecondaryIsSelectingKeyChanged_Params params;
	params.bIsSelectingKey = bIsSelectingKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuKeyRebindWidget.OnPrimaryIsSelectingKeyChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bIsSelectingKey                (Parm, ZeroConstructor, IsPlainOldData)

void USettingsMenuKeyRebindWidget::STATIC_OnPrimaryIsSelectingKeyChanged(bool bIsSelectingKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuKeyRebindWidget.OnPrimaryIsSelectingKeyChanged");

	USettingsMenuKeyRebindWidget_OnPrimaryIsSelectingKeyChanged_Params params;
	params.bIsSelectingKey = bIsSelectingKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuKeyRebindWidget.OnKeySelected
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FInputChord             InputChord                     (Parm)

void USettingsMenuKeyRebindWidget::STATIC_OnKeySelected(const struct FInputChord& InputChord)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuKeyRebindWidget.OnKeySelected");

	USettingsMenuKeyRebindWidget_OnKeySelected_Params params;
	params.InputChord = InputChord;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuKeyRebindWidget.OnContainerClicked
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USettingsMenuKeyRebindWidget::STATIC_OnContainerClicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuKeyRebindWidget.OnContainerClicked");

	USettingsMenuKeyRebindWidget_OnContainerClicked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuKeyRebindWidget.OnBack
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USettingsMenuKeyRebindWidget::STATIC_OnBack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuKeyRebindWidget.OnBack");

	USettingsMenuKeyRebindWidget_OnBack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuOptionPresenterWdgt.OnValueChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            SelectedItem                   (Parm, ZeroConstructor, IsPlainOldData)

void USettingsMenuOptionPresenterWdgt::STATIC_OnValueChanged(int SelectedItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuOptionPresenterWdgt.OnValueChanged");

	USettingsMenuOptionPresenterWdgt_OnValueChanged_Params params;
	params.SelectedItem = SelectedItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuSliderWidget.OnValueChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FSliderEvent            Event                          (ConstParm, Parm, OutParm, ReferenceParm)

void USettingsMenuSliderWidget::STATIC_OnValueChanged(const struct FSliderEvent& Event)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuSliderWidget.OnValueChanged");

	USettingsMenuSliderWidget_OnValueChanged_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuWidget.ValueChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UUserSetting*            UserSetting                    (Parm, ZeroConstructor, IsPlainOldData)

void USettingsMenuWidget::STATIC_ValueChanged(class UUserSetting* UserSetting)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuWidget.ValueChanged");

	USettingsMenuWidget_ValueChanged_Params params;
	params.UserSetting = UserSetting;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuWidget.UpdateDialogTimerText
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USettingsMenuWidget::STATIC_UpdateDialogTimerText(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuWidget.UpdateDialogTimerText");

	USettingsMenuWidget_UpdateDialogTimerText_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuWidget.SetVisualEffectQuality
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void USettingsMenuWidget::STATIC_SetVisualEffectQuality(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuWidget.SetVisualEffectQuality");

	USettingsMenuWidget_SetVisualEffectQuality_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuWidget.SetViewDistanceQuality
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void USettingsMenuWidget::STATIC_SetViewDistanceQuality(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuWidget.SetViewDistanceQuality");

	USettingsMenuWidget_SetViewDistanceQuality_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuWidget.SetTextureQuality
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void USettingsMenuWidget::STATIC_SetTextureQuality(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuWidget.SetTextureQuality");

	USettingsMenuWidget_SetTextureQuality_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuWidget.SetShadowQuality
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void USettingsMenuWidget::STATIC_SetShadowQuality(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuWidget.SetShadowQuality");

	USettingsMenuWidget_SetShadowQuality_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuWidget.SetPostProcessingQuality
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void USettingsMenuWidget::STATIC_SetPostProcessingQuality(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuWidget.SetPostProcessingQuality");

	USettingsMenuWidget_SetPostProcessingQuality_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuWidget.SetGraphicsQuality
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void USettingsMenuWidget::STATIC_SetGraphicsQuality(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuWidget.SetGraphicsQuality");

	USettingsMenuWidget_SetGraphicsQuality_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuWidget.SetFoliageQuality
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void USettingsMenuWidget::STATIC_SetFoliageQuality(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuWidget.SetFoliageQuality");

	USettingsMenuWidget_SetFoliageQuality_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuWidget.SetAntiAliasingQuality
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void USettingsMenuWidget::STATIC_SetAntiAliasingQuality(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuWidget.SetAntiAliasingQuality");

	USettingsMenuWidget_SetAntiAliasingQuality_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuWidget.SetAntiAliasingMethod
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void USettingsMenuWidget::STATIC_SetAntiAliasingMethod(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuWidget.SetAntiAliasingMethod");

	USettingsMenuWidget_SetAntiAliasingMethod_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuWidget.QueueRefreshHUDMode
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USettingsMenuWidget::STATIC_QueueRefreshHUDMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuWidget.QueueRefreshHUDMode");

	USettingsMenuWidget_QueueRefreshHUDMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuWidget.OnOpenPCKeyBinds
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USettingsMenuWidget::STATIC_OnOpenPCKeyBinds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuWidget.OnOpenPCKeyBinds");

	USettingsMenuWidget_OnOpenPCKeyBinds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuWidget.OnOpenGamepadLayout
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USettingsMenuWidget::STATIC_OnOpenGamepadLayout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuWidget.OnOpenGamepadLayout");

	USettingsMenuWidget_OnOpenGamepadLayout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuWidget.OnInputBack
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USettingsMenuWidget::STATIC_OnInputBack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuWidget.OnInputBack");

	USettingsMenuWidget_OnInputBack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuWidget.OnDetectGraphics
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USettingsMenuWidget::STATIC_OnDetectGraphics()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuWidget.OnDetectGraphics");

	USettingsMenuWidget_OnDetectGraphics_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuWidget.OnCyclePageRight
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USettingsMenuWidget::STATIC_OnCyclePageRight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuWidget.OnCyclePageRight");

	USettingsMenuWidget_OnCyclePageRight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuWidget.OnCyclePageLeft
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USettingsMenuWidget::STATIC_OnCyclePageLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuWidget.OnCyclePageLeft");

	USettingsMenuWidget_OnCyclePageLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuWidget.EmptyHandler
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USettingsMenuWidget::STATIC_EmptyHandler()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuWidget.EmptyHandler");

	USettingsMenuWidget_EmptyHandler_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SettingsMenuWidget.DefaultsActionHandler
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USettingsMenuWidget::STATIC_DefaultsActionHandler()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SettingsMenuWidget.DefaultsActionHandler");

	USettingsMenuWidget_DefaultsActionHandler_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ShipLocation.ShipLocationDeactivated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AShipLocation::STATIC_ShipLocationDeactivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ShipLocation.ShipLocationDeactivated");

	AShipLocation_ShipLocationDeactivated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ShipLocation.ShipLocationActivated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void AShipLocation::STATIC_ShipLocationActivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ShipLocation.ShipLocationActivated");

	AShipLocation_ShipLocationActivated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.ShipLocation.OnShipLocationChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UShipDestinationData*    NewLocation                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void AShipLocation::STATIC_OnShipLocationChanged(class UShipDestinationData* NewLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.ShipLocation.OnShipLocationChanged");

	AShipLocation_OnShipLocationChanged_Params params;
	params.NewLocation = NewLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SkillGroupDetailWidget.OnSkillSelected
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USkillGroupDetailWidget::STATIC_OnSkillSelected()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SkillGroupDetailWidget.OnSkillSelected");

	USkillGroupDetailWidget_OnSkillSelected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SkillStatusEffect.OnSpawnedEffectCleared
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UStatusEffect*           SpawnedEffect                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void USkillStatusEffect::STATIC_OnSpawnedEffectCleared(class UStatusEffect* SpawnedEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SkillStatusEffect.OnSpawnedEffectCleared");

	USkillStatusEffect_OnSpawnedEffectCleared_Params params;
	params.SpawnedEffect = SpawnedEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SliderBase.SetValue
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          InValue                        (Parm, ZeroConstructor, IsPlainOldData)

void USliderBase::STATIC_SetValue(float InValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SliderBase.SetValue");

	USliderBase_SetValue_Params params;
	params.InValue = InValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SliderBase.SetStepSize
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          InValue                        (Parm, ZeroConstructor, IsPlainOldData)

void USliderBase::STATIC_SetStepSize(float InValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SliderBase.SetStepSize");

	USliderBase_SetStepSize_Params params;
	params.InValue = InValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SliderBase.SetLocked
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           InValue                        (Parm, ZeroConstructor, IsPlainOldData)

void USliderBase::STATIC_SetLocked(bool InValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SliderBase.SetLocked");

	USliderBase_SetLocked_Params params;
	params.InValue = InValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SliderBase.SetIndentHandle
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           InValue                        (Parm, ZeroConstructor, IsPlainOldData)

void USliderBase::STATIC_SetIndentHandle(bool InValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SliderBase.SetIndentHandle");

	USliderBase_SetIndentHandle_Params params;
	params.InValue = InValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SliderBase.SetAndCommitValue
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          InValue                        (Parm, ZeroConstructor, IsPlainOldData)

void USliderBase::STATIC_SetAndCommitValue(float InValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SliderBase.SetAndCommitValue");

	USliderBase_SetAndCommitValue_Params params;
	params.InValue = InValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SliderBase.ModifySliderValue
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          InValue                        (Parm, ZeroConstructor, IsPlainOldData)

void USliderBase::STATIC_ModifySliderValue(float InValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SliderBase.ModifySliderValue");

	USliderBase_ModifySliderValue_Params params;
	params.InValue = InValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SliderBase.GetValue
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USliderBase::GetValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SliderBase.GetValue");

	USliderBase_GetValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.SlideshowWidget.SetSlideshowImagesAsset
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class USlideshowImageSet*      ImageSet                       (Parm, ZeroConstructor, IsPlainOldData)

void USlideshowWidget::STATIC_SetSlideshowImagesAsset(class USlideshowImageSet* ImageSet)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SlideshowWidget.SetSlideshowImagesAsset");

	USlideshowWidget_SetSlideshowImagesAsset_Params params;
	params.ImageSet = ImageSet;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SlideshowWidget.SetSlideshowImageKey
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  ImageKey                       (Parm, ZeroConstructor)

void USlideshowWidget::STATIC_SetSlideshowImageKey(const class FString& ImageKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SlideshowWidget.SetSlideshowImageKey");

	USlideshowWidget_SetSlideshowImageKey_Params params;
	params.ImageKey = ImageKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SlideshowWidget.OnSlideshowEnd
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UConversationInstance*   Instance                       (Parm, ZeroConstructor, IsPlainOldData)

void USlideshowWidget::STATIC_OnSlideshowEnd(class UConversationInstance* Instance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SlideshowWidget.OnSlideshowEnd");

	USlideshowWidget_OnSlideshowEnd_Params params;
	params.Instance = Instance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SlideshowWidget.OnCinematicSubtitleSettingChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisibleIn                     (Parm, ZeroConstructor, IsPlainOldData)

void USlideshowWidget::STATIC_OnCinematicSubtitleSettingChanged(bool bVisibleIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SlideshowWidget.OnCinematicSubtitleSettingChanged");

	USlideshowWidget_OnCinematicSubtitleSettingChanged_Params params;
	params.bVisibleIn = bVisibleIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SpeakerGameDataReference.GetWwiseChatterVoiceOverride
// ()
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString USpeakerGameDataReference::GetWwiseChatterVoiceOverride()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SpeakerGameDataReference.GetWwiseChatterVoiceOverride");

	USpeakerGameDataReference_GetWwiseChatterVoiceOverride_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.SpeakerGameDataReference.GetWwiseChatterEventOverride
// ()
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString USpeakerGameDataReference::GetWwiseChatterEventOverride()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SpeakerGameDataReference.GetWwiseChatterEventOverride");

	USpeakerGameDataReference_GetWwiseChatterEventOverride_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.SpeakerGameDataReference.GetInGameNameWithGender
// (BlueprintCosmetic)
// Parameters:
// EGender                        CharacterGender                (Parm, ZeroConstructor, IsPlainOldData)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString USpeakerGameDataReference::GetInGameNameWithGender(EGender CharacterGender)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SpeakerGameDataReference.GetInGameNameWithGender");

	USpeakerGameDataReference_GetInGameNameWithGender_Params params;
	params.CharacterGender = CharacterGender;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.SpeakerGameDataReference.GetInGameNameID
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int USpeakerGameDataReference::GetInGameNameID()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SpeakerGameDataReference.GetInGameNameID");

	USpeakerGameDataReference_GetInGameNameID_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.SpeakerGameDataReference.GetInGameName
// ()
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString USpeakerGameDataReference::GetInGameName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SpeakerGameDataReference.GetInGameName");

	USpeakerGameDataReference_GetInGameName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.SpeakerGameDataReference.GetGender
// ()
// Parameters:
// EGender                        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EGender USpeakerGameDataReference::GetGender()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SpeakerGameDataReference.GetGender");

	USpeakerGameDataReference_GetGender_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.SpeakerGameDataReference.GetChatterPrefix
// ()
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString USpeakerGameDataReference::GetChatterPrefix()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SpeakerGameDataReference.GetChatterPrefix");

	USpeakerGameDataReference_GetChatterPrefix_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.SpeakerGameDataReference.GetChatterFile
// ()
// Parameters:
// struct FGuid                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FGuid USpeakerGameDataReference::GetChatterFile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SpeakerGameDataReference.GetChatterFile");

	USpeakerGameDataReference_GetChatterFile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.SpeakerGameDataReference.GetCharacterGrouping
// ()
// Parameters:
// ECharacterGrouping             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECharacterGrouping USpeakerGameDataReference::GetCharacterGrouping()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SpeakerGameDataReference.GetCharacterGrouping");

	USpeakerGameDataReference_GetCharacterGrouping_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.SpreadManagerComponent.OnCombatStateChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bInCombat                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void USpreadManagerComponent::STATIC_OnCombatStateChange(bool bInCombat, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SpreadManagerComponent.OnCombatStateChange");

	USpreadManagerComponent_OnCombatStateChange_Params params;
	params.bInCombat = bInCombat;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SpreadManagerComponent.OnAttack
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          DurationScalar                 (Parm, ZeroConstructor, IsPlainOldData)

void USpreadManagerComponent::STATIC_OnAttack(float DurationScalar)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SpreadManagerComponent.OnAttack");

	USpreadManagerComponent_OnAttack_Params params;
	params.DurationScalar = DurationScalar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StackSplittingWidget.SetNewBackingMaterialHeight
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          NewHeight                      (Parm, ZeroConstructor, IsPlainOldData)

void UStackSplittingWidget::STATIC_SetNewBackingMaterialHeight(float NewHeight)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StackSplittingWidget.SetNewBackingMaterialHeight");

	UStackSplittingWidget_SetNewBackingMaterialHeight_Params params;
	params.NewHeight = NewHeight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StackSplittingWidget.OnStackSplitMin
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UStackSplittingWidget::STATIC_OnStackSplitMin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StackSplittingWidget.OnStackSplitMin");

	UStackSplittingWidget_OnStackSplitMin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StackSplittingWidget.OnStackSplitMax
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UStackSplittingWidget::STATIC_OnStackSplitMax()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StackSplittingWidget.OnStackSplitMax");

	UStackSplittingWidget_OnStackSplitMax_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StackSplittingWidget.OnSliderValueChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FSliderEvent            Event                          (ConstParm, Parm, OutParm, ReferenceParm)

void UStackSplittingWidget::STATIC_OnSliderValueChanged(const struct FSliderEvent& Event)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StackSplittingWidget.OnSliderValueChanged");

	UStackSplittingWidget_OnSliderValueChanged_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StackSplittingWidget.OnInputConfirm
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UStackSplittingWidget::STATIC_OnInputConfirm()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StackSplittingWidget.OnInputConfirm");

	UStackSplittingWidget_OnInputConfirm_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StackSplittingWidget.OnInputBack
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UStackSplittingWidget::STATIC_OnInputBack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StackSplittingWidget.OnInputBack");

	UStackSplittingWidget_OnInputBack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StaminaComponent.StaminaReplenish
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UStaminaComponent::STATIC_StaminaReplenish(float Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StaminaComponent.StaminaReplenish");

	UStaminaComponent_StaminaReplenish_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StaminaComponent.StaminaConsume
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UStaminaComponent::STATIC_StaminaConsume(float Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StaminaComponent.StaminaConsume");

	UStaminaComponent_StaminaConsume_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StaminaComponent.OnCauseDamage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FCauseDamageInfo        CauseDamageInfo                (ConstParm, Parm, OutParm, ReferenceParm)

void UStaminaComponent::STATIC_OnCauseDamage(const struct FCauseDamageInfo& CauseDamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StaminaComponent.OnCauseDamage");

	UStaminaComponent_OnCauseDamage_Params params;
	params.CauseDamageInfo = CauseDamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StaminaComponent.GetValue
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UStaminaComponent::GetValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StaminaComponent.GetValue");

	UStaminaComponent_GetValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.StaminaComponent.GetNormalizedValue
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UStaminaComponent::GetNormalizedValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StaminaComponent.GetNormalizedValue");

	UStaminaComponent_GetNormalizedValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.StaminaComponent.GetMaxValue
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UStaminaComponent::GetMaxValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StaminaComponent.GetMaxValue");

	UStaminaComponent_GetMaxValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.StatModifierStatusEffect.OnSkillUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ESkill                         UpdatedSkill                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            NewValue                       (Parm, ZeroConstructor, IsPlainOldData)

void UStatModifierStatusEffect::STATIC_OnSkillUpdated(ESkill UpdatedSkill, int NewValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatModifierStatusEffect.OnSkillUpdated");

	UStatModifierStatusEffect_OnSkillUpdated_Params params;
	params.UpdatedSkill = UpdatedSkill;
	params.NewValue = NewValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatsPerksPageWidget.OnRevertAllocationsClicked
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UStatsPerksPageWidget::STATIC_OnRevertAllocationsClicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatsPerksPageWidget.OnRevertAllocationsClicked");

	UStatsPerksPageWidget_OnRevertAllocationsClicked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatsPerksPageWidget.OnInputBack
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UStatsPerksPageWidget::STATIC_OnInputBack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatsPerksPageWidget.OnInputBack");

	UStatsPerksPageWidget_OnInputBack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatsPerksPageWidget.OnDeallocation
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UStatsPerksPageWidget::STATIC_OnDeallocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatsPerksPageWidget.OnDeallocation");

	UStatsPerksPageWidget_OnDeallocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatsPerksPageWidget.OnAllocation
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UStatsPerksPageWidget::STATIC_OnAllocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatsPerksPageWidget.OnAllocation");

	UStatsPerksPageWidget_OnAllocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatsPerksPageWidget.OnAcceptAllocations
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UStatsPerksPageWidget::STATIC_OnAcceptAllocations()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatsPerksPageWidget.OnAcceptAllocations");

	UStatsPerksPageWidget_OnAcceptAllocations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatsSkillsPageWidget.OnSkillUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ESkill                         Skill                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UStatsSkillsPageWidget::STATIC_OnSkillUpdated(ESkill Skill, int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatsSkillsPageWidget.OnSkillUpdated");

	UStatsSkillsPageWidget_OnSkillUpdated_Params params;
	params.Skill = Skill;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatsSkillsPageWidget.OnResetAllAllocations
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UStatsSkillsPageWidget::STATIC_OnResetAllAllocations()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatsSkillsPageWidget.OnResetAllAllocations");

	UStatsSkillsPageWidget_OnResetAllAllocations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatsSkillsPageWidget.OnPlayerLevelUp
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            NewLevel                       (Parm, ZeroConstructor, IsPlainOldData)

void UStatsSkillsPageWidget::STATIC_OnPlayerLevelUp(int NewLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatsSkillsPageWidget.OnPlayerLevelUp");

	UStatsSkillsPageWidget_OnPlayerLevelUp_Params params;
	params.NewLevel = NewLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatsSkillsPageWidget.OnLedgerToggle
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UStatsSkillsPageWidget::STATIC_OnLedgerToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatsSkillsPageWidget.OnLedgerToggle");

	UStatsSkillsPageWidget_OnLedgerToggle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatsSkillsPageWidget.OnInputBack
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UStatsSkillsPageWidget::STATIC_OnInputBack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatsSkillsPageWidget.OnInputBack");

	UStatsSkillsPageWidget_OnInputBack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatsSkillsPageWidget.OnAllocation
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UStatsSkillsPageWidget::STATIC_OnAllocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatsSkillsPageWidget.OnAllocation");

	UStatsSkillsPageWidget_OnAllocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusEffectBarEntryWidget.ResetWidgetState
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          DesiredRenderOpacity           (Parm, ZeroConstructor, IsPlainOldData)

void UStatusEffectBarEntryWidget::STATIC_ResetWidgetState(float DesiredRenderOpacity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffectBarEntryWidget.ResetWidgetState");

	UStatusEffectBarEntryWidget_ResetWidgetState_Params params;
	params.DesiredRenderOpacity = DesiredRenderOpacity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusEffectBarEntryWidget.OnAnimComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UStatusEffectBarEntryWidget::STATIC_OnAnimComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffectBarEntryWidget.OnAnimComplete");

	UStatusEffectBarEntryWidget_OnAnimComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusEffectBarEntryWidget.AnimateOut
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UStatusEffectBarEntryWidget::STATIC_AnimateOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffectBarEntryWidget.AnimateOut");

	UStatusEffectBarEntryWidget_AnimateOut_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusEffectBarEntryWidget.AnimateIn
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UStatusEffectBarEntryWidget::STATIC_AnimateIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffectBarEntryWidget.AnimateIn");

	UStatusEffectBarEntryWidget_AnimateIn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusEffectBarWidget.OnStatusEffectRemoved
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UStatusEffectManagerComponent* Sender                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UStatusEffect*           StatusEffect                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UStatusEffectBarWidget::STATIC_OnStatusEffectRemoved(class UStatusEffectManagerComponent* Sender, class UStatusEffect* StatusEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffectBarWidget.OnStatusEffectRemoved");

	UStatusEffectBarWidget_OnStatusEffectRemoved_Params params;
	params.Sender = Sender;
	params.StatusEffect = StatusEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusEffectBarWidget.OnStatusEffectAdded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UStatusEffectManagerComponent* Sender                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UStatusEffect*           StatusEffect                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UStatusEffectBarWidget::STATIC_OnStatusEffectAdded(class UStatusEffectManagerComponent* Sender, class UStatusEffect* StatusEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffectBarWidget.OnStatusEffectAdded");

	UStatusEffectBarWidget_OnStatusEffectAdded_Params params;
	params.Sender = Sender;
	params.StatusEffect = StatusEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusEffectManagerComponent.RemoveStatusEffectsOfClass
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UClass*                  Data                           (Parm, ZeroConstructor, IsPlainOldData)

void UStatusEffectManagerComponent::STATIC_RemoveStatusEffectsOfClass(class UClass* Data)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffectManagerComponent.RemoveStatusEffectsOfClass");

	UStatusEffectManagerComponent_RemoveStatusEffectsOfClass_Params params;
	params.Data = Data;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusEffectManagerComponent.PreventHostileStatusEffectsOnCompanions
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bPreventHostileStatusEffectsIn (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bShouldClear                   (Parm, ZeroConstructor, IsPlainOldData)

void UStatusEffectManagerComponent::STATIC_PreventHostileStatusEffectsOnCompanions(bool bPreventHostileStatusEffectsIn, bool bShouldClear)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffectManagerComponent.PreventHostileStatusEffectsOnCompanions");

	UStatusEffectManagerComponent_PreventHostileStatusEffectsOnCompanions_Params params;
	params.bPreventHostileStatusEffectsIn = bPreventHostileStatusEffectsIn;
	params.bShouldClear = bShouldClear;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusEffectManagerComponent.PreventHostileStatusEffectsNPC
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bPreventHostileStatusEffectsIn (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bShouldClear                   (Parm, ZeroConstructor, IsPlainOldData)

void UStatusEffectManagerComponent::STATIC_PreventHostileStatusEffectsNPC(bool bPreventHostileStatusEffectsIn, bool bShouldClear)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffectManagerComponent.PreventHostileStatusEffectsNPC");

	UStatusEffectManagerComponent_PreventHostileStatusEffectsNPC_Params params;
	params.bPreventHostileStatusEffectsIn = bPreventHostileStatusEffectsIn;
	params.bShouldClear = bShouldClear;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusEffectManagerComponent.PreventHostileStatusEffects
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bPreventHostileStatusEffectsIn (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bShouldClear                   (Parm, ZeroConstructor, IsPlainOldData)

void UStatusEffectManagerComponent::STATIC_PreventHostileStatusEffects(bool bPreventHostileStatusEffectsIn, bool bShouldClear)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffectManagerComponent.PreventHostileStatusEffects");

	UStatusEffectManagerComponent_PreventHostileStatusEffects_Params params;
	params.bPreventHostileStatusEffectsIn = bPreventHostileStatusEffectsIn;
	params.bShouldClear = bShouldClear;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusEffectManagerComponent.PreventAllStatusEffectsOnCompanions
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bPreventStatusEffectsIn        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bShouldClear                   (Parm, ZeroConstructor, IsPlainOldData)

void UStatusEffectManagerComponent::STATIC_PreventAllStatusEffectsOnCompanions(bool bPreventStatusEffectsIn, bool bShouldClear)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffectManagerComponent.PreventAllStatusEffectsOnCompanions");

	UStatusEffectManagerComponent_PreventAllStatusEffectsOnCompanions_Params params;
	params.bPreventStatusEffectsIn = bPreventStatusEffectsIn;
	params.bShouldClear = bShouldClear;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusEffectManagerComponent.PreventAllStatusEffectsNPC
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bPreventStatusEffectsIn        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bShouldClear                   (Parm, ZeroConstructor, IsPlainOldData)

void UStatusEffectManagerComponent::STATIC_PreventAllStatusEffectsNPC(bool bPreventStatusEffectsIn, bool bShouldClear)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffectManagerComponent.PreventAllStatusEffectsNPC");

	UStatusEffectManagerComponent_PreventAllStatusEffectsNPC_Params params;
	params.bPreventStatusEffectsIn = bPreventStatusEffectsIn;
	params.bShouldClear = bShouldClear;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusEffectManagerComponent.PreventAllStatusEffects
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bPreventStatusEffectsIn        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bShouldClear                   (Parm, ZeroConstructor, IsPlainOldData)

void UStatusEffectManagerComponent::STATIC_PreventAllStatusEffects(bool bPreventStatusEffectsIn, bool bShouldClear)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffectManagerComponent.PreventAllStatusEffects");

	UStatusEffectManagerComponent_PreventAllStatusEffects_Params params;
	params.bPreventStatusEffectsIn = bPreventStatusEffectsIn;
	params.bShouldClear = bShouldClear;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusEffectManagerComponent.OnRestoredStateOfBeing
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EStateOfBeing                  RestoredStateOfBeing           (Parm, ZeroConstructor, IsPlainOldData)

void UStatusEffectManagerComponent::STATIC_OnRestoredStateOfBeing(EStateOfBeing RestoredStateOfBeing)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffectManagerComponent.OnRestoredStateOfBeing");

	UStatusEffectManagerComponent_OnRestoredStateOfBeing_Params params;
	params.RestoredStateOfBeing = RestoredStateOfBeing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusEffectManagerComponent.OnNewStateOfBeing
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EStateOfBeing                  NewStateOfBeing                (Parm, ZeroConstructor, IsPlainOldData)
// EStateOfBeing                  OldStateOfBeing                (Parm, ZeroConstructor, IsPlainOldData)

void UStatusEffectManagerComponent::STATIC_OnNewStateOfBeing(EStateOfBeing NewStateOfBeing, EStateOfBeing OldStateOfBeing)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffectManagerComponent.OnNewStateOfBeing");

	UStatusEffectManagerComponent_OnNewStateOfBeing_Params params;
	params.NewStateOfBeing = NewStateOfBeing;
	params.OldStateOfBeing = OldStateOfBeing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusEffectManagerComponent.ClearStatusEffectOnCompanions
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  Name                           (Parm, ZeroConstructor)

void UStatusEffectManagerComponent::STATIC_ClearStatusEffectOnCompanions(const class FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffectManagerComponent.ClearStatusEffectOnCompanions");

	UStatusEffectManagerComponent_ClearStatusEffectOnCompanions_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusEffectManagerComponent.ClearStatusEffectNPC
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  Name                           (Parm, ZeroConstructor)

void UStatusEffectManagerComponent::STATIC_ClearStatusEffectNPC(const class FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffectManagerComponent.ClearStatusEffectNPC");

	UStatusEffectManagerComponent_ClearStatusEffectNPC_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusEffectManagerComponent.ClearStatusEffect
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  Name                           (Parm, ZeroConstructor)

void UStatusEffectManagerComponent::STATIC_ClearStatusEffect(const class FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffectManagerComponent.ClearStatusEffect");

	UStatusEffectManagerComponent_ClearStatusEffect_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusEffectManagerComponent.ClearAllStatusEffectsOnCompanions
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bOnlyHostile                   (Parm, ZeroConstructor, IsPlainOldData)

void UStatusEffectManagerComponent::STATIC_ClearAllStatusEffectsOnCompanions(bool bOnlyHostile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffectManagerComponent.ClearAllStatusEffectsOnCompanions");

	UStatusEffectManagerComponent_ClearAllStatusEffectsOnCompanions_Params params;
	params.bOnlyHostile = bOnlyHostile;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusEffectManagerComponent.ClearAllStatusEffectsNPC
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bOnlyHostile                   (Parm, ZeroConstructor, IsPlainOldData)

void UStatusEffectManagerComponent::STATIC_ClearAllStatusEffectsNPC(bool bOnlyHostile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffectManagerComponent.ClearAllStatusEffectsNPC");

	UStatusEffectManagerComponent_ClearAllStatusEffectsNPC_Params params;
	params.bOnlyHostile = bOnlyHostile;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusEffectManagerComponent.ClearAllStatusEffects
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bOnlyHostile                   (Parm, ZeroConstructor, IsPlainOldData)

void UStatusEffectManagerComponent::STATIC_ClearAllStatusEffects(bool bOnlyHostile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffectManagerComponent.ClearAllStatusEffects");

	UStatusEffectManagerComponent_ClearAllStatusEffects_Params params;
	params.bOnlyHostile = bOnlyHostile;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusEffectManagerComponent.BPAddEffect
// (Net)
// Parameters:
// class UClass*                  Data                           (Parm, ZeroConstructor, IsPlainOldData)
// TScriptInterface<class UStatusEffectOrigin> Origin                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FDynamicEffectProperties AddProperties                  (ConstParm, Parm, OutParm, ReferenceParm)
// class UStatusEffect*           ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UStatusEffect* UStatusEffectManagerComponent::BPAddEffect(class UClass* Data, const TScriptInterface<class UStatusEffectOrigin>& Origin, const struct FDynamicEffectProperties& AddProperties)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffectManagerComponent.BPAddEffect");

	UStatusEffectManagerComponent_BPAddEffect_Params params;
	params.Data = Data;
	params.Origin = Origin;
	params.AddProperties = AddProperties;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.StatusEffectManagerComponent.AddStatusEffectToCompanions
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  Name                           (Parm, ZeroConstructor)

void UStatusEffectManagerComponent::STATIC_AddStatusEffectToCompanions(const class FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffectManagerComponent.AddStatusEffectToCompanions");

	UStatusEffectManagerComponent_AddStatusEffectToCompanions_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusEffectManagerComponent.AddStatusEffectNPC
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  Name                           (Parm, ZeroConstructor)

void UStatusEffectManagerComponent::STATIC_AddStatusEffectNPC(const class FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffectManagerComponent.AddStatusEffectNPC");

	UStatusEffectManagerComponent_AddStatusEffectNPC_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusEffectManagerComponent.AddStatusEffect
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  Name                           (Parm, ZeroConstructor)

void UStatusEffectManagerComponent::STATIC_AddStatusEffect(const class FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffectManagerComponent.AddStatusEffect");

	UStatusEffectManagerComponent_AddStatusEffect_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusEffectTagEntryWidget.OnImageSet
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UStatusEffectTagEntryWidget::STATIC_OnImageSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffectTagEntryWidget.OnImageSet");

	UStatusEffectTagEntryWidget_OnImageSet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusEffectTagWidget.OnStatusEffectRemoved
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UStatusEffectManagerComponent* Sender                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UStatusEffect*           StatusEffect                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UStatusEffectTagWidget::STATIC_OnStatusEffectRemoved(class UStatusEffectManagerComponent* Sender, class UStatusEffect* StatusEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffectTagWidget.OnStatusEffectRemoved");

	UStatusEffectTagWidget_OnStatusEffectRemoved_Params params;
	params.Sender = Sender;
	params.StatusEffect = StatusEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusEffectTagWidget.OnStatusEffectAdded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UStatusEffectManagerComponent* Sender                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UStatusEffect*           StatusEffect                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UStatusEffectTagWidget::STATIC_OnStatusEffectAdded(class UStatusEffectManagerComponent* Sender, class UStatusEffect* StatusEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusEffectTagWidget.OnStatusEffectAdded");

	UStatusEffectTagWidget_OnStatusEffectAdded_Params params;
	params.Sender = Sender;
	params.StatusEffect = StatusEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusTagAwarenessWidget.SetTextures
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UTexture2D*              BackingTexture                 (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              FillTexture                    (Parm, ZeroConstructor, IsPlainOldData)

void UStatusTagAwarenessWidget::STATIC_SetTextures(class UTexture2D* BackingTexture, class UTexture2D* FillTexture)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusTagAwarenessWidget.SetTextures");

	UStatusTagAwarenessWidget_SetTextures_Params params;
	params.BackingTexture = BackingTexture;
	params.FillTexture = FillTexture;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusTagAwarenessWidget.SetTalkImage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UTexture2D*              TalkTexture                    (Parm, ZeroConstructor, IsPlainOldData)

void UStatusTagAwarenessWidget::STATIC_SetTalkImage(class UTexture2D* TalkTexture)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusTagAwarenessWidget.SetTalkImage");

	UStatusTagAwarenessWidget_SetTalkImage_Params params;
	params.TalkTexture = TalkTexture;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusTagWidget.OnSetPlayerTargeted
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bIsTarget                      (Parm, ZeroConstructor, IsPlainOldData)

void UStatusTagWidget::STATIC_OnSetPlayerTargeted(bool bIsTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusTagWidget.OnSetPlayerTargeted");

	UStatusTagWidget_OnSetPlayerTargeted_Params params;
	params.bIsTarget = bIsTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusTagWidget.OnMeterVisibilityChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void UStatusTagWidget::STATIC_OnMeterVisibilityChanged(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusTagWidget.OnMeterVisibilityChanged");

	UStatusTagWidget_OnMeterVisibilityChanged_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusTagWidget.OnHUDVisibilityChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void UStatusTagWidget::STATIC_OnHUDVisibilityChanged(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusTagWidget.OnHUDVisibilityChanged");

	UStatusTagWidget_OnHUDVisibilityChanged_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusTagWidget.OnHealthBarModeChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            ModeIn                         (Parm, ZeroConstructor, IsPlainOldData)

void UStatusTagWidget::STATIC_OnHealthBarModeChanged(int ModeIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusTagWidget.OnHealthBarModeChanged");

	UStatusTagWidget_OnHealthBarModeChanged_Params params;
	params.ModeIn = ModeIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StatusTagWidget.OnCombatStateChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bCombatIn                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void UStatusTagWidget::STATIC_OnCombatStateChanged(bool bCombatIn, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StatusTagWidget.OnCombatStateChanged");

	UStatusTagWidget_OnCombatStateChanged_Params params;
	params.bCombatIn = bCombatIn;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StealthComponent.OnStopStealth
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UStealthComponent::STATIC_OnStopStealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StealthComponent.OnStopStealth");

	UStealthComponent_OnStopStealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StealthComponent.OnStartStealth
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UStealthComponent::STATIC_OnStartStealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StealthComponent.OnStartStealth");

	UStealthComponent_OnStartStealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StealthComponent.OnPickpocketDetectionChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  TargetActor                    (Parm, ZeroConstructor, IsPlainOldData)
// EAlertState                    PreviousAlertState             (Parm, ZeroConstructor, IsPlainOldData)
// EAlertState                    TargetAlertState               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void UStealthComponent::STATIC_OnPickpocketDetectionChange(class AActor* TargetActor, EAlertState PreviousAlertState, EAlertState TargetAlertState, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StealthComponent.OnPickpocketDetectionChange");

	UStealthComponent_OnPickpocketDetectionChange_Params params;
	params.TargetActor = TargetActor;
	params.PreviousAlertState = PreviousAlertState;
	params.TargetAlertState = TargetAlertState;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.StealthComponent.OnBumped
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  SelfActor                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UStealthComponent::STATIC_OnBumped(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.StealthComponent.OnBumped");

	UStealthComponent_OnBumped_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SubtitleManagerWidget.OnCinematicSubtitleVisibilityChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void USubtitleManagerWidget::STATIC_OnCinematicSubtitleVisibilityChanged(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SubtitleManagerWidget.OnCinematicSubtitleVisibilityChanged");

	USubtitleManagerWidget_OnCinematicSubtitleVisibilityChanged_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SubtitlesWidget.SetSizeBoxRatio
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          HorizontalRatio                (Parm, ZeroConstructor, IsPlainOldData)
// float                          VerticalRatio                  (Parm, ZeroConstructor, IsPlainOldData)

void USubtitlesWidget::STATIC_SetSizeBoxRatio(float HorizontalRatio, float VerticalRatio)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SubtitlesWidget.SetSizeBoxRatio");

	USubtitlesWidget_SetSizeBoxRatio_Params params;
	params.HorizontalRatio = HorizontalRatio;
	params.VerticalRatio = VerticalRatio;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SubtitlesWidget.OnBarkSubtitleVisibilityChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void USubtitlesWidget::STATIC_OnBarkSubtitleVisibilityChanged(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SubtitlesWidget.OnBarkSubtitleVisibilityChanged");

	USubtitlesWidget_OnBarkSubtitleVisibilityChanged_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SurvivalBarGroupWidget.OnSubSurvivalBarUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USurvivalBarGroupWidget::STATIC_OnSubSurvivalBarUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SurvivalBarGroupWidget.OnSubSurvivalBarUpdated");

	USurvivalBarGroupWidget_OnSubSurvivalBarUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SurvivalBarGroupWidget.OnDifficultyChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EGameDifficulty                NewDifficulty                  (Parm, ZeroConstructor, IsPlainOldData)

void USurvivalBarGroupWidget::STATIC_OnDifficultyChanged(EGameDifficulty NewDifficulty)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SurvivalBarGroupWidget.OnDifficultyChanged");

	USurvivalBarGroupWidget_OnDifficultyChanged_Params params;
	params.NewDifficulty = NewDifficulty;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SurvivalBarWidget.OnDifficultyChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EGameDifficulty                DifficultyIn                   (Parm, ZeroConstructor, IsPlainOldData)

void USurvivalBarWidget::STATIC_OnDifficultyChanged(EGameDifficulty DifficultyIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SurvivalBarWidget.OnDifficultyChanged");

	USurvivalBarWidget_OnDifficultyChanged_Params params;
	params.DifficultyIn = DifficultyIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Switch.SetCurrentState
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            NewState                       (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Initiator                      (Parm, ZeroConstructor, IsPlainOldData)

void ASwitch::STATIC_SetCurrentState(int NewState, class AActor* Initiator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Switch.SetCurrentState");

	ASwitch_SetCurrentState_Params params;
	params.NewState = NewState;
	params.Initiator = Initiator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Switch.GetCurrentState
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASwitch::GetCurrentState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Switch.GetCurrentState");

	ASwitch_GetCurrentState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Switch.CycleNextState
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Initiator                      (Parm, ZeroConstructor, IsPlainOldData)

void ASwitch::STATIC_CycleNextState(class AActor* Initiator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Switch.CycleNextState");

	ASwitch_CycleNextState_Params params;
	params.Initiator = Initiator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SwitchAudioComponent.Stop
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ESwitchEventType               Type                           (Parm, ZeroConstructor, IsPlainOldData)

void USwitchAudioComponent::STATIC_Stop(ESwitchEventType Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SwitchAudioComponent.Stop");

	USwitchAudioComponent_Stop_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SwitchAudioComponent.Play
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ESwitchEventType               Type                           (Parm, ZeroConstructor, IsPlainOldData)

void USwitchAudioComponent::STATIC_Play(ESwitchEventType Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SwitchAudioComponent.Play");

	USwitchAudioComponent_Play_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SystemMapSelectionEntryWidget.OnEntryUnhoveredUnfocused
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USystemMapSelectionEntryWidget::STATIC_OnEntryUnhoveredUnfocused()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SystemMapSelectionEntryWidget.OnEntryUnhoveredUnfocused");

	USystemMapSelectionEntryWidget_OnEntryUnhoveredUnfocused_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.SystemMapSelectionEntryWidget.OnEntryHoveredFocused
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void USystemMapSelectionEntryWidget::STATIC_OnEntryHoveredFocused()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.SystemMapSelectionEntryWidget.OnEntryHoveredFocused");

	USystemMapSelectionEntryWidget_OnEntryHoveredFocused_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TacticalTimeDilationComponent.PreventTTD
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bPrevent                       (Parm, ZeroConstructor, IsPlainOldData)

void UTacticalTimeDilationComponent::STATIC_PreventTTD(bool bPrevent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TacticalTimeDilationComponent.PreventTTD");

	UTacticalTimeDilationComponent_PreventTTD_Params params;
	params.bPrevent = bPrevent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TacticalTimeDilationComponent.OnStatUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class URpgStat*                Stat                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UTacticalTimeDilationComponent::STATIC_OnStatUpdated(class URpgStat* Stat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TacticalTimeDilationComponent.OnStatUpdated");

	UTacticalTimeDilationComponent_OnStatUpdated_Params params;
	params.Stat = Stat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TacticalTimeDilationComponent.OnPlayerConversationChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UConversationInstance*   Instance                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           bEntered                       (Parm, ZeroConstructor, IsPlainOldData)

void UTacticalTimeDilationComponent::STATIC_OnPlayerConversationChange(class UConversationInstance* Instance, bool bEntered)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TacticalTimeDilationComponent.OnPlayerConversationChange");

	UTacticalTimeDilationComponent_OnPlayerConversationChange_Params params;
	params.Instance = Instance;
	params.bEntered = bEntered;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TacticalTimeDilationComponent.OnDeath
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FCauseDamageInfo        CauseDamageInfo                (ConstParm, Parm, OutParm, ReferenceParm)

void UTacticalTimeDilationComponent::STATIC_OnDeath(const struct FCauseDamageInfo& CauseDamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TacticalTimeDilationComponent.OnDeath");

	UTacticalTimeDilationComponent_OnDeath_Params params;
	params.CauseDamageInfo = CauseDamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TacticalTimeDilationComponent.OnAttack
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          DurationScalar                 (Parm, ZeroConstructor, IsPlainOldData)

void UTacticalTimeDilationComponent::STATIC_OnAttack(float DurationScalar)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TacticalTimeDilationComponent.OnAttack");

	UTacticalTimeDilationComponent_OnAttack_Params params;
	params.DurationScalar = DurationScalar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TacticalTimeDilationComponent.EnableTimeDilation
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInstant                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bForce                         (Parm, ZeroConstructor, IsPlainOldData)

void UTacticalTimeDilationComponent::STATIC_EnableTimeDilation(bool bEnabled, bool bInstant, bool bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TacticalTimeDilationComponent.EnableTimeDilation");

	UTacticalTimeDilationComponent_EnableTimeDilation_Params params;
	params.bEnabled = bEnabled;
	params.bInstant = bInstant;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TacticalTimeDilationComponent.AttributeUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EAttribute                     Attribute                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            NewValue                       (Parm, ZeroConstructor, IsPlainOldData)

void UTacticalTimeDilationComponent::STATIC_AttributeUpdated(EAttribute Attribute, int NewValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TacticalTimeDilationComponent.AttributeUpdated");

	UTacticalTimeDilationComponent_AttributeUpdated_Params params;
	params.Attribute = Attribute;
	params.NewValue = NewValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TargetableComponent.OnStateOfBeingChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EStateOfBeing                  NewStateOfBeing                (Parm, ZeroConstructor, IsPlainOldData)
// EStateOfBeing                  OldStateOfBeing                (Parm, ZeroConstructor, IsPlainOldData)

void UTargetableComponent::STATIC_OnStateOfBeingChanged(EStateOfBeing NewStateOfBeing, EStateOfBeing OldStateOfBeing)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TargetableComponent.OnStateOfBeingChanged");

	UTargetableComponent_OnStateOfBeingChanged_Params params;
	params.NewStateOfBeing = NewStateOfBeing;
	params.OldStateOfBeing = OldStateOfBeing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TargetableComponent.OnActionToggled
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ETogglableAction               ToggleActionType               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIsToggled                     (Parm, ZeroConstructor, IsPlainOldData)

void UTargetableComponent::STATIC_OnActionToggled(ETogglableAction ToggleActionType, bool bIsToggled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TargetableComponent.OnActionToggled");

	UTargetableComponent_OnActionToggled_Params params;
	params.ToggleActionType = ToggleActionType;
	params.bIsToggled = bIsToggled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TeamComponent.SetRelationshipToPlayer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// TEnumAsByte<ETeamAttitude>     InRelationship                 (Parm, ZeroConstructor, IsPlainOldData)
// EChangeRelationshipSource      InSource                       (Parm, ZeroConstructor, IsPlainOldData)
// ECrimeType                     InCrimeType                    (Parm, ZeroConstructor, IsPlainOldData)

void UTeamComponent::STATIC_SetRelationshipToPlayer(TEnumAsByte<ETeamAttitude> InRelationship, EChangeRelationshipSource InSource, ECrimeType InCrimeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TeamComponent.SetRelationshipToPlayer");

	UTeamComponent_SetRelationshipToPlayer_Params params;
	params.InRelationship = InRelationship;
	params.InSource = InSource;
	params.InCrimeType = InCrimeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TeamComponent.OnTakeDamage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FCauseDamageInfo        DamageInfo                     (ConstParm, Parm, OutParm, ReferenceParm)

void UTeamComponent::STATIC_OnTakeDamage(const struct FCauseDamageInfo& DamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TeamComponent.OnTakeDamage");

	UTeamComponent_OnTakeDamage_Params params;
	params.DamageInfo = DamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TeamComponent.OnDetectedPlayerCrime
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ECrimeType                     InCrimeType                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bPlayerDisguised               (Parm, ZeroConstructor, IsPlainOldData)
// EInterrogationResult           InInterrogationResult          (Parm, ZeroConstructor, IsPlainOldData)

void UTeamComponent::STATIC_OnDetectedPlayerCrime(ECrimeType InCrimeType, bool bPlayerDisguised, EInterrogationResult InInterrogationResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TeamComponent.OnDetectedPlayerCrime");

	UTeamComponent_OnDetectedPlayerCrime_Params params;
	params.InCrimeType = InCrimeType;
	params.bPlayerDisguised = bPlayerDisguised;
	params.InInterrogationResult = InInterrogationResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TeamComponent.OnDeath
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FCauseDamageInfo        DamageInfo                     (ConstParm, Parm, OutParm, ReferenceParm)

void UTeamComponent::STATIC_OnDeath(const struct FCauseDamageInfo& DamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TeamComponent.OnDeath");

	UTeamComponent_OnDeath_Params params;
	params.DamageInfo = DamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TeamComponent.GetRelationshipWithTeam
// (BlueprintCosmetic)
// Parameters:
// class UClass*                  InTeamData                     (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ETeamAttitude>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<ETeamAttitude> UTeamComponent::GetRelationshipWithTeam(class UClass* InTeamData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TeamComponent.GetRelationshipWithTeam");

	UTeamComponent_GetRelationshipWithTeam_Params params;
	params.InTeamData = InTeamData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.TeamComponent.GetRelationshipWithPlayer
// ()
// Parameters:
// TEnumAsByte<ETeamAttitude>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<ETeamAttitude> UTeamComponent::GetRelationshipWithPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TeamComponent.GetRelationshipWithPlayer");

	UTeamComponent_GetRelationshipWithPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.TeamComponent.GetRelationship
// (BlueprintCosmetic)
// Parameters:
// class AActor*                  InActor                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ETeamAttitude>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<ETeamAttitude> UTeamComponent::GetRelationship(class AActor* InActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TeamComponent.GetRelationship");

	UTeamComponent_GetRelationship_Params params;
	params.InActor = InActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.TeamComponent.ClearRelationshipToPlayer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EChangeRelationshipSource      InSource                       (Parm, ZeroConstructor, IsPlainOldData)

void UTeamComponent::STATIC_ClearRelationshipToPlayer(EChangeRelationshipSource InSource)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TeamComponent.ClearRelationshipToPlayer");

	UTeamComponent_ClearRelationshipToPlayer_Params params;
	params.InSource = InSource;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TeamComponent.BPSetRelationshipToPlayer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaAiCharacter*     Character                      (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ETeamAttitude>     Relationship                   (Parm, ZeroConstructor, IsPlainOldData)

void UTeamComponent::STATIC_BPSetRelationshipToPlayer(class AIndianaAiCharacter* Character, TEnumAsByte<ETeamAttitude> Relationship)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TeamComponent.BPSetRelationshipToPlayer");

	UTeamComponent_BPSetRelationshipToPlayer_Params params;
	params.Character = Character;
	params.Relationship = Relationship;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TeamComponent.BPClearRelationshipToPlayer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaAiCharacter*     Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UTeamComponent::STATIC_BPClearRelationshipToPlayer(class AIndianaAiCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TeamComponent.BPClearRelationshipToPlayer");

	UTeamComponent_BPClearRelationshipToPlayer_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TeamManager.BPSetRelationship
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UClass*                  SourceTeamData                 (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  OtherTeamData                  (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ETeamAttitude>     Relationship                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bMutual                        (Parm, ZeroConstructor, IsPlainOldData)

void UTeamManager::STATIC_BPSetRelationship(class UClass* SourceTeamData, class UClass* OtherTeamData, TEnumAsByte<ETeamAttitude> Relationship, bool bMutual)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TeamManager.BPSetRelationship");

	UTeamManager_BPSetRelationship_Params params;
	params.SourceTeamData = SourceTeamData;
	params.OtherTeamData = OtherTeamData;
	params.Relationship = Relationship;
	params.bMutual = bMutual;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TeamManager.BPGetRelationship
// ()
// Parameters:
// class UClass*                  SourceTeamData                 (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  OtherTeamData                  (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ETeamAttitude>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<ETeamAttitude> UTeamManager::BPGetRelationship(class UClass* SourceTeamData, class UClass* OtherTeamData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TeamManager.BPGetRelationship");

	UTeamManager_BPGetRelationship_Params params;
	params.SourceTeamData = SourceTeamData;
	params.OtherTeamData = OtherTeamData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.TelemetryComponent.OnVendorTransactionComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            BuyingBalance                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            SellingBalance                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            RepairingBalance               (Parm, ZeroConstructor, IsPlainOldData)
// struct FItemStackSplit         ItemStackSplit                 (Parm, OutParm)

void UTelemetryComponent::STATIC_OnVendorTransactionComplete(int BuyingBalance, int SellingBalance, int RepairingBalance, struct FItemStackSplit* ItemStackSplit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TelemetryComponent.OnVendorTransactionComplete");

	UTelemetryComponent_OnVendorTransactionComplete_Params params;
	params.BuyingBalance = BuyingBalance;
	params.SellingBalance = SellingBalance;
	params.RepairingBalance = RepairingBalance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (ItemStackSplit != nullptr)
		*ItemStackSplit = params.ItemStackSplit;
}


// Function Indiana.TelemetryComponent.OnTakeDamage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FCauseDamageInfo        CauseDamageInfo                (ConstParm, Parm, OutParm, ReferenceParm)

void UTelemetryComponent::STATIC_OnTakeDamage(const struct FCauseDamageInfo& CauseDamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TelemetryComponent.OnTakeDamage");

	UTelemetryComponent_OnTakeDamage_Params params;
	params.CauseDamageInfo = CauseDamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TelemetryComponent.OnTacticalTimeDialationStarted
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTelemetryComponent::STATIC_OnTacticalTimeDialationStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TelemetryComponent.OnTacticalTimeDialationStarted");

	UTelemetryComponent_OnTacticalTimeDialationStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TelemetryComponent.OnTacticalTimeDialationEnded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void UTelemetryComponent::STATIC_OnTacticalTimeDialationEnded(float Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TelemetryComponent.OnTacticalTimeDialationEnded");

	UTelemetryComponent_OnTacticalTimeDialationEnded_Params params;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TelemetryComponent.OnStartGameSession
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UTelemetryComponent::STATIC_OnStartGameSession(const struct FGuid& Guid)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TelemetryComponent.OnStartGameSession");

	UTelemetryComponent_OnStartGameSession_Params params;
	params.Guid = Guid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TelemetryComponent.OnPlayerZoneChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class FString                  NewMapName                     (Parm, ZeroConstructor)
// class FString                  OldMapName                     (Parm, ZeroConstructor)

void UTelemetryComponent::STATIC_OnPlayerZoneChange(const struct FVector& Location, const class FString& NewMapName, const class FString& OldMapName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TelemetryComponent.OnPlayerZoneChange");

	UTelemetryComponent_OnPlayerZoneChange_Params params;
	params.Location = Location;
	params.NewMapName = NewMapName;
	params.OldMapName = OldMapName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TelemetryComponent.OnPlayerMove
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class FString                  MapName                        (Parm, ZeroConstructor)

void UTelemetryComponent::STATIC_OnPlayerMove(const struct FVector& Location, const class FString& MapName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TelemetryComponent.OnPlayerMove");

	UTelemetryComponent_OnPlayerMove_Params params;
	params.Location = Location;
	params.MapName = MapName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TelemetryComponent.OnMedKitUsed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            ConsumablesUsed                (Parm, ZeroConstructor, IsPlainOldData)

void UTelemetryComponent::STATIC_OnMedKitUsed(int ConsumablesUsed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TelemetryComponent.OnMedKitUsed");

	UTelemetryComponent_OnMedKitUsed_Params params;
	params.ConsumablesUsed = ConsumablesUsed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TelemetryComponent.OnLevelChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            Level                          (Parm, ZeroConstructor, IsPlainOldData)

void UTelemetryComponent::STATIC_OnLevelChanged(int Level)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TelemetryComponent.OnLevelChanged");

	UTelemetryComponent_OnLevelChanged_Params params;
	params.Level = Level;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TelemetryComponent.OnEndGameSession
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// TEnumAsByte<EEndPlayReason>    EndPlayReason                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UTelemetryComponent::STATIC_OnEndGameSession(TEnumAsByte<EEndPlayReason> EndPlayReason)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TelemetryComponent.OnEndGameSession");

	UTelemetryComponent_OnEndGameSession_Params params;
	params.EndPlayReason = EndPlayReason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TelemetryComponent.OnCombatStateChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bInCombat                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void UTelemetryComponent::STATIC_OnCombatStateChanged(bool bInCombat, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TelemetryComponent.OnCombatStateChanged");

	UTelemetryComponent_OnCombatStateChanged_Params params;
	params.bInCombat = bInCombat;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TelemetryComponent.OnCharacterKilled
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FCauseDamageInfo        CauseDamageInfo                (ConstParm, Parm, OutParm, ReferenceParm)

void UTelemetryComponent::STATIC_OnCharacterKilled(const struct FCauseDamageInfo& CauseDamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TelemetryComponent.OnCharacterKilled");

	UTelemetryComponent_OnCharacterKilled_Params params;
	params.CauseDamageInfo = CauseDamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TelemetryManager.SendDataKeys
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTelemetryManager::STATIC_SendDataKeys()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TelemetryManager.SendDataKeys");

	UTelemetryManager_SendDataKeys_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TestAudioDataTypeReference.GetTestAudioState
// ()
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UTestAudioDataTypeReference::GetTestAudioState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TestAudioDataTypeReference.GetTestAudioState");

	UTestAudioDataTypeReference_GetTestAudioState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.TestAudioDataTypeReference.GetTestAudioEvent
// ()
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UTestAudioDataTypeReference::GetTestAudioEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TestAudioDataTypeReference.GetTestAudioEvent");

	UTestAudioDataTypeReference_GetTestAudioEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.TestAudioDataTypeReference.GetTestAudioEnvironment
// ()
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UTestAudioDataTypeReference::GetTestAudioEnvironment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TestAudioDataTypeReference.GetTestAudioEnvironment");

	UTestAudioDataTypeReference_GetTestAudioEnvironment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.TestAudioDataTypeReference.GetTestAudioBank
// ()
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UTestAudioDataTypeReference::GetTestAudioBank()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TestAudioDataTypeReference.GetTestAudioBank");

	UTestAudioDataTypeReference_GetTestAudioBank_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.TextBlockBase.UseTextStyleShadowOffset
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bShouldUse                     (Parm, ZeroConstructor, IsPlainOldData)

void UTextBlockBase::STATIC_UseTextStyleShadowOffset(bool bShouldUse)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TextBlockBase.UseTextStyleShadowOffset");

	UTextBlockBase_UseTextStyleShadowOffset_Params params;
	params.bShouldUse = bShouldUse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TextBlockBase.UseTextStyleOutline
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bShouldUse                     (Parm, ZeroConstructor, IsPlainOldData)

void UTextBlockBase::STATIC_UseTextStyleOutline(bool bShouldUse)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TextBlockBase.UseTextStyleOutline");

	UTextBlockBase_UseTextStyleOutline_Params params;
	params.bShouldUse = bShouldUse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TextBlockBase.SetTextByLocString
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FLocString              LocString                      (ConstParm, Parm, OutParm, ReferenceParm)

void UTextBlockBase::STATIC_SetTextByLocString(const struct FLocString& LocString)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TextBlockBase.SetTextByLocString");

	UTextBlockBase_SetTextByLocString_Params params;
	params.LocString = LocString;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TextBlockBase.SetText
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class FString                  inString                       (Parm, ZeroConstructor)

void UTextBlockBase::STATIC_SetText(const class FString& inString)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TextBlockBase.SetText");

	UTextBlockBase_SetText_Params params;
	params.inString = inString;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TextBlockBase.SetShadowOffset
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FVector2D               InShadowOffset                 (Parm, ZeroConstructor, IsPlainOldData)

void UTextBlockBase::STATIC_SetShadowOffset(const struct FVector2D& InShadowOffset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TextBlockBase.SetShadowOffset");

	UTextBlockBase_SetShadowOffset_Params params;
	params.InShadowOffset = InShadowOffset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TextBlockBase.SetShadowColorAndOpacity
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FLinearColor            InShadowColorAndOpacity        (Parm, ZeroConstructor, IsPlainOldData)

void UTextBlockBase::STATIC_SetShadowColorAndOpacity(const struct FLinearColor& InShadowColorAndOpacity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TextBlockBase.SetShadowColorAndOpacity");

	UTextBlockBase_SetShadowColorAndOpacity_Params params;
	params.InShadowColorAndOpacity = InShadowColorAndOpacity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TextBlockBase.SetOutline
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FFontOutlineSettings    OutlineSettings                (Parm)

void UTextBlockBase::STATIC_SetOutline(const struct FFontOutlineSettings& OutlineSettings)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TextBlockBase.SetOutline");

	UTextBlockBase_SetOutline_Params params;
	params.OutlineSettings = OutlineSettings;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TextBlockBase.SetOpacity
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          InOpacity                      (Parm, ZeroConstructor, IsPlainOldData)

void UTextBlockBase::STATIC_SetOpacity(float InOpacity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TextBlockBase.SetOpacity");

	UTextBlockBase_SetOpacity_Params params;
	params.InOpacity = InOpacity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TextBlockBase.SetJustification
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// TEnumAsByte<ETextJustify>      InJustification                (Parm, ZeroConstructor, IsPlainOldData)

void UTextBlockBase::STATIC_SetJustification(TEnumAsByte<ETextJustify> InJustification)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TextBlockBase.SetJustification");

	UTextBlockBase_SetJustification_Params params;
	params.InJustification = InJustification;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TextBlockBase.SetFont
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FSlateFontInfo          InFontInfo                     (Parm)

void UTextBlockBase::STATIC_SetFont(const struct FSlateFontInfo& InFontInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TextBlockBase.SetFont");

	UTextBlockBase_SetFont_Params params;
	params.InFontInfo = InFontInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TextBlockBase.SetColorAndOpacity
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FSlateColor             InColorAndOpacity              (Parm)

void UTextBlockBase::STATIC_SetColorAndOpacity(const struct FSlateColor& InColorAndOpacity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TextBlockBase.SetColorAndOpacity");

	UTextBlockBase_SetColorAndOpacity_Params params;
	params.InColorAndOpacity = InColorAndOpacity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TextBlockBase.IsEmpty
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTextBlockBase::IsEmpty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TextBlockBase.IsEmpty");

	UTextBlockBase_IsEmpty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.TextBlockBase.GetText
// ()
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UTextBlockBase::GetText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TextBlockBase.GetText");

	UTextBlockBase_GetText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.TextBlockBase.GetFont
// ()
// Parameters:
// struct FSlateFontInfo          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FSlateFontInfo UTextBlockBase::GetFont()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TextBlockBase.GetFont");

	UTextBlockBase_GetFont_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.TextBlockBase.GetColorAndOpacity
// ()
// Parameters:
// struct FSlateColor             ReturnValue                    (Parm, OutParm, ReturnParm)

struct FSlateColor UTextBlockBase::GetColorAndOpacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TextBlockBase.GetColorAndOpacity");

	UTextBlockBase_GetColorAndOpacity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.TextEntryWidget.OnTextfieldCommitted
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FText                   Text                           (ConstParm, Parm, OutParm, ReferenceParm)
// TEnumAsByte<ETextCommit>       CommitType                     (Parm, ZeroConstructor, IsPlainOldData)

void UTextEntryWidget::STATIC_OnTextfieldCommitted(const struct FText& Text, TEnumAsByte<ETextCommit> CommitType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TextEntryWidget.OnTextfieldCommitted");

	UTextEntryWidget_OnTextfieldCommitted_Params params;
	params.Text = Text;
	params.CommitType = CommitType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TextEntryWidget.OnTextfieldChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FText                   Text                           (ConstParm, Parm, OutParm, ReferenceParm)

void UTextEntryWidget::STATIC_OnTextfieldChanged(const struct FText& Text)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TextEntryWidget.OnTextfieldChanged");

	UTextEntryWidget_OnTextfieldChanged_Params params;
	params.Text = Text;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TimeDilationComponent.TimeDilatePlayer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Dilation                       (Parm, ZeroConstructor, IsPlainOldData)

void UTimeDilationComponent::STATIC_TimeDilatePlayer(float Dilation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TimeDilationComponent.TimeDilatePlayer");

	UTimeDilationComponent_TimeDilatePlayer_Params params;
	params.Dilation = Dilation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TimeDilationComponent.SlomoWorld
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          Dilation                       (Parm, ZeroConstructor, IsPlainOldData)

void UTimeDilationComponent::STATIC_SlomoWorld(float Dilation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TimeDilationComponent.SlomoWorld");

	UTimeDilationComponent_SlomoWorld_Params params;
	params.Dilation = Dilation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TimeDilationComponent.OnTimeDilationStart
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTimeDilationComponent::STATIC_OnTimeDilationStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TimeDilationComponent.OnTimeDilationStart");

	UTimeDilationComponent_OnTimeDilationStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TimeDilationComponent.OnTimeDilationEnd
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTimeDilationComponent::STATIC_OnTimeDilationEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TimeDilationComponent.OnTimeDilationEnd");

	UTimeDilationComponent_OnTimeDilationEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TinkeringWidget.SetNewBackingMaterialHeight
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          NewHeight                      (Parm, ZeroConstructor, IsPlainOldData)

void UTinkeringWidget::STATIC_SetNewBackingMaterialHeight(float NewHeight)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TinkeringWidget.SetNewBackingMaterialHeight");

	UTinkeringWidget_SetNewBackingMaterialHeight_Params params;
	params.NewHeight = NewHeight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Trap.OnStatUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class URpgStat*                Stat                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void ATrap::STATIC_OnStatUpdated(class URpgStat* Stat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Trap.OnStatUpdated");

	ATrap_OnStatUpdated_Params params;
	params.Stat = Stat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Trap.OnNewStateOfBeing
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EStateOfBeing                  NewStateOfBeing                (Parm, ZeroConstructor, IsPlainOldData)
// EStateOfBeing                  OldStateOfBeing                (Parm, ZeroConstructor, IsPlainOldData)

void ATrap::STATIC_OnNewStateOfBeing(EStateOfBeing NewStateOfBeing, EStateOfBeing OldStateOfBeing)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Trap.OnNewStateOfBeing");

	ATrap_OnNewStateOfBeing_Params params;
	params.NewStateOfBeing = NewStateOfBeing;
	params.OldStateOfBeing = OldStateOfBeing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Trap.OnActivatorTrackingShapeEndOverlap
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void ATrap::STATIC_OnActivatorTrackingShapeEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Trap.OnActivatorTrackingShapeEndOverlap");

	ATrap_OnActivatorTrackingShapeEndOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Trap.OnActivatorTrackingShapeBeginOverlap
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ATrap::STATIC_OnActivatorTrackingShapeBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Trap.OnActivatorTrackingShapeBeginOverlap");

	ATrap_OnActivatorTrackingShapeBeginOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Trap.OnActivationShapeEndOverlap
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void ATrap::STATIC_OnActivationShapeEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Trap.OnActivationShapeEndOverlap");

	ATrap_OnActivationShapeEndOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Trap.OnActivationShapeBeginOverlap
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ATrap::STATIC_OnActivationShapeBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Trap.OnActivationShapeBeginOverlap");

	ATrap_OnActivationShapeBeginOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Trap.IsRearming
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATrap::IsRearming()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Trap.IsRearming");

	ATrap_IsRearming_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Trap.IsDetonationPending
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATrap::IsDetonationPending()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Trap.IsDetonationPending");

	ATrap_IsDetonationPending_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Trap.GetExactTrapDifficulty
// ()
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char ATrap::GetExactTrapDifficulty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Trap.GetExactTrapDifficulty");

	ATrap_GetExactTrapDifficulty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Trap.GetCurrentState
// ()
// Parameters:
// ETrapState                     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ETrapState ATrap::GetCurrentState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Trap.GetCurrentState");

	ATrap_GetCurrentState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Trap.GetActivatorTrackingShapeComponent
// ()
// Parameters:
// class UShapeComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UShapeComponent* ATrap::GetActivatorTrackingShapeComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Trap.GetActivatorTrackingShapeComponent");

	ATrap_GetActivatorTrackingShapeComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Trap.GetActivationShapeComponent
// ()
// Parameters:
// class UShapeComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UShapeComponent* ATrap::GetActivationShapeComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Trap.GetActivationShapeComponent");

	ATrap_GetActivationShapeComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Trap.DisarmTrap
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaCharacter*       Initiator                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFireTrapDisarmedEvent         (Parm, ZeroConstructor, IsPlainOldData)

void ATrap::STATIC_DisarmTrap(class AIndianaCharacter* Initiator, bool bFireTrapDisarmedEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Trap.DisarmTrap");

	ATrap_DisarmTrap_Params params;
	params.Initiator = Initiator;
	params.bFireTrapDisarmedEvent = bFireTrapDisarmedEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Trap.DeactivateTrap
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaCharacter*       Initiator                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFireTrapDeactivatedEvent      (Parm, ZeroConstructor, IsPlainOldData)

void ATrap::STATIC_DeactivateTrap(class AIndianaCharacter* Initiator, bool bFireTrapDeactivatedEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Trap.DeactivateTrap");

	ATrap_DeactivateTrap_Params params;
	params.Initiator = Initiator;
	params.bFireTrapDeactivatedEvent = bFireTrapDeactivatedEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Trap.ArmTrap
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaCharacter*       Initiator                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFireTrapArmedEvent            (Parm, ZeroConstructor, IsPlainOldData)

void ATrap::STATIC_ArmTrap(class AIndianaCharacter* Initiator, bool bFireTrapArmedEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Trap.ArmTrap");

	ATrap_ArmTrap_Params params;
	params.Initiator = Initiator;
	params.bFireTrapArmedEvent = bFireTrapArmedEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TrapAudioComponent.Stop
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ETrapEventType                 Type                           (Parm, ZeroConstructor, IsPlainOldData)

void UTrapAudioComponent::STATIC_Stop(ETrapEventType Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TrapAudioComponent.Stop");

	UTrapAudioComponent_Stop_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TrapAudioComponent.Play
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ETrapEventType                 Type                           (Parm, ZeroConstructor, IsPlainOldData)

void UTrapAudioComponent::STATIC_Play(ETrapEventType Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TrapAudioComponent.Play");

	UTrapAudioComponent_Play_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TrapEffectSource.ReceiveTriggerUntripped
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTrapEffectSource::STATIC_ReceiveTriggerUntripped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TrapEffectSource.ReceiveTriggerUntripped");

	UTrapEffectSource_ReceiveTriggerUntripped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TrapEffectSource.ReceiveTriggerTripped
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTrapEffectSource::STATIC_ReceiveTriggerTripped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TrapEffectSource.ReceiveTriggerTripped");

	UTrapEffectSource_ReceiveTriggerTripped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TrapEffectSource.ReceiveTriggerDisarmed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTrapEffectSource::STATIC_ReceiveTriggerDisarmed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TrapEffectSource.ReceiveTriggerDisarmed");

	UTrapEffectSource_ReceiveTriggerDisarmed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TrapEffectSource.ReceiveTriggerArmed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTrapEffectSource::STATIC_ReceiveTriggerArmed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TrapEffectSource.ReceiveTriggerArmed");

	UTrapEffectSource_ReceiveTriggerArmed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TrapEffectSource.ReceivePreDeploy
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTrapEffectSource::STATIC_ReceivePreDeploy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TrapEffectSource.ReceivePreDeploy");

	UTrapEffectSource_ReceivePreDeploy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TrapEffectSource.ReceiveDeployOrder
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTrapEffectSource::STATIC_ReceiveDeployOrder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TrapEffectSource.ReceiveDeployOrder");

	UTrapEffectSource_ReceiveDeployOrder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TrapEffectSource.GetCurrentActivators
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// TArray<class AIndianaCharacter*> OutActivators                  (Parm, OutParm, ZeroConstructor)

void UTrapEffectSource::STATIC_GetCurrentActivators(TArray<class AIndianaCharacter*>* OutActivators)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TrapEffectSource.GetCurrentActivators");

	UTrapEffectSource_GetCurrentActivators_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutActivators != nullptr)
		*OutActivators = params.OutActivators;
}


// Function Indiana.TrapTrigger.OnActivatorTrackingShapeEndOverlap
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void ATrapTrigger::STATIC_OnActivatorTrackingShapeEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TrapTrigger.OnActivatorTrackingShapeEndOverlap");

	ATrapTrigger_OnActivatorTrackingShapeEndOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TrapTrigger.OnActivatorTrackingShapeBeginOverlap
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ATrapTrigger::STATIC_OnActivatorTrackingShapeBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TrapTrigger.OnActivatorTrackingShapeBeginOverlap");

	ATrapTrigger_OnActivatorTrackingShapeBeginOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TrapTrigger.OnActivationShapeEndOverlap
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void ATrapTrigger::STATIC_OnActivationShapeEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TrapTrigger.OnActivationShapeEndOverlap");

	ATrapTrigger_OnActivationShapeEndOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TrapTrigger.OnActivationShapeBeginOverlap
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ATrapTrigger::STATIC_OnActivationShapeBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TrapTrigger.OnActivationShapeBeginOverlap");

	ATrapTrigger_OnActivationShapeBeginOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TrapTrigger.IsRearming
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATrapTrigger::IsRearming()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TrapTrigger.IsRearming");

	ATrapTrigger_IsRearming_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.TrapTrigger.IsDeploymentPending
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATrapTrigger::IsDeploymentPending()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TrapTrigger.IsDeploymentPending");

	ATrapTrigger_IsDeploymentPending_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.TrapTrigger.GetCurrentState
// ()
// Parameters:
// ETrapTriggerState              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ETrapTriggerState ATrapTrigger::GetCurrentState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TrapTrigger.GetCurrentState");

	ATrapTrigger_GetCurrentState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.TrapTrigger.DisarmTrapTrigger
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bAlertEffectSources            (Parm, ZeroConstructor, IsPlainOldData)

void ATrapTrigger::STATIC_DisarmTrapTrigger(bool bAlertEffectSources)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TrapTrigger.DisarmTrapTrigger");

	ATrapTrigger_DisarmTrapTrigger_Params params;
	params.bAlertEffectSources = bAlertEffectSources;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TrapTrigger.ChangeState
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ETrapTriggerState              State                          (Parm, ZeroConstructor, IsPlainOldData)

void ATrapTrigger::STATIC_ChangeState(ETrapTriggerState State)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TrapTrigger.ChangeState");

	ATrapTrigger_ChangeState_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TrapTrigger.ArmTrapTrigger
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void ATrapTrigger::STATIC_ArmTrapTrigger()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TrapTrigger.ArmTrapTrigger");

	ATrapTrigger_ArmTrapTrigger_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TravelDestinationData.GetDebugString
// ()
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UTravelDestinationData::GetDebugString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TravelDestinationData.GetDebugString");

	UTravelDestinationData_GetDebugString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.TravelTriggerComponent.OnOverlapActor
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  OverlappedActor                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)

void UTravelTriggerComponent::STATIC_OnOverlapActor(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TravelTriggerComponent.OnOverlapActor");

	UTravelTriggerComponent_OnOverlapActor_Params params;
	params.OverlappedActor = OverlappedActor;
	params.OtherActor = OtherActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TravelTriggerComponent.OnOpen
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  OpeningActor                   (Parm, ZeroConstructor, IsPlainOldData)

void UTravelTriggerComponent::STATIC_OnOpen(class AActor* OpeningActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TravelTriggerComponent.OnOpen");

	UTravelTriggerComponent_OnOpen_Params params;
	params.OpeningActor = OpeningActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TravelTriggerComponent.OnInteract
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FInteractionDescription Description                    (ConstParm, Parm, OutParm, ReferenceParm)

void UTravelTriggerComponent::STATIC_OnInteract(const struct FInteractionDescription& Description)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TravelTriggerComponent.OnInteract");

	UTravelTriggerComponent_OnInteract_Params params;
	params.Description = Description;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TravelTriggerComponent.GetDebugString
// ()
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UTravelTriggerComponent::GetDebugString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TravelTriggerComponent.GetDebugString");

	UTravelTriggerComponent_GetDebugString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.TravelTriggerComponent.GetAreaName
// ()
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UTravelTriggerComponent::GetAreaName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TravelTriggerComponent.GetAreaName");

	UTravelTriggerComponent_GetAreaName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.TravelTriggerComponent.GetAreaDescription
// ()
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UTravelTriggerComponent::GetAreaDescription()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TravelTriggerComponent.GetAreaDescription");

	UTravelTriggerComponent_GetAreaDescription_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.TTDEnemyScanner.StopFactionImageAnimation
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTTDEnemyScanner::STATIC_StopFactionImageAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TTDEnemyScanner.StopFactionImageAnimation");

	UTTDEnemyScanner_StopFactionImageAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TTDEnemyScanner.ScanEnded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTTDEnemyScanner::STATIC_ScanEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TTDEnemyScanner.ScanEnded");

	UTTDEnemyScanner_ScanEnded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TTDEnemyScanner.ScanCompleted
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTTDEnemyScanner::STATIC_ScanCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TTDEnemyScanner.ScanCompleted");

	UTTDEnemyScanner_ScanCompleted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TTDEnemyScanner.OnTTDScannerVisibilityChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void UTTDEnemyScanner::STATIC_OnTTDScannerVisibilityChanged(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TTDEnemyScanner.OnTTDScannerVisibilityChanged");

	UTTDEnemyScanner_OnTTDScannerVisibilityChanged_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TTDEnemyScanner.OnMakeVisible
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTTDEnemyScanner::STATIC_OnMakeVisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TTDEnemyScanner.OnMakeVisible");

	UTTDEnemyScanner_OnMakeVisible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TTDEnemyScanner.OnMakeInvisible
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTTDEnemyScanner::STATIC_OnMakeInvisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TTDEnemyScanner.OnMakeInvisible");

	UTTDEnemyScanner_OnMakeInvisible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TTDEnemyScanner.OnMadeInvisible
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTTDEnemyScanner::STATIC_OnMadeInvisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TTDEnemyScanner.OnMadeInvisible");

	UTTDEnemyScanner_OnMadeInvisible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TTDEnemyScanner.OnHUDVisibilityChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void UTTDEnemyScanner::STATIC_OnHUDVisibilityChanged(bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TTDEnemyScanner.OnHUDVisibilityChanged");

	UTTDEnemyScanner_OnHUDVisibilityChanged_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TTDEnemyScanner.OnFactionImageLoaded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTTDEnemyScanner::STATIC_OnFactionImageLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TTDEnemyScanner.OnFactionImageLoaded");

	UTTDEnemyScanner_OnFactionImageLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TTDEnemyScanner.OnActiveScannerTargetChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTTDEnemyScanner::STATIC_OnActiveScannerTargetChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TTDEnemyScanner.OnActiveScannerTargetChanged");

	UTTDEnemyScanner_OnActiveScannerTargetChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TTDStatusEffectsWidget.OnStatusEffectRemoved
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UStatusEffectManagerComponent* Sender                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UStatusEffect*           StatusEffect                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UTTDStatusEffectsWidget::STATIC_OnStatusEffectRemoved(class UStatusEffectManagerComponent* Sender, class UStatusEffect* StatusEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TTDStatusEffectsWidget.OnStatusEffectRemoved");

	UTTDStatusEffectsWidget_OnStatusEffectRemoved_Params params;
	params.Sender = Sender;
	params.StatusEffect = StatusEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TTDStatusEffectsWidget.OnStatusEffectAdded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UStatusEffectManagerComponent* Sender                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UStatusEffect*           StatusEffect                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UTTDStatusEffectsWidget::STATIC_OnStatusEffectAdded(class UStatusEffectManagerComponent* Sender, class UStatusEffect* StatusEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TTDStatusEffectsWidget.OnStatusEffectAdded");

	UTTDStatusEffectsWidget_OnStatusEffectAdded_Params params;
	params.Sender = Sender;
	params.StatusEffect = StatusEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TutorialList.AddNewCompletedTutorial
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ETutorialEvent                 TutorialEvent                  (Parm, ZeroConstructor, IsPlainOldData)

void UTutorialList::STATIC_AddNewCompletedTutorial(ETutorialEvent TutorialEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TutorialList.AddNewCompletedTutorial");

	UTutorialList_AddNewCompletedTutorial_Params params;
	params.TutorialEvent = TutorialEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TutorialManager.ShowTutorialEventMessage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ETutorialEvent                 TutorialEvent                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           bShowOncePerSession            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInfiniteDuration              (Parm, ZeroConstructor, IsPlainOldData)

void UTutorialManager::STATIC_ShowTutorialEventMessage(ETutorialEvent TutorialEvent, bool bShowOncePerSession, bool bInfiniteDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TutorialManager.ShowTutorialEventMessage");

	UTutorialManager_ShowTutorialEventMessage_Params params;
	params.TutorialEvent = TutorialEvent;
	params.bShowOncePerSession = bShowOncePerSession;
	params.bInfiniteDuration = bInfiniteDuration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TutorialManager.PlayerTargetChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bAdded                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UTutorialManager::STATIC_PlayerTargetChange(bool bAdded)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TutorialManager.PlayerTargetChange");

	UTutorialManager_PlayerTargetChange_Params params;
	params.bAdded = bAdded;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TutorialManager.PlayerTakeDamage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FCauseDamageInfo        CauseDamageInfo                (ConstParm, Parm, OutParm, ReferenceParm)

void UTutorialManager::STATIC_PlayerTakeDamage(const struct FCauseDamageInfo& CauseDamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TutorialManager.PlayerTakeDamage");

	UTutorialManager_PlayerTakeDamage_Params params;
	params.CauseDamageInfo = CauseDamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TutorialManager.PlayerSkillUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ESkill                         Skill                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            NewValue                       (Parm, ZeroConstructor, IsPlainOldData)

void UTutorialManager::STATIC_PlayerSkillUpdated(ESkill Skill, int NewValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TutorialManager.PlayerSkillUpdated");

	UTutorialManager_PlayerSkillUpdated_Params params;
	params.Skill = Skill;
	params.NewValue = NewValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TutorialManager.PlayerSkillCheckSuccess
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EXPGainReason                  Reason                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            XPEarned                       (Parm, ZeroConstructor, IsPlainOldData)
// ESkill                         SkillUsed                      (Parm, ZeroConstructor, IsPlainOldData)

void UTutorialManager::STATIC_PlayerSkillCheckSuccess(EXPGainReason Reason, int XPEarned, ESkill SkillUsed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TutorialManager.PlayerSkillCheckSuccess");

	UTutorialManager_PlayerSkillCheckSuccess_Params params;
	params.Reason = Reason;
	params.XPEarned = XPEarned;
	params.SkillUsed = SkillUsed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TutorialManager.PlayerMedKitUsed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTutorialManager::STATIC_PlayerMedKitUsed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TutorialManager.PlayerMedKitUsed");

	UTutorialManager_PlayerMedKitUsed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TutorialManager.PlayerLevelChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// int                            NewLevel                       (Parm, ZeroConstructor, IsPlainOldData)

void UTutorialManager::STATIC_PlayerLevelChanged(int NewLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TutorialManager.PlayerLevelChanged");

	UTutorialManager_PlayerLevelChanged_Params params;
	params.NewLevel = NewLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TutorialManager.PlayerLanded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          DistanceFell                   (Parm, ZeroConstructor, IsPlainOldData)

void UTutorialManager::STATIC_PlayerLanded(float DistanceFell)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TutorialManager.PlayerLanded");

	UTutorialManager_PlayerLanded_Params params;
	params.DistanceFell = DistanceFell;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TutorialManager.PlayerKill
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Victim                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FCauseDamageInfo        CauseDamageInfo                (ConstParm, Parm, OutParm, ReferenceParm)

void UTutorialManager::STATIC_PlayerKill(class AActor* Victim, const struct FCauseDamageInfo& CauseDamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TutorialManager.PlayerKill");

	UTutorialManager_PlayerKill_Params params;
	params.Victim = Victim;
	params.CauseDamageInfo = CauseDamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TutorialManager.PlayerItemAdded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              Item                           (ConstParm, Parm, OutParm, ReferenceParm)

void UTutorialManager::STATIC_PlayerItemAdded(const struct FItemStack& Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TutorialManager.PlayerItemAdded");

	UTutorialManager_PlayerItemAdded_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TutorialManager.PlayerHealthChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          HealthChanged                  (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)

void UTutorialManager::STATIC_PlayerHealthChanged(float HealthChanged, class AActor* Instigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TutorialManager.PlayerHealthChanged");

	UTutorialManager_PlayerHealthChanged_Params params;
	params.HealthChanged = HealthChanged;
	params.Instigator = Instigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TutorialManager.PlayerFinishedEquipping
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UWeapon*                 Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UTutorialManager::STATIC_PlayerFinishedEquipping(class UWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TutorialManager.PlayerFinishedEquipping");

	UTutorialManager_PlayerFinishedEquipping_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TutorialManager.PlayerEnteredRestrictedArea
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class ARestrictedArea*         RestrictedArea                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UTutorialManager::STATIC_PlayerEnteredRestrictedArea(class ARestrictedArea* RestrictedArea)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TutorialManager.PlayerEnteredRestrictedArea");

	UTutorialManager_PlayerEnteredRestrictedArea_Params params;
	params.RestrictedArea = RestrictedArea;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TutorialManager.PlayerEncumberedChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bEncumbered                    (Parm, ZeroConstructor, IsPlainOldData)

void UTutorialManager::STATIC_PlayerEncumberedChanged(bool bEncumbered)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TutorialManager.PlayerEncumberedChanged");

	UTutorialManager_PlayerEncumberedChanged_Params params;
	params.bEncumbered = bEncumbered;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TutorialManager.PlayerDisguiseDrainEnd
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTutorialManager::STATIC_PlayerDisguiseDrainEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TutorialManager.PlayerDisguiseDrainEnd");

	UTutorialManager_PlayerDisguiseDrainEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TutorialManager.PlayerCompanionKilled
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AActor*                  Companion                      (Parm, ZeroConstructor, IsPlainOldData)

void UTutorialManager::STATIC_PlayerCompanionKilled(class AActor* Companion)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TutorialManager.PlayerCompanionKilled");

	UTutorialManager_PlayerCompanionKilled_Params params;
	params.Companion = Companion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TutorialManager.PlayerCompanionAdded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AIndianaAiCharacter*     NPC                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRegister                      (Parm, ZeroConstructor, IsPlainOldData)

void UTutorialManager::STATIC_PlayerCompanionAdded(class AIndianaAiCharacter* NPC, bool bRegister)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TutorialManager.PlayerCompanionAdded");

	UTutorialManager_PlayerCompanionAdded_Params params;
	params.NPC = NPC;
	params.bRegister = bRegister;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TutorialManager.PlayerCombatStateChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// bool                           bIsInCombat                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRestoring                     (Parm, ZeroConstructor, IsPlainOldData)

void UTutorialManager::STATIC_PlayerCombatStateChanged(bool bIsInCombat, bool bRestoring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TutorialManager.PlayerCombatStateChanged");

	UTutorialManager_PlayerCombatStateChanged_Params params;
	params.bIsInCombat = bIsInCombat;
	params.bRestoring = bRestoring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TutorialManager.PlayerCausedDamage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FCauseDamageInfo        CauseDamageInfo                (ConstParm, Parm, OutParm, ReferenceParm)

void UTutorialManager::STATIC_PlayerCausedDamage(const struct FCauseDamageInfo& CauseDamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TutorialManager.PlayerCausedDamage");

	UTutorialManager_PlayerCausedDamage_Params params;
	params.CauseDamageInfo = CauseDamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TutorialManager.MarkTutorialEventComplete
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ETutorialEvent                 TutorialEvent                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UTutorialManager::STATIC_MarkTutorialEventComplete(ETutorialEvent TutorialEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TutorialManager.MarkTutorialEventComplete");

	UTutorialManager_MarkTutorialEventComplete_Params params;
	params.TutorialEvent = TutorialEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TutorialManager.ItemDamageStatusChange
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EItemDegradationState          DegredationState               (Parm, ZeroConstructor, IsPlainOldData)

void UTutorialManager::STATIC_ItemDamageStatusChange(EItemDegradationState DegredationState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TutorialManager.ItemDamageStatusChange");

	UTutorialManager_ItemDamageStatusChange_Params params;
	params.DegredationState = DegredationState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TutorialManager.IsTutorialEventCompleted
// (Final)
// Parameters:
// ETutorialEvent                 TutorialEvent                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTutorialManager::IsTutorialEventCompleted(ETutorialEvent TutorialEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TutorialManager.IsTutorialEventCompleted");

	UTutorialManager_IsTutorialEventCompleted_Params params;
	params.TutorialEvent = TutorialEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.TutorialManager.HideTutorialEventMessage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// ETutorialEvent                 TutorialEvent                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UTutorialManager::STATIC_HideTutorialEventMessage(ETutorialEvent TutorialEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TutorialManager.HideTutorialEventMessage");

	UTutorialManager_HideTutorialEventMessage_Params params;
	params.TutorialEvent = TutorialEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TutorialPopupStyleWidget.SetNewBackingMaterialHeight
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// float                          NewHeight                      (Parm, ZeroConstructor, IsPlainOldData)

void UTutorialPopupStyleWidget::STATIC_SetNewBackingMaterialHeight(float NewHeight)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TutorialPopupStyleWidget.SetNewBackingMaterialHeight");

	UTutorialPopupStyleWidget_SetNewBackingMaterialHeight_Params params;
	params.NewHeight = NewHeight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.TutorialPopupStyleWidget.FadeInMascotImage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UTutorialPopupStyleWidget::STATIC_FadeInMascotImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.TutorialPopupStyleWidget.FadeInMascotImage");

	UTutorialPopupStyleWidget_FadeInMascotImage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.VendorComponent.SetVendorContainer
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class AContainer*              Container                      (Parm, ZeroConstructor, IsPlainOldData)

void UVendorComponent::STATIC_SetVendorContainer(class AContainer* Container)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.VendorComponent.SetVendorContainer");

	UVendorComponent_SetVendorContainer_Params params;
	params.Container = Container;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.VendorWidget.UpdateSubnavigationActivation
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UVendorWidget::STATIC_UpdateSubnavigationActivation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.VendorWidget.UpdateSubnavigationActivation");

	UVendorWidget_UpdateSubnavigationActivation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.VendorWidget.OnStoreItemRemoved
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)

void UVendorWidget::STATIC_OnStoreItemRemoved(const struct FItemStack& ItemStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.VendorWidget.OnStoreItemRemoved");

	UVendorWidget_OnStoreItemRemoved_Params params;
	params.ItemStack = ItemStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.VendorWidget.OnStoreItemAdded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)

void UVendorWidget::STATIC_OnStoreItemAdded(const struct FItemStack& ItemStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.VendorWidget.OnStoreItemAdded");

	UVendorWidget_OnStoreItemAdded_Params params;
	params.ItemStack = ItemStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.VendorWidget.OnSetCurrentPage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EVendorPages                   Page                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAnimate                       (Parm, ZeroConstructor, IsPlainOldData)

void UVendorWidget::STATIC_OnSetCurrentPage(EVendorPages Page, bool bAnimate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.VendorWidget.OnSetCurrentPage");

	UVendorWidget_OnSetCurrentPage_Params params;
	params.Page = Page;
	params.bAnimate = bAnimate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.VendorWidget.OnPlayerItemRemoved
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)

void UVendorWidget::STATIC_OnPlayerItemRemoved(const struct FItemStack& ItemStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.VendorWidget.OnPlayerItemRemoved");

	UVendorWidget_OnPlayerItemRemoved_Params params;
	params.ItemStack = ItemStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.VendorWidget.OnPlayerItemAdded
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)

void UVendorWidget::STATIC_OnPlayerItemAdded(const struct FItemStack& ItemStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.VendorWidget.OnPlayerItemAdded");

	UVendorWidget_OnPlayerItemAdded_Params params;
	params.ItemStack = ItemStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.VendorWidget.OnItemInspectorClosed
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UItemInspectorWidget*    ItemInspectorWidget            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UVendorWidget::STATIC_OnItemInspectorClosed(class UItemInspectorWidget* ItemInspectorWidget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.VendorWidget.OnItemInspectorClosed");

	UVendorWidget_OnItemInspectorClosed_Params params;
	params.ItemInspectorWidget = ItemInspectorWidget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.VendorWidget.OnAnimationSoldJunk
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UVendorWidget::STATIC_OnAnimationSoldJunk()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.VendorWidget.OnAnimationSoldJunk");

	UVendorWidget_OnAnimationSoldJunk_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.VendorWidget.OnAnimationSoldItem
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UVendorWidget::STATIC_OnAnimationSoldItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.VendorWidget.OnAnimationSoldItem");

	UVendorWidget_OnAnimationSoldItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.VendorWidget.OnAnimationRepairedItem
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UVendorWidget::STATIC_OnAnimationRepairedItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.VendorWidget.OnAnimationRepairedItem");

	UVendorWidget_OnAnimationRepairedItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.VendorWidget.OnAnimationBoughtItem
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UVendorWidget::STATIC_OnAnimationBoughtItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.VendorWidget.OnAnimationBoughtItem");

	UVendorWidget_OnAnimationBoughtItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.VendorWidget.FadeInFactionImage
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UVendorWidget::STATIC_FadeInFactionImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.VendorWidget.FadeInFactionImage");

	UVendorWidget_FadeInFactionImage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.WaitTimeSliderWidget.OnValueChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FSliderEvent            Event                          (ConstParm, Parm, OutParm, ReferenceParm)

void UWaitTimeSliderWidget::STATIC_OnValueChanged(const struct FSliderEvent& Event)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WaitTimeSliderWidget.OnValueChanged");

	UWaitTimeSliderWidget_OnValueChanged_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.WaitTimeWidget.OnSliderValueChanged
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FSliderEvent            Event                          (ConstParm, Parm, OutParm, ReferenceParm)

void UWaitTimeWidget::STATIC_OnSliderValueChanged(const struct FSliderEvent& Event)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WaitTimeWidget.OnSliderValueChanged");

	UWaitTimeWidget_OnSliderValueChanged_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.WaitTimeWidget.OnInputConfirm
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UWaitTimeWidget::STATIC_OnInputConfirm()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WaitTimeWidget.OnInputConfirm");

	UWaitTimeWidget_OnInputConfirm_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.WaitTimeWidget.OnInputBack
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UWaitTimeWidget::STATIC_OnInputBack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WaitTimeWidget.OnInputBack");

	UWaitTimeWidget_OnInputBack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.WorkbenchPageWidget.OnItemRemoved
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// struct FItemStack              ItemStack                      (ConstParm, Parm, OutParm, ReferenceParm)

void UWorkbenchPageWidget::STATIC_OnItemRemoved(const struct FItemStack& ItemStack)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WorkbenchPageWidget.OnItemRemoved");

	UWorkbenchPageWidget_OnItemRemoved_Params params;
	params.ItemStack = ItemStack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.WorkbenchPageWidget.OnDragDrop_SwapWeaponSlot
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UIndianaDragDropOperation* Operation                      (Parm, ZeroConstructor, IsPlainOldData)

void UWorkbenchPageWidget::STATIC_OnDragDrop_SwapWeaponSlot(class UIndianaDragDropOperation* Operation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WorkbenchPageWidget.OnDragDrop_SwapWeaponSlot");

	UWorkbenchPageWidget_OnDragDrop_SwapWeaponSlot_Params params;
	params.Operation = Operation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.WorkbenchPageWidget.OnDragDrop_SetWeaponSlot
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UIndianaDragDropOperation* Operation                      (Parm, ZeroConstructor, IsPlainOldData)

void UWorkbenchPageWidget::STATIC_OnDragDrop_SetWeaponSlot(class UIndianaDragDropOperation* Operation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WorkbenchPageWidget.OnDragDrop_SetWeaponSlot");

	UWorkbenchPageWidget_OnDragDrop_SetWeaponSlot_Params params;
	params.Operation = Operation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.WorkbenchPageWidget.OnDragDrop_ClearArmorSlot
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class UIndianaDragDropOperation* Operation                      (Parm, ZeroConstructor, IsPlainOldData)

void UWorkbenchPageWidget::STATIC_OnDragDrop_ClearArmorSlot(class UIndianaDragDropOperation* Operation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WorkbenchPageWidget.OnDragDrop_ClearArmorSlot");

	UWorkbenchPageWidget_OnDragDrop_ClearArmorSlot_Params params;
	params.Operation = Operation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Weapon.OnStatUpdated
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// class URpgStat*                Stat                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UWeapon::STATIC_OnStatUpdated(class URpgStat* Stat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Weapon.OnStatUpdated");

	UWeapon_OnStatUpdated_Params params;
	params.Stat = Stat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Weapon.OnAnimNotifyEvent
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)
// Parameters:
// EAnimNotify                    AnimNotifyEvent                (Parm, ZeroConstructor, IsPlainOldData)

void UWeapon::STATIC_OnAnimNotifyEvent(EAnimNotify AnimNotifyEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Weapon.OnAnimNotifyEvent");

	UWeapon_OnAnimNotifyEvent_Params params;
	params.AnimNotifyEvent = AnimNotifyEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.Weapon.IsUnequipping
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeapon::IsUnequipping()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Weapon.IsUnequipping");

	UWeapon_IsUnequipping_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Weapon.IsOnActiveWorld
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeapon::IsOnActiveWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Weapon.IsOnActiveWorld");

	UWeapon_IsOnActiveWorld_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Weapon.IsNearbyEvidence
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeapon::IsNearbyEvidence()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Weapon.IsNearbyEvidence");

	UWeapon_IsNearbyEvidence_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Weapon.IsHealGun
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeapon::IsHealGun()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Weapon.IsHealGun");

	UWeapon_IsHealGun_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Weapon.IsEquipping
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeapon::IsEquipping()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Weapon.IsEquipping");

	UWeapon_IsEquipping_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Weapon.GetWeaponModContainer
// ()
// Parameters:
// class UWeaponModContainer*     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWeaponModContainer* UWeapon::GetWeaponModContainer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Weapon.GetWeaponModContainer");

	UWeapon_GetWeaponModContainer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Weapon.GetStats
// ()
// Parameters:
// class URpgStatComponent*       ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class URpgStatComponent* UWeapon::GetStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Weapon.GetStats");

	UWeapon_GetStats_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Weapon.GetRadialDamageOuterRadius
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UWeapon::GetRadialDamageOuterRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Weapon.GetRadialDamageOuterRadius");

	UWeapon_GetRadialDamageOuterRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Weapon.GetProjectileCollisionRadius
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UWeapon::GetProjectileCollisionRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Weapon.GetProjectileCollisionRadius");

	UWeapon_GetProjectileCollisionRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Weapon.GetPrimaryMode
// ()
// Parameters:
// class UWeaponMode*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWeaponMode* UWeapon::GetPrimaryMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Weapon.GetPrimaryMode");

	UWeapon_GetPrimaryMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Weapon.GetMesh
// ()
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USkeletalMeshComponent* UWeapon::GetMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Weapon.GetMesh");

	UWeapon_GetMesh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Weapon.GetCurrentVisuals
// ()
// Parameters:
// class UPrimaryWeaponVisuals*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UPrimaryWeaponVisuals* UWeapon::GetCurrentVisuals()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Weapon.GetCurrentVisuals");

	UWeapon_GetCurrentVisuals_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Weapon.GetCurrentMode
// ()
// Parameters:
// class UWeaponMode*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWeaponMode* UWeapon::GetCurrentMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Weapon.GetCurrentMode");

	UWeapon_GetCurrentMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Weapon.GetCharacterInfoComponent
// ()
// Parameters:
// class UCharacterInfoComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UCharacterInfoComponent* UWeapon::GetCharacterInfoComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Weapon.GetCharacterInfoComponent");

	UWeapon_GetCharacterInfoComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Weapon.GetAmmoPool
// ()
// Parameters:
// class UAmmoPoolBase*           ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UAmmoPoolBase* UWeapon::GetAmmoPool()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Weapon.GetAmmoPool");

	UWeapon_GetAmmoPool_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.Weapon.GetAISettings
// (BlueprintCosmetic)
// Parameters:
// class AIndianaAiCharacter*     InOwner                        (Parm, ZeroConstructor, IsPlainOldData)
// class UAISettings_Weapon*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAISettings_Weapon* UWeapon::GetAISettings(class AIndianaAiCharacter* InOwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.Weapon.GetAISettings");

	UWeapon_GetAISettings_Params params;
	params.InOwner = InOwner;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.WeaponAnimInstance.WeaponCharging
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeaponAnimInstance::WeaponCharging()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponAnimInstance.WeaponCharging");

	UWeaponAnimInstance_WeaponCharging_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.WeaponSelectWidget.OnInputBack
// (Final, RequiredAPI, BlueprintAuthorityOnly, BlueprintCosmetic, Net, NetReliable, NetRequest, Exec, Native, Event, NetResponse, Static, NetMulticast)

void UWeaponSelectWidget::STATIC_OnInputBack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponSelectWidget.OnInputBack");

	UWeaponSelectWidget_OnInputBack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Indiana.WeaponSelectWidget.IsWeaponSectionValid
// (BlueprintAuthorityOnly)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeaponSelectWidget::IsWeaponSectionValid(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponSelectWidget.IsWeaponSectionValid");

	UWeaponSelectWidget_IsWeaponSectionValid_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.WeaponSelectWidget.IsSectionValid
// (BlueprintAuthorityOnly)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeaponSelectWidget::IsSectionValid(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponSelectWidget.IsSectionValid");

	UWeaponSelectWidget_IsSectionValid_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.WeaponSelectWidget.IsAmmoSectionValid
// (BlueprintAuthorityOnly)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeaponSelectWidget::IsAmmoSectionValid(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponSelectWidget.IsAmmoSectionValid");

	UWeaponSelectWidget_IsAmmoSectionValid_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Indiana.WeaponSelectWidget.HasAmmo
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeaponSelectWidget::HasAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Indiana.WeaponSelectWidget.HasAmmo");

	UWeaponSelectWidget_HasAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
